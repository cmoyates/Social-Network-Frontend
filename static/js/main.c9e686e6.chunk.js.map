{"version":3,"sources":["pages/Home.js","components/Comments.js","components/PostCard.js","components/SubmitPostDialog.js","components/SubmitCommentDilog.js","pages/Feed.js","pages/PageNotFound.js","components/ProtectedRoute.js","pages/SinglePostPage.js","pages/ProfilePage.js","components/SettingsMenu.js","components/ColorPickerCell.js","components/ColorPicker.js","components/ProfileSearchBar.js","components/LoggedInPage.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","responseGoogleSuccess","response","a","profileIsNew","profile","fetch","profileObj","email","res","json","data","console","log","newProfile","user_email","user_name","name","img_url","imageUrl","method","headers","body","JSON","stringify","profiles_following","profile_id","setProfile","setIsAuth","isAuth","to","style","position","left","top","transform","clientId","buttonText","onSuccess","onFailure","isSignedIn","cookiePolicy","useStyles","makeStyles","theme","cardHeader","display","flexDirection","alignItems","nameText","paddingLeft","Comments","classes","history","useHistory","goToCommenterProfile","item","isSinglePostPage","push","user_id","commentList","length","map","index","Divider","CardContent","className","Avatar","src","user_img","onClick","content","PostCard","useState","post","setPost","useEffect","goToPosterProfile","likeAPost","likes","includes","viewer_ID","filter","post_id","newPost","Card","margin","CardActions","Grid","container","direction","justifyContent","Button","size","color","disabled","startIcon","orientation","flexItem","commentCallback","setSnackbarOpen","navigator","clipboard","writeText","comments","SubmitPostDialog","setContent","Dialog","open","onClose","handleClose","DialogTitle","id","DialogContent","TextField","value","onChange","e","target","autoFocus","label","fullWidth","multiline","DialogActions","handleSubmit","SubmitCommentDialog","root","flexGrow","menuButton","marginRight","spacing","title","Feed","posts","setPosts","commentingPost","setCommentingPost","postDialogOpen","setPostDialogOpen","commentDialogOpen","setCommentDialogOpen","snackbarOpen","handleSubmitPost","fetchPosts","handleSubmitComment","comment","document","primary_color","handleSnackbarClose","event","reason","variant","Container","maxWidth","Snackbar","autoHideDuration","message","action","IconButton","fontSize","PageNotFound","ProtectedRoute","Component","component","rest","render","pathname","state","from","location","SinglePostPage","useParams","fetchPost","justify","minHeight","ProfilePage","pageProfile","setPageProfile","setLoading","fetchPageProfile","fetchPageProfilePosts","followProfile","parseInt","SettingsMenu","Popper","anchorEl","role","undefined","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","renderProps","MenuItem","onLogoutSuccess","logout","accColorClick","ColorPickerCell","square","submit","backgroundColor","width","height","colors","ColorPicker","xs","boarderColor","notchedOutline","CssTextField","withStyles","ProfileSearchBar","inputValue","setInputValue","setOpen","Autocomplete","disableClearable","options","profiles","getOptionLabel","option","onOpen","onInputChange","newInputValue","popupIcon","hasPopupIcon","hasClearIcon","renderInput","params","InputProps","type","LoggedInPage","menuOpen","setMenuOpen","colorDialogOpen","setColorDialogOpen","primaryColor","setPrimaryColor","setProfiles","anchorRef","useRef","fetchProfiles","handleSubmitColor","createTheme","palette","primary","light","main","dark","contrastText","secondary","ThemeProvider","AppBar","Toolbar","Typography","ref","page","current","contains","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c9e686e6.chunk.js","sourcesContent":["import React from 'react'\r\nimport GoogleLogin from 'react-google-login';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Home = (props) => {\r\n\r\n    const responseGoogleSuccess = async (response) => {\r\n        let profileIsNew = false;\r\n        let profile = null;\r\n        try {\r\n            const res = await fetch('https://fast-coast-04774.herokuapp.com/profiles/email/' + response.profileObj.email);\r\n            const data = await res.json();\r\n            profile = data;\r\n            //console.log(\"Data\");\r\n            //console.log(data);\r\n            console.log(\"Profile Exists!\");\r\n        } catch (error) {\r\n            console.log(error);\r\n            profileIsNew = true;\r\n        }\r\n\r\n        if (profileIsNew) {\r\n            console.log(\"Creating new Profile...\");\r\n            try {\r\n                const newProfile = {\r\n                    user_email: response.profileObj.email,\r\n                    user_name: response.profileObj.name,\r\n                    img_url: response.profileObj.imageUrl,\r\n                };\r\n                //console.log(newProfile);\r\n                const res = await fetch(\"https://fast-coast-04774.herokuapp.com/profiles\", {\r\n                    method: \"POST\",\r\n                    headers : { \r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(newProfile)\r\n                });\r\n                profile = await res.json();\r\n\r\n                profile.profiles_following = [profile.profile_id];\r\n                await fetch(\"https://fast-coast-04774.herokuapp.com/profiles/\" + profile.profile_id, {\r\n                    method: \"PUT\",\r\n                    headers : { \r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(profile)\r\n                });\r\n                console.log(\"Profile Created!\");\r\n            } catch (error) {\r\n                console.log(error);\r\n                return;\r\n            }\r\n        }\r\n        //console.log(profile);\r\n        props.setProfile(profile);\r\n        //console.log(\"Profile\");\r\n        //console.log(profile);\r\n        props.setIsAuth(true);\r\n        //console.log(response);\r\n        console.log(\"Login Successful\");\r\n    }\r\n    const responseGoogleFailure = (response) => {\r\n        console.log(\"Login Failed\");\r\n        console.log(response);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/feed\"/>;\r\n    }\r\n    else {\r\n        return (\r\n            <div\r\n            style={{\r\n                position: 'absolute', left: '50%', top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n            }}\r\n            >\r\n                <h1>Welcome to the Social Network!</h1>\r\n                <p>\r\n                    <GoogleLogin\r\n                        clientId=\"399415598384-sgkom02f57l549gtnn877013fg004ke5.apps.googleusercontent.com\"\r\n                        buttonText=\"Login\"\r\n                        onSuccess={responseGoogleSuccess}\r\n                        onFailure={responseGoogleFailure}\r\n                        isSignedIn={true}\r\n                        cookiePolicy={'single_host_origin'}\r\n                    />\r\n                </p>\r\n            </div>\r\n        );\r\n    }    \r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardHeader: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: \"center\"\r\n    },\r\n    nameText: {\r\n        paddingLeft: \"10px\",\r\n    }\r\n}));\r\n\r\nconst Comments = (props) => {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    const goToCommenterProfile = (item) => {\r\n        if (!props.isSinglePostPage) {\r\n            history.push('/profile/' + item.user_id);\r\n        }\r\n    }\r\n\r\n    return ((props.commentList.length > 0) ?\r\n        <div>\r\n            {props.commentList.map((item, index) => (\r\n                <div key={index}>\r\n                    <Divider/>\r\n                    <CardContent>\r\n                        <div className={classes.cardHeader}>\r\n                            <Avatar src={item.user_img} onClick={()=>{goToCommenterProfile(item)}}/>\r\n                            <h4 className={classes.nameText} onClick={()=>{goToCommenterProfile(item)}}>{item.user_name}</h4>\r\n                        </div>\r\n                        <Divider/>\r\n                        <p>{item.content}</p>\r\n                    </CardContent>\r\n                </div>\r\n            ))}\r\n        </div> : null\r\n    )\r\n}\r\n\r\nexport default Comments\r\n","import React from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { useState, useEffect } from 'react';\r\nimport Comments from './Comments';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardHeader: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: \"center\"\r\n    },\r\n    nameText: {\r\n        paddingLeft: \"10px\",\r\n    }\r\n}));\r\n\r\nconst PostCard = (props) => {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    const [post, setPost] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setPost(props.post);\r\n    }, [])\r\n\r\n    const goToPosterProfile = () => {\r\n        if (!isSinglePostPage) {\r\n            history.push('/profile/' + post.user_id);\r\n        }\r\n    }\r\n\r\n    const likeAPost = async () => {\r\n        if (props.post.likes.includes(props.viewer_ID)) {\r\n            props.post.likes = props.post.likes.filter(item => item !== props.viewer_ID)\r\n        }\r\n        else {\r\n            props.post.likes.push(props.viewer_ID);\r\n        }\r\n\r\n        const newPost = await fetch(\"https://fast-coast-04774.herokuapp.com/posts/\" + props.post.post_id, {\r\n            method: \"PUT\",\r\n            headers : { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify(props.post)\r\n        });\r\n        setPost(newPost);\r\n    }\r\n\r\n    const isSinglePostPage = props.viewer_ID === -1;\r\n\r\n    return (\r\n        <Card style={{margin: 20,}}>\r\n            <CardContent>\r\n                <div className={classes.cardHeader}>\r\n                    <Avatar src={props.post.user_img} onClick={goToPosterProfile}/>\r\n                    <h3 className={classes.nameText} onClick={goToPosterProfile}>{props.post.user_name}</h3>\r\n                </div>\r\n                <Divider/>\r\n                <p>{props.post.content}</p>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardActions>\r\n                <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n                >\r\n                    <Button size={\"small\"} color={(props.post.likes.includes(props.viewer_ID)) ? \"primary\" : \"default\"} disabled={isSinglePostPage} startIcon={<ThumbUpIcon />} onClick={() => {\r\n                        likeAPost();\r\n                    }}>Like ({props.post.likes.length})</Button>\r\n                    <Divider orientation=\"vertical\" flexItem />\r\n                    <Button size={\"small\"} disabled={isSinglePostPage} startIcon={<CommentIcon />} onClick={() => {\r\n                        //console.log(\"Comment\");\r\n                        props.commentCallback();\r\n                    }}>Comment</Button>\r\n                    <Divider orientation=\"vertical\" flexItem />\r\n                    <Button size={\"small\"} startIcon={<ShareIcon />} onClick={() => {\r\n                        //console.log(\"Share\");\r\n                        props.setSnackbarOpen(true);\r\n                        navigator.clipboard.writeText(\"https://cmoyates.github.io/Social-Network-Frontend/#/post/\" + props.post.post_id);\r\n                    }}>Share</Button>\r\n                </Grid>\r\n            </CardActions>\r\n            <Comments commentList={props.post.comments.commentList} isSinglePostPage={isSinglePostPage}/>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default PostCard","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport {useState} from 'react';\r\n\r\nfunction SubmitPostDialog(props) {\r\n\r\n    const [content, setContent] = useState(\"\");\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Post</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        value={content} onChange={(e) => {setContent(e.target.value)}}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"content\"\r\n                        label=\"Content\"\r\n                        fullWidth\r\n                        multiline\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={async () => {\r\n                    await props.handleSubmit({\r\n                        user_id: props.profile.profile_id,\r\n                        user_name: props.profile.user_name,\r\n                        user_img: props.profile.img_url,\r\n                        content: content\r\n                    });\r\n                }} color=\"primary\">\r\n                    Submit\r\n                </Button>\r\n                <Button onClick={props.handleClose} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SubmitPostDialog;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport {useState} from 'react';\r\n\r\nfunction SubmitCommentDialog(props) {\r\n\r\n    const [content, setContent] = useState(\"\");\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Comment</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        value={content} onChange={(e) => {setContent(e.target.value)}}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"content\"\r\n                        label=\"Content\"\r\n                        fullWidth\r\n                        multiline\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={async () => {\r\n                    await props.handleSubmit({\r\n                        user_id: props.profile.profile_id,\r\n                        user_name: props.profile.user_name,\r\n                        user_img: props.profile.img_url,\r\n                        content: content\r\n                    });\r\n                }} color=\"primary\">\r\n                    Submit\r\n                </Button>\r\n                <Button onClick={props.handleClose} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SubmitCommentDialog;","import React from 'react'\r\nimport PostCard from \"../components/PostCard.js\";\r\nimport SubmitPostDialog from '../components/SubmitPostDialog';\r\nimport SubmitCommentDialog from '../components/SubmitCommentDilog.js';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n//import Avatar from '@material-ui/core/Avatar';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {useState, useEffect} from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\n\r\nconst Feed = (props) => {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [commentingPost, setCommentingPost] = useState(null);\r\n    const [postDialogOpen, setPostDialogOpen] = useState(false);\r\n    const [commentDialogOpen, setCommentDialogOpen] = useState(false);\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n    const handleSubmitPost = async (post) => {\r\n        setPostDialogOpen(false);\r\n        //console.log(post)\r\n        const newPost = await fetch(\"https://fast-coast-04774.herokuapp.com/posts\", {\r\n        method: \"POST\",\r\n        headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify(post)\r\n        });\r\n        await fetchPosts();\r\n    };\r\n\r\n    const handleSubmitComment = async (comment) => {\r\n        setCommentDialogOpen(false);\r\n        commentingPost.comments.commentList.push(comment);\r\n        const newPost = await fetch(\"https://fast-coast-04774.herokuapp.com/posts/\" + commentingPost.post_id, {\r\n        method: \"PUT\",\r\n        headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify(commentingPost)\r\n        });\r\n    }\r\n\r\n    const fetchPosts = async () => {\r\n        const res = await fetch('https://fast-coast-04774.herokuapp.com/posts/following/' + props.profile.profile_id);\r\n        const data = await res.json();\r\n        console.log(\"Posts\");\r\n        console.log(data);\r\n        setPosts(data);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        document.title = \"Social Network\"\r\n            console.log(\"Test\")\r\n            fetchPosts();\r\n    }, [props.profile.primary_color])\r\n\r\n    const classes = useStyles();\r\n    \r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n    \r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            <Button variant=\"contained\" color=\"primary\" size={\"medium\"} onClick={() => {setPostDialogOpen(true);}}><b>Post</b></Button>\r\n            <Container maxWidth=\"sm\">\r\n                {posts.map((item) => (<PostCard key={item.post_id} post={item} viewer_ID={props.profile.profile_id} setSnackbarOpen={setSnackbarOpen} commentCallback={() => {\r\n                    setCommentingPost(item);\r\n                    setCommentDialogOpen(true);\r\n                }}/>))}\r\n            </Container>\r\n            <SubmitPostDialog open={postDialogOpen} handleClose={() => {setPostDialogOpen(false);}} handleSubmit={handleSubmitPost} profile={props.profile}/>\r\n            <SubmitCommentDialog open={commentDialogOpen} handleClose={() => {setCommentDialogOpen(false);}} handleSubmit={handleSubmitComment} profile={props.profile} post={commentingPost}/>\r\n            <Snackbar\r\n                open={snackbarOpen}\r\n                autoHideDuration={3000}\r\n                onClose={handleSnackbarClose}\r\n                message=\"Link copied to clipboard\"\r\n                action={\r\n                    <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleSnackbarClose}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed","import React from 'react'\r\n\r\nconst PageNotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>404: Page not found</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageNotFound\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({component: Component, isAuth, ...rest}) => {\r\n    return (\r\n        <Route {...rest} render={\r\n            (props) => {\r\n                if (isAuth) {\r\n                    return <Component {...props}/>\r\n                }\r\n                else {\r\n                    return <Redirect to={\r\n                        {\r\n                            pathname: '/',\r\n                            state: {\r\n                                from: props.location\r\n                            }\r\n\r\n                        }\r\n                    }/>\r\n                }\r\n                \r\n            }\r\n        }/>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute\r\n","import React from 'react'\r\nimport PostCard from '../components/PostCard'\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useState, useEffect} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst SinglePostPage = () => {\r\n\r\n    let { id } = useParams();\r\n\r\n    const [post, setPost] = useState(null);\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n    const fetchPost = async () => {\r\n        setPost(null);\r\n        const res = await fetch('https://fast-coast-04774.herokuapp.com/posts/' + id);\r\n        const data = await res.json();\r\n        document.title = \"Social Network\"\r\n\r\n        console.log(data);\r\n        setPost(data);\r\n    }\r\n    useEffect( () => {\r\n        fetchPost();\r\n    }, [id])\r\n\r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n        return;\r\n        }\r\n    \r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    return (\r\n        (post) ? \r\n        <div>\r\n            <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\" style={{minHeight: \"100vh\"}}>\r\n                <Grid item>\r\n                    <PostCard key={post.post_id} post={post} viewer_ID={-1} setSnackbarOpen={setSnackbarOpen}/>\r\n                </Grid>\r\n            </Grid>\r\n            <Snackbar\r\n                open={snackbarOpen}\r\n                autoHideDuration={3000}\r\n                onClose={handleSnackbarClose}\r\n                message=\"Link copied to clipboard\"\r\n                action={\r\n                    <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleSnackbarClose}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                }\r\n            />\r\n        </div> :\r\n        null\r\n    )\r\n}\r\n\r\nexport default SinglePostPage","import React from 'react'\r\nimport {useParams, Redirect} from \"react-router-dom\";\r\nimport {useState, useEffect} from 'react';\r\nimport PostCard from '../components/PostCard';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SubmitCommentDialog from '../components/SubmitCommentDilog';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nconst ProfilePage = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    let { id } = useParams();\r\n\r\n    const [pageProfile, setPageProfile] = useState(null);\r\n    const [posts, setPosts] = useState([]);\r\n    const [commentDialogOpen, setCommentDialogOpen] = useState(false);\r\n    const [commentingPost, setCommentingPost] = useState(null);\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const fetchPageProfile = async () => {\r\n        try {\r\n            setPageProfile(null);\r\n            const res = await fetch('https://fast-coast-04774.herokuapp.com/profiles/' + id);\r\n            const data = await res.json();\r\n            document.title = data.user_name\r\n\r\n            console.log(data);\r\n            setPageProfile(data);\r\n            await fetchPageProfilePosts();\r\n        } catch (error) {\r\n            setPageProfile(-1);\r\n        }\r\n    }\r\n\r\n    const fetchPageProfilePosts = async () => {\r\n        const res = await fetch('https://fast-coast-04774.herokuapp.com/posts/user/' + id);\r\n        const data = await res.json();\r\n\r\n        console.log(data);\r\n        setPosts(data);\r\n    }\r\n\r\n    const handleSubmitComment = async (comment) => {\r\n        setCommentDialogOpen(false);\r\n        commentingPost.comments.commentList.push(comment);\r\n        const newPost = await fetch(\"https://fast-coast-04774.herokuapp.com/posts/\" + commentingPost.post_id, {\r\n        method: \"PUT\",\r\n        headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify(commentingPost)\r\n        });\r\n    }\r\n\r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n    \r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    const followProfile = async () => {\r\n        if (props.profile.profiles_following.includes(parseInt(id))) {\r\n            props.profile.profiles_following = props.profile.profiles_following.filter(item => item !== parseInt(id));\r\n        }\r\n        else {\r\n            props.profile.profiles_following.push(parseInt(id));\r\n        }\r\n        setLoading(true);\r\n        await fetch(\"https://fast-coast-04774.herokuapp.com/profiles/\" + props.profile.profile_id, {\r\n            method: \"PUT\",\r\n            headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify(props.profile)\r\n        });\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect( () => {\r\n        fetchPageProfile();\r\n    }, [id])\r\n\r\n    if (!pageProfile) {\r\n        return null;\r\n    }\r\n    else if (pageProfile === -1) {\r\n        return (<Redirect to={\r\n            {\r\n                pathname: '/404',\r\n                state: {\r\n                    from: props.location\r\n                }\r\n\r\n            }\r\n        }/>)\r\n    }\r\n    else {\r\n        return (\r\n            <div>\r\n                <h1>{pageProfile.user_name} {(parseInt(id) !== props.profile.profile_id) ? <Button variant=\"outlined\" onClick={()=>{followProfile();}}>{(props.profile.profiles_following.includes(parseInt(id))) ? \"Following\" : \"Follow\"}</Button> : null}</h1>\r\n                \r\n                <Container maxWidth=\"sm\">\r\n                    {posts.map((item) => (<PostCard key={item.post_id} post={item} viewer_ID={props.profile.profile_id} setSnackbarOpen={setSnackbarOpen} commentCallback={() => {\r\n                        setCommentingPost(item);\r\n                        setCommentDialogOpen(true);\r\n                    }}/>))}\r\n                </Container>\r\n                <SubmitCommentDialog open={commentDialogOpen} handleClose={() => {setCommentDialogOpen(false);}} handleSubmit={handleSubmitComment} profile={props.profile} post={commentingPost}/>\r\n                <Snackbar\r\n                    open={snackbarOpen}\r\n                    autoHideDuration={3000}\r\n                    onClose={handleSnackbarClose}\r\n                    message=\"Link copied to clipboard\"\r\n                    action={\r\n                        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleSnackbarClose}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfilePage","import React from 'react'\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { GoogleLogout } from 'react-google-login';\r\n\r\nconst SettingsMenu = (props) => {\r\n    return (\r\n        <Popper open={props.open} anchorEl={props.anchorEl} role={undefined} transition disablePortal>\r\n            {({ TransitionProps, placement }) => (\r\n                <Grow\r\n                {...TransitionProps}\r\n                style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                >\r\n                <Paper>\r\n                    <ClickAwayListener onClickAway={props.handleClose}>\r\n                    <MenuList autoFocusItem={props.open} id=\"menu-list-grow\">\r\n                        <GoogleLogout\r\n                            clientId=\"399415598384-sgkom02f57l549gtnn877013fg004ke5.apps.googleusercontent.com\"\r\n                            render={renderProps => (\r\n                                <MenuItem onClick={renderProps.onClick}  disabled={renderProps.disabled}>\r\n                                    Logout\r\n                                </MenuItem>\r\n                            )}\r\n                            buttonText=\"Logout\"\r\n                            onLogoutSuccess={props.logout}\r\n                        >\r\n                        </GoogleLogout>\r\n                        <MenuItem onClick={props.accColorClick}>\r\n                            Select Accent Color\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                    </ClickAwayListener>\r\n                </Paper>\r\n                </Grow>\r\n            )}\r\n        </Popper>\r\n    )\r\n}\r\n\r\nexport default SettingsMenu\r\n","import React from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst ColorPickerCell = (props) => {\r\n    return (\r\n        <Paper variant=\"outlined\" square={true} onClick={() => {props.submit(props.color);}} style={{\r\n            backgroundColor: props.color,\r\n            width: 37.5,\r\n            height: 32\r\n        }}></Paper>\r\n    )\r\n}\r\n\r\nexport default ColorPickerCell\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport ColorPickerCell from './ColorPickerCell';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst colors = [\r\n    \"#f44336\",\r\n    \"#e91e63\",\r\n    \"#9c27b0\",\r\n    \"#673ab7\",\r\n    \"#3f51b5\",\r\n    \"#2196f3\",\r\n    \"#03a9f4\",\r\n    \"#00bcd4\",\r\n    \"#009688\",\r\n    \"#4caf50\",\r\n    \"#8bc34a\",\r\n    \"#cddc39\",\r\n    \"#ffeb3b\",\r\n    \"#ffc107\",\r\n    \"#ff9800\",\r\n    \"#ff5722\"\r\n];\r\n\r\nconst ColorPicker = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Pick a Color</DialogTitle>\r\n                <DialogContent style={{width: 150}}>\r\n                    <Grid container spacing={0}>\r\n                        <Grid container item xs={12} spacing={0}>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell color={colors[0]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[1]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[2]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[3]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} spacing={0}>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[4]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[5]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[6]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[7]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} spacing={0}>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[8]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[9]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[10]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[11]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} spacing={0}>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[12]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[13]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[14]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[15]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions></DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ColorPicker\r\n","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {useState} from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        '&$disabled $notchedOutline': {\r\n            boarderColor: \"yellow !important\"\r\n        }\r\n    },\r\n    disabled: {},\r\n    notchedOutline: {}\r\n}));\r\n\r\nconst CssTextField = withStyles({\r\n    /*root: {\r\n      /*'& label.Mui-focused': {\r\n        color: 'green',\r\n      },\r\n      '& .MuiInput-underline:after': {\r\n        borderBottomColor: 'green',\r\n      },\r\n      '& .MuiOutlinedInput-root': {\r\n        '& fieldset': {\r\n          borderColor: '#ffffff',\r\n          background: '#ffffff'\r\n        },\r\n        '&:hover fieldset': {\r\n          borderColor: '#ffffff',\r\n        },\r\n        '&.Mui-focused fieldset': {\r\n          borderColor: '#ffffff',\r\n        },\r\n      },\r\n    },*/\r\n  })(TextField);\r\n\r\nconst ProfileSearchBar = (props) => {\r\n    let history = useHistory();\r\n\r\n    const classes = useStyles();\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleOpen = () => {\r\n        if (inputValue.length > 2) {\r\n            setOpen(true);\r\n        }\r\n    };\r\n    const handleInputChange = (event, newInputValue) => {\r\n        setInputValue(newInputValue);\r\n        setOpen(newInputValue.length > 2);\r\n    };\r\n\r\n    return (\r\n        <div style={{ width: 300 }}>\r\n            <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                disableClearable\r\n                options={props.profiles}\r\n                getOptionLabel={(option)=>{return option.user_name}}\r\n                open={open}\r\n                onOpen={handleOpen}\r\n                onClose={() => setOpen(false)}\r\n                inputValue={inputValue}\r\n                onInputChange={handleInputChange}\r\n                onChange={(event, value)=>{history.push('/profile/' + value.profile_id);}}\r\n                popupIcon={null}\r\n                style={{hasPopupIcon: false, hasClearIcon: false}}\r\n                renderInput={(params) => (\r\n                <CssTextField\r\n                    {...params}\r\n                    label=\"Search\"\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    InputProps={{ ...params.InputProps, type: 'search', classes: {\r\n                        root: classes.root,\r\n                        disabled: classes.disabled,\r\n                        notchedOutline: classes.notchedOutline\r\n                    }}}\r\n                />\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileSearchBar\r\n","import React from 'react'\r\n//import Button from '@material-ui/core/Button';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n//import CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { createTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport {useState, useEffect, useRef} from 'react';\r\nimport SettingsMenu from './SettingsMenu';\r\nimport ColorPicker from './ColorPicker';\r\nimport ProfileSearchBar from '../components/ProfileSearchBar.js';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nconst LoggedInPage = (props) => {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [colorDialogOpen, setColorDialogOpen] = useState(false);\r\n    const [primaryColor, setPrimaryColor] = useState('#3f50b5');\r\n    const [profiles, setProfiles] = useState([]);\r\n    const anchorRef = useRef(null);\r\n\r\n    const logout = () => {\r\n        console.log(\"Logout Successful\");\r\n        props.setProfile([]);\r\n        props.setIsAuth(false);\r\n    }\r\n\r\n    const fetchProfiles = async () => {\r\n        const res = await fetch('https://fast-coast-04774.herokuapp.com/profiles');\r\n        const data = await res.json();\r\n        //console.log(data);\r\n        setProfiles(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchProfiles();\r\n    }, [])\r\n\r\n    const handleSubmitColor = async (color) => {\r\n        setColorDialogOpen(false);\r\n        setPrimaryColor(color);\r\n        //console.log(color);\r\n    }\r\n\r\n    const handleMenuClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n        setMenuOpen(false);\r\n    };\r\n\r\n    var theme = createTheme({\r\n        palette: {\r\n            primary: {\r\n                light: '#757ce8',\r\n                main: primaryColor,\r\n                dark: '#002884',\r\n                contrastText: '#fff',\r\n            },\r\n            secondary: {\r\n                light: '#ff7961',\r\n                main: '#f44336',\r\n                dark: '#ba000d',\r\n                contrastText: '#000',\r\n            },\r\n        },\r\n    });\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                        <Grid item>\r\n                        <Typography variant=\"h5\" onClick={()=>{history.push('/feed');}}>\r\n                            Social Network\r\n                        </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                        <div className={classes.title}>\r\n                            <ProfileSearchBar style={{flexGrow: 1}} profiles={profiles}/>\r\n                        </div>\r\n                        </Grid>\r\n                        <Grid item>\r\n                        <Typography onClick={()=>{history.push('/profile/' + props.profile.profile_id);}}>\r\n                            {props.profile.user_name}\r\n                        </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={() => {setMenuOpen(!menuOpen)}} ref={anchorRef} \r\n                        aria-controls={menuOpen ? 'menu-list-grow' : undefined} aria-haspopup=\"true\">\r\n                        <Avatar src={props.profile.img_url}/>\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {props.page}\r\n            <SettingsMenu open={menuOpen} anchorEl={anchorRef.current} handleClose={handleMenuClose} accColorClick={() => {setMenuOpen(false); setColorDialogOpen(true);}} logout={logout}/>\r\n            <ColorPicker open={colorDialogOpen} handleClose={() => {setColorDialogOpen(false);}} handleSubmit={handleSubmitColor}/>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default LoggedInPage","import './App.css';\nimport {HashRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\nimport Home from './pages/Home';\nimport Feed from './pages/Feed';\nimport PageNotFound from './pages/PageNotFound';\nimport {useState} from 'react';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport SinglePostPage from './pages/SinglePostPage';\nimport ProfilePage from './pages/ProfilePage';\nimport LoggedInPage from './components/LoggedInPage';\n\nfunction App() {\n\n  const [profile, setProfile] = useState([]);\n  const [isAuth, setIsAuth] = useState(false);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={()=><Home setProfile={setProfile} setIsAuth={setIsAuth} isAuth={isAuth}/>}/>\n          <ProtectedRoute path=\"/Feed\" isAuth={isAuth} component={(props)=><LoggedInPage {...props} profile={profile} setProfile={setProfile} isAuth={isAuth} setIsAuth={setIsAuth} page={<Feed profile={profile}/>}/>}/>\n          <Route exact path=\"/404\" component={PageNotFound}/>\n          <Route path=\"/post/:id\" component={SinglePostPage}/>\n          <ProtectedRoute path=\"/profile/:id\" profile={profile} isAuth={isAuth} component={(props)=><LoggedInPage {...props} profile={profile} setProfile={setProfile} isAuth={isAuth} setIsAuth={setIsAuth} page={<ProfilePage profile={profile}/>}/>}/>\n          <Redirect to=\"/404\"/>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}