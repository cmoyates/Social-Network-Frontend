{"version":3,"sources":["pages/Home.js","components/Comments.js","components/PostCard.js","components/SubmitPostDialog.js","pages/Feed.js","pages/PageNotFound.js","components/ProtectedRoute.js","pages/SinglePostPage.js","pages/ProfilePage.js","components/SettingsMenu.js","components/ColorPickerCell.js","components/ColorPicker.js","components/ProfileSearchBar.js","components/LoggedInPage.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","responseGoogleSuccess","response","a","profileIsNew","profile","fetch","profileObj","email","res","json","data","console","log","newProfile","user_email","user_name","name","img_url","imageUrl","method","headers","body","JSON","stringify","profiles_following","profile_id","setProfile","setIsAuth","isAuth","to","style","position","left","top","transform","Helmet","content","clientId","buttonText","onSuccess","onFailure","isSignedIn","cookiePolicy","useStyles","makeStyles","theme","cardHeader","display","flexDirection","alignItems","nameText","paddingLeft","cursor","Comments","classes","history","useHistory","goToCommenterProfile","item","isSinglePostPage","push","user_id","commentList","length","map","index","Divider","CardContent","className","Avatar","src","user_img","onClick","PostCard","useState","post","setPost","useEffect","goToPosterProfile","likeAPost","likes","includes","viewer_ID","filter","post_id","newPost","ThemeProvider","Card","margin","CardActions","Grid","container","direction","justifyContent","Button","size","color","disabled","startIcon","orientation","flexItem","commentCallback","setSnackbarOpen","navigator","clipboard","writeText","comments","SubmitPostDialog","setContent","Dialog","open","onClose","handleClose","DialogTitle","id","comment","DialogContent","TextField","value","onChange","e","target","autoFocus","label","fullWidth","multiline","DialogActions","handleSubmit","Feed","document","title","posts","setPosts","commentingPost","setCommentingPost","postDialogOpen","setPostDialogOpen","commentDialogOpen","setCommentDialogOpen","snackbarOpen","handleSubmitPost","fetchPosts","handleSubmitComment","handleSnackbarClose","event","reason","variant","Container","maxWidth","Snackbar","autoHideDuration","message","action","IconButton","fontSize","PageNotFound","ProtectedRoute","Component","component","rest","render","pathname","state","from","location","SinglePostPage","useParams","fetchPost","justify","minHeight","ProfilePage","pageProfile","setPageProfile","setLoading","fetchPageProfile","fetchPageProfilePosts","followProfile","parseInt","SettingsMenu","Popper","anchorEl","role","undefined","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","renderProps","MenuItem","onLogoutSuccess","logout","accColorClick","ColorPickerCell","square","submit","backgroundColor","width","height","colors","ColorPicker","spacing","xs","grow","flexGrow","menuButton","marginRight","breakpoints","up","search","borderRadius","shape","alpha","palette","common","white","marginLeft","searchIcon","padding","pointerEvents","inputRoot","inputInput","transitions","create","sectionDesktop","sectionMobile","ProfileSearchBar","inputValue","setInputValue","setOpen","Autocomplete","disableClearable","options","profiles","getOptionLabel","option","onOpen","onInputChange","newInputValue","popupIcon","hasPopupIcon","hasClearIcon","renderInput","params","InputLabelProps","InputProps","InputBase","placeholder","root","input","inputProps","LoggedInPage","menuOpen","setMenuOpen","colorDialogOpen","setColorDialogOpen","primaryColor","setPrimaryColor","setProfiles","anchorRef","useRef","fetchProfiles","handleSubmitColor","createTheme","primary","light","main","dark","contrastText","secondary","AppBar","Toolbar","Typography","noWrap","ref","page","current","contains","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0c6a4988.chunk.js","sourcesContent":["import React from 'react'\r\nimport GoogleLogin from 'react-google-login';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst Home = (props) => {\r\n\r\n    const responseGoogleSuccess = async (response) => {\r\n        let profileIsNew = false;\r\n        let profile = null;\r\n        // Try to get the profile from the database\r\n        try {\r\n            const res = await fetch('https://fast-coast-04774.herokuapp.com/profiles/email/' + response.profileObj.email);\r\n            const data = await res.json();\r\n            profile = data;\r\n            console.log(\"Profile Exists!\");\r\n        } catch (error) {\r\n            console.log(error);\r\n            // If it fails it's a new profile\r\n            profileIsNew = true;\r\n        }\r\n\r\n        // If it's a new profile \r\n        if (profileIsNew) {\r\n            console.log(\"Creating new Profile...\");\r\n            try {\r\n                // Create the profile on the database using the Google-Login info\r\n                const newProfile = {\r\n                    user_email: response.profileObj.email,\r\n                    user_name: response.profileObj.name,\r\n                    img_url: response.profileObj.imageUrl,\r\n                };\r\n                const res = await fetch(\"https://fast-coast-04774.herokuapp.com/profiles\", {\r\n                    method: \"POST\",\r\n                    headers : { \r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(newProfile)\r\n                });\r\n                profile = await res.json();\r\n                \r\n                // Then update the profile on the database so that the profile \"follows itself\"\r\n                profile.profiles_following = [profile.profile_id];\r\n                await fetch(\"https://fast-coast-04774.herokuapp.com/profiles/\" + profile.profile_id, {\r\n                    method: \"PUT\",\r\n                    headers : { \r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(profile)\r\n                });\r\n                console.log(\"Profile Created!\");\r\n            } catch (error) {\r\n                console.log(error);\r\n                return;\r\n            }\r\n        }\r\n        // Store the profile and the authorisation in the state\r\n        props.setProfile(profile);\r\n        props.setIsAuth(true);\r\n        console.log(\"Login Successful\");\r\n    }\r\n    // If the Google-Login fails log the response\r\n    const responseGoogleFailure = (response) => {\r\n        console.log(\"Login Failed\");\r\n        console.log(response);\r\n    }\r\n\r\n    // If the user is authorised successfully redirect to their feed otherwise show the login page\r\n    return ((props.isAuth) ? <Redirect to=\"/feed\"/> : \r\n        <div\r\n        style={{\r\n            position: 'absolute', left: '50%', top: '50%',\r\n            transform: 'translate(-50%, -50%)'\r\n        }}\r\n        >\r\n            <Helmet>\r\n                <title>Social Network</title>\r\n                <meta name=\"Social Network\" content=\"A simple social network made with Material UI\" />\r\n            </Helmet>\r\n            <h1>Welcome to the Social Network!</h1>\r\n            <p>\r\n                <GoogleLogin\r\n                    clientId=\"399415598384-sgkom02f57l549gtnn877013fg004ke5.apps.googleusercontent.com\"\r\n                    buttonText=\"Login\"\r\n                    onSuccess={responseGoogleSuccess}\r\n                    onFailure={responseGoogleFailure}\r\n                    isSignedIn={true}\r\n                    cookiePolicy={'single_host_origin'}\r\n                />\r\n            </p>\r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardHeader: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: \"center\"\r\n    },\r\n    nameText: {\r\n        paddingLeft: \"10px\",\r\n        cursor:'pointer'\r\n    }\r\n}));\r\n\r\nconst Comments = (props) => {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    const goToCommenterProfile = (item) => {\r\n        if (!props.isSinglePostPage) {\r\n            history.push('/profile/' + item.user_id);\r\n        }\r\n    }\r\n\r\n    return ((props.commentList.length > 0) ?\r\n        <div>\r\n            {props.commentList.map((item, index) => (\r\n                <div key={index}>\r\n                    <Divider/>\r\n                    <CardContent>\r\n                        <div className={classes.cardHeader}>\r\n                            <Avatar style={{cursor:'pointer'}} src={item.user_img} onClick={()=>{goToCommenterProfile(item)}}/>\r\n                            <h4 className={classes.nameText} onClick={()=>{goToCommenterProfile(item)}}>{item.user_name}</h4>\r\n                        </div>\r\n                        <Divider/>\r\n                        <p>{item.content}</p>\r\n                    </CardContent>\r\n                </div>\r\n            ))}\r\n        </div> : null\r\n    )\r\n}\r\n\r\nexport default Comments\r\n","import React from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { useState, useEffect } from 'react';\r\nimport Comments from './Comments';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    cardHeader: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: \"center\",\r\n    },\r\n    nameText: {\r\n        paddingLeft: \"10px\",\r\n        cursor:'pointer',\r\n    }\r\n});\r\n\r\n/*const theme = createTheme({\r\n    palette: {\r\n      type: \"dark\"\r\n    }\r\n  })*/\r\n\r\nconst PostCard = (props) => {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    const [post, setPost] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Set the post from the props to the state\r\n        setPost(props.post);\r\n    }, [])\r\n\r\n    // Go to the profile page for the profile that made the post\r\n    const goToPosterProfile = () => {\r\n        if (!isSinglePostPage) {\r\n            history.push('/profile/' + post.user_id);\r\n        }\r\n    }\r\n\r\n    // Like a post\r\n    const likeAPost = async () => {\r\n        // If the user already likes the post, remove them from the list of profiles that like it\r\n        if (props.post.likes.includes(props.viewer_ID)) {\r\n            props.post.likes = props.post.likes.filter(item => item !== props.viewer_ID)\r\n        }\r\n        // Otherwise add them to it\r\n        else {\r\n            props.post.likes.push(props.viewer_ID);\r\n        }\r\n\r\n        // Update the post on the database\r\n        const newPost = await fetch(\"https://fast-coast-04774.herokuapp.com/posts/\" + props.post.post_id, {\r\n            method: \"PUT\",\r\n            headers : { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify(props.post)\r\n        });\r\n        // Set the updated post in the state\r\n        setPost(newPost);\r\n    }\r\n\r\n    // If the viewer ID is -1 the post is on a single post page\r\n    const isSinglePostPage = props.viewer_ID === -1;\r\n\r\n    return (\r\n        <ThemeProvider>\r\n            <Card style={{margin: 20,}}>\r\n            <CardContent>\r\n                <div className={classes.cardHeader}>\r\n                    <Avatar style={{cursor:'pointer'}} src={props.post.user_img} onClick={goToPosterProfile}/>\r\n                    <h3 className={classes.nameText} onClick={goToPosterProfile}>{props.post.user_name}</h3>\r\n                </div>\r\n                <Divider/>\r\n                <p>{props.post.content}</p>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardActions>\r\n                <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n                >\r\n                    <Button size={\"small\"} color={(props.post.likes.includes(props.viewer_ID)) ? \"primary\" : \"default\"} disabled={isSinglePostPage} startIcon={<ThumbUpIcon />} onClick={() => {\r\n                        // Like the post\r\n                        likeAPost();\r\n                    }}>Like ({props.post.likes.length})</Button>\r\n                    <Divider orientation=\"vertical\" flexItem />\r\n                    <Button size={\"small\"} disabled={isSinglePostPage} startIcon={<CommentIcon />} onClick={() => {\r\n                        // Comment on the post\r\n                        props.commentCallback();\r\n                    }}>Comment</Button>\r\n                    <Divider orientation=\"vertical\" flexItem />\r\n                    <Button size={\"small\"} startIcon={<ShareIcon />} onClick={() => {\r\n                        // Share the post\r\n                        props.setSnackbarOpen(true);\r\n                        navigator.clipboard.writeText(\"https://cmoyates.github.io/Social-Network-Frontend/#/post/\" + props.post.post_id);\r\n                    }}>Share</Button>\r\n                </Grid>\r\n            </CardActions>\r\n            <Comments commentList={props.post.comments.commentList} isSinglePostPage={isSinglePostPage}/>\r\n        </Card>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default PostCard","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {useState} from 'react';\r\n\r\nfunction SubmitPostDialog(props) {\r\n\r\n    const [content, setContent] = useState(\"\");\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">{(props.comment) ? \"Comment\" : \"Post\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        value={content} onChange={(e) => {setContent(e.target.value)}}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"content\"\r\n                        label=\"Content\"\r\n                        fullWidth\r\n                        multiline\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={async () => {\r\n                    await props.handleSubmit({\r\n                        user_id: props.profile.profile_id,\r\n                        user_name: props.profile.user_name,\r\n                        user_img: props.profile.img_url,\r\n                        content: content\r\n                    });\r\n                }} color=\"primary\">\r\n                    Submit\r\n                </Button>\r\n                <Button onClick={props.handleClose} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SubmitPostDialog;","import React from 'react'\r\nimport PostCard from \"../components/PostCard.js\";\r\nimport SubmitPostDialog from '../components/SubmitPostDialog';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport {useState, useEffect} from 'react';\r\n\r\nconst Feed = (props) => {\r\n    // Set the title of the page\r\n    document.title = \"Feed\";\r\n\r\n    // A bunch of state stuff\r\n    const [posts, setPosts] = useState([]);\r\n    const [commentingPost, setCommentingPost] = useState(null);\r\n    const [postDialogOpen, setPostDialogOpen] = useState(false);\r\n    const [commentDialogOpen, setCommentDialogOpen] = useState(false);\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n    // Submit a post\r\n    const handleSubmitPost = async (post) => {\r\n        // Close the post dialog\r\n        setPostDialogOpen(false);\r\n        // Add the post to the database\r\n        await fetch(\"https://fast-coast-04774.herokuapp.com/posts\", {\r\n            method: \"POST\",\r\n            headers : { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify(post)\r\n        });\r\n        // Get all of the posts (including the new one)\r\n        await fetchPosts();\r\n    };\r\n\r\n    // Submit a comment\r\n    const handleSubmitComment = async (comment) => {\r\n        // Close the comment dialog\r\n        setCommentDialogOpen(false);\r\n        // Add the comment object to the list of comments for the post you're commenting on\r\n        commentingPost.comments.commentList.push(comment);\r\n        // Update that post on the database\r\n        await fetch(\"https://fast-coast-04774.herokuapp.com/posts/\" + commentingPost.post_id, {\r\n            method: \"PUT\",\r\n            headers : { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify(commentingPost)\r\n        });\r\n    }\r\n\r\n    // Get all of the posts from profiles the user is following\r\n    const fetchPosts = async () => {\r\n        const res = await fetch('https://fast-coast-04774.herokuapp.com/posts/following/' + props.profile.profile_id);\r\n        const data = await res.json();\r\n        console.log(\"Posts\");\r\n        console.log(data);\r\n        // Store the posts in the state\r\n        setPosts(data);\r\n    }\r\n    \r\n    // Close the snackbar\r\n    const handleSnackbarClose = (event, reason) => {\r\n        // If the reason is not clicking away\r\n        if (reason !== 'clickaway') {\r\n            setSnackbarOpen(false);\r\n        }\r\n    };\r\n\r\n    // Get the posts when the page loads\r\n    useEffect(() => {\r\n        fetchPosts();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            <Button variant=\"contained\" color=\"primary\" size={\"medium\"} onClick={() => {setPostDialogOpen(true);}}><b>Post</b></Button>\r\n            <Container maxWidth=\"sm\">\r\n                {\r\n                    // Map the objects into PostCard components and display them\r\n                    posts.map((item) => (<PostCard key={item.post_id} post={item} viewer_ID={props.profile.profile_id} setSnackbarOpen={setSnackbarOpen} commentCallback={() => {\r\n                        // When they click the comment button remember which post they're commenting on\r\n                        setCommentingPost(item);\r\n                        // And open the comment dialog\r\n                        setCommentDialogOpen(true);\r\n                    }}/>))\r\n                }\r\n            <br />\r\n            </Container>\r\n            <SubmitPostDialog comment={false} open={postDialogOpen} handleClose={() => {setPostDialogOpen(false);}} handleSubmit={handleSubmitPost} profile={props.profile}/>\r\n            <SubmitPostDialog comment={true} open={commentDialogOpen} handleClose={() => {setCommentDialogOpen(false);}} handleSubmit={handleSubmitComment} profile={props.profile} post={commentingPost}/>\r\n            <Snackbar\r\n                open={snackbarOpen}\r\n                autoHideDuration={3000}\r\n                onClose={handleSnackbarClose}\r\n                message=\"Link copied to clipboard\"\r\n                action={\r\n                    <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleSnackbarClose}>\r\n                        <CloseIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed","import React from 'react'\r\n\r\nconst PageNotFound = (props) => {\r\n    \r\n    document.title = \"Page not found\";\r\n\r\n    return (\r\n        <div>\r\n            <h1>404: Page not found</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageNotFound\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({component: Component, isAuth, ...rest}) => {\r\n    return (\r\n        <Route {...rest} render={\r\n            (props) => {\r\n                if (isAuth) {\r\n                    return <Component {...props}/>\r\n                }\r\n                else {\r\n                    return <Redirect to={\r\n                        {\r\n                            pathname: '/',\r\n                            state: {\r\n                                from: props.location\r\n                            }\r\n\r\n                        }\r\n                    }/>\r\n                }\r\n                \r\n            }\r\n        }/>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute\r\n","import React from 'react'\r\nimport PostCard from '../components/PostCard'\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useState, useEffect} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst SinglePostPage = () => {\r\n\r\n    let { id } = useParams();\r\n\r\n    const [post, setPost] = useState(null);\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n    const fetchPost = async () => {\r\n        setPost(null);\r\n        const res = await fetch('https://fast-coast-04774.herokuapp.com/posts/' + id);\r\n        const data = await res.json();\r\n        document.title = \"Social Network\"\r\n\r\n        console.log(data);\r\n        setPost(data);\r\n    }\r\n    useEffect( () => {\r\n        fetchPost();\r\n    }, [id])\r\n\r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n        return;\r\n        }\r\n    \r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    return (\r\n        (post) ? \r\n        <div>\r\n            <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\" style={{minHeight: \"100vh\"}}>\r\n                <Grid item>\r\n                    <PostCard key={post.post_id} post={post} viewer_ID={-1} setSnackbarOpen={setSnackbarOpen}/>\r\n                </Grid>\r\n            </Grid>\r\n            <Snackbar\r\n                open={snackbarOpen}\r\n                autoHideDuration={3000}\r\n                onClose={handleSnackbarClose}\r\n                message=\"Link copied to clipboard\"\r\n                action={\r\n                    <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleSnackbarClose}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                }\r\n            />\r\n        </div> :\r\n        null\r\n    )\r\n}\r\n\r\nexport default SinglePostPage","import React from 'react'\r\nimport {useParams, Redirect} from \"react-router-dom\";\r\nimport {useState, useEffect} from 'react';\r\nimport PostCard from '../components/PostCard';\r\nimport Container from \"@material-ui/core/Container\";\r\n//import { makeStyles } from '@material-ui/core/styles';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport SubmitPostDialog from '../components/SubmitPostDialog';\r\n\r\nconst ProfilePage = (props) => {\r\n\r\n    let { id } = useParams();\r\n\r\n    const [pageProfile, setPageProfile] = useState(null);\r\n    const [posts, setPosts] = useState([]);\r\n    const [commentDialogOpen, setCommentDialogOpen] = useState(false);\r\n    const [commentingPost, setCommentingPost] = useState(null);\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const fetchPageProfile = async () => {\r\n        try {\r\n            setPageProfile(null);\r\n            const res = await fetch('https://fast-coast-04774.herokuapp.com/profiles/' + id);\r\n            const data = await res.json();\r\n            document.title = data.user_name\r\n\r\n            console.log(data);\r\n            setPageProfile(data);\r\n            await fetchPageProfilePosts();\r\n        } catch (error) {\r\n            setPageProfile(-1);\r\n        }\r\n    }\r\n\r\n    const fetchPageProfilePosts = async () => {\r\n        const res = await fetch('https://fast-coast-04774.herokuapp.com/posts/user/' + id);\r\n        const data = await res.json();\r\n\r\n        console.log(data);\r\n        setPosts(data);\r\n    }\r\n\r\n    const handleSubmitComment = async (comment) => {\r\n        setCommentDialogOpen(false);\r\n        commentingPost.comments.commentList.push(comment);\r\n        const newPost = await fetch(\"https://fast-coast-04774.herokuapp.com/posts/\" + commentingPost.post_id, {\r\n        method: \"PUT\",\r\n        headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify(commentingPost)\r\n        });\r\n    }\r\n\r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n    \r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    const followProfile = async () => {\r\n        if (props.profile.profiles_following.includes(parseInt(id))) {\r\n            props.profile.profiles_following = props.profile.profiles_following.filter(item => item !== parseInt(id));\r\n        }\r\n        else {\r\n            props.profile.profiles_following.push(parseInt(id));\r\n        }\r\n        setLoading(true);\r\n        await fetch(\"https://fast-coast-04774.herokuapp.com/profiles/\" + props.profile.profile_id, {\r\n            method: \"PUT\",\r\n            headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify(props.profile)\r\n        });\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect( () => {\r\n        fetchPageProfile();\r\n    }, [id])\r\n\r\n    if (!pageProfile) {\r\n        return null;\r\n    }\r\n    else if (pageProfile === -1) {\r\n        return (<Redirect to={\r\n            {\r\n                pathname: '/404',\r\n                state: {\r\n                    from: props.location\r\n                }\r\n\r\n            }\r\n        }/>)\r\n    }\r\n    else {\r\n        return (\r\n            <div>\r\n                <h1>{pageProfile.user_name}</h1>\r\n                {(parseInt(id) !== props.profile.profile_id) ? <Button variant=\"outlined\" onClick={()=>{followProfile();}}>{(props.profile.profiles_following.includes(parseInt(id))) ? \"Following\" : \"Follow\"}</Button> : null}\r\n                <Container maxWidth=\"sm\">\r\n                    {posts.map((item) => (<PostCard key={item.post_id} post={item} viewer_ID={props.profile.profile_id} setSnackbarOpen={setSnackbarOpen} commentCallback={() => {\r\n                        setCommentingPost(item);\r\n                        setCommentDialogOpen(true);\r\n                    }}/>))}\r\n                </Container>\r\n                <SubmitPostDialog comment={true} open={commentDialogOpen} handleClose={() => {setCommentDialogOpen(false);}} handleSubmit={handleSubmitComment} profile={props.profile} post={commentingPost}/>\r\n                <Snackbar\r\n                    open={snackbarOpen}\r\n                    autoHideDuration={3000}\r\n                    onClose={handleSnackbarClose}\r\n                    message=\"Link copied to clipboard\"\r\n                    action={\r\n                        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleSnackbarClose}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfilePage","import React from 'react'\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { GoogleLogout } from 'react-google-login';\r\n\r\nconst SettingsMenu = (props) => {\r\n    return (\r\n        <Popper open={props.open} anchorEl={props.anchorEl} role={undefined} transition disablePortal>\r\n            {({ TransitionProps, placement }) => (\r\n                <Grow\r\n                {...TransitionProps}\r\n                style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                >\r\n                <Paper>\r\n                    <ClickAwayListener onClickAway={props.handleClose}>\r\n                    <MenuList autoFocusItem={props.open} id=\"menu-list-grow\">\r\n                        <GoogleLogout\r\n                            clientId=\"399415598384-sgkom02f57l549gtnn877013fg004ke5.apps.googleusercontent.com\"\r\n                            render={renderProps => (\r\n                                <MenuItem onClick={renderProps.onClick}  disabled={renderProps.disabled}>\r\n                                    Logout\r\n                                </MenuItem>\r\n                            )}\r\n                            buttonText=\"Logout\"\r\n                            onLogoutSuccess={props.logout}\r\n                        >\r\n                        </GoogleLogout>\r\n                        <MenuItem onClick={props.accColorClick}>\r\n                            Select Accent Color\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                    </ClickAwayListener>\r\n                </Paper>\r\n                </Grow>\r\n            )}\r\n        </Popper>\r\n    )\r\n}\r\n\r\nexport default SettingsMenu\r\n","import React from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst ColorPickerCell = (props) => {\r\n    return (\r\n        <Paper variant=\"outlined\" square={true} onClick={() => {props.submit(props.color);}} style={{\r\n            backgroundColor: props.color,\r\n            width: 37.5,\r\n            height: 32\r\n        }}></Paper>\r\n    )\r\n}\r\n\r\nexport default ColorPickerCell\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport ColorPickerCell from './ColorPickerCell';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst colors = [\r\n    \"#f44336\",\r\n    \"#e91e63\",\r\n    \"#9c27b0\",\r\n    \"#673ab7\",\r\n    \"#3f51b5\",\r\n    \"#2196f3\",\r\n    \"#03a9f4\",\r\n    \"#00bcd4\",\r\n    \"#009688\",\r\n    \"#4caf50\",\r\n    \"#8bc34a\",\r\n    \"#cddc39\",\r\n    \"#ffeb3b\",\r\n    \"#ffc107\",\r\n    \"#ff9800\",\r\n    \"#ff5722\"\r\n];\r\n\r\nconst ColorPicker = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Pick a Color</DialogTitle>\r\n                <DialogContent style={{width: 150}}>\r\n                    <Grid container spacing={0}>\r\n                        <Grid container item xs={12} spacing={0}>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell color={colors[0]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[1]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[2]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[3]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} spacing={0}>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[4]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[5]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[6]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[7]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} spacing={0}>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[8]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[9]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[10]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[11]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} spacing={0}>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[12]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[13]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[14]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[15]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions></DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ColorPicker\r\n","import React from 'react'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {useState} from 'react';\r\nimport {makeStyles, alpha} from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    }\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst ProfileSearchBar = (props) => {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleOpen = () => {\r\n        if (inputValue.length > 2) {\r\n            setOpen(true);\r\n        }\r\n    };\r\n    const handleInputChange = (event, newInputValue) => {\r\n        setInputValue(newInputValue);\r\n        setOpen(newInputValue.length > 2);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.search}>\r\n          <div className={classes.searchIcon}>\r\n            <SearchIcon />\r\n          </div>\r\n            <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                disableClearable\r\n                options={props.profiles}\r\n                getOptionLabel={(option)=>{return option.user_name}}\r\n                open={open}\r\n                onOpen={handleOpen}\r\n                onClose={() => setOpen(false)}\r\n                inputValue={inputValue}\r\n                onInputChange={handleInputChange}\r\n                onChange={(event, value)=>{history.push('/profile/' + value.profile_id);}}\r\n                popupIcon={null}\r\n                style={{hasPopupIcon: false, hasClearIcon: false}}\r\n                renderInput={(params) => {\r\n                  const {InputLabelProps,InputProps,...rest} = params;\r\n                  return <InputBase {...params.InputProps} className={null} placeholder=\"Search…\" classes={{root: classes.inputRoot, input: classes.inputInput}} inputProps={{ 'aria-label': 'search' }} {...rest}  />}}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileSearchBar\r\n","import React from 'react'\r\n//import Button from '@material-ui/core/Button';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n//import CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { createTheme, makeStyles, ThemeProvider, alpha } from '@material-ui/core/styles';\r\nimport {useState, useEffect, useRef} from 'react';\r\nimport SettingsMenu from './SettingsMenu';\r\nimport ColorPicker from './ColorPicker';\r\nimport ProfileSearchBar from '../components/ProfileSearchBar.js';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// Some styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n          backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n          marginLeft: theme.spacing(3),\r\n          width: 'auto',\r\n        },\r\n      },\r\n      searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      inputRoot: {\r\n        color: 'inherit',\r\n      },\r\n      inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n          width: '20ch',\r\n        },\r\n      },\r\n}));\r\n\r\nconst LoggedInPage = (props) => {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    // A bunch of state stuff\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [colorDialogOpen, setColorDialogOpen] = useState(false);\r\n    const [primaryColor, setPrimaryColor] = useState('#3f50b5');\r\n    const [profiles, setProfiles] = useState([]);\r\n\r\n    const anchorRef = useRef(null);\r\n\r\n    // Log the user out\r\n    const logout = () => {\r\n        console.log(\"Logout Successful\");\r\n        // Forget the profile\r\n        props.setProfile([]);\r\n        // Revoke their authorisation\r\n        props.setIsAuth(false);\r\n    }\r\n\r\n    // Get all of the profiles (for use in the searchbar)\r\n    const fetchProfiles = async () => {\r\n        const res = await fetch('https://fast-coast-04774.herokuapp.com/profiles');\r\n        const data = await res.json();\r\n        // And save it to the state\r\n        setProfiles(data);\r\n    }\r\n\r\n    const handleSubmitColor = async (color) => {\r\n        setColorDialogOpen(false);\r\n        setPrimaryColor(color);\r\n    }\r\n\r\n    // Close the menu\r\n    const handleMenuClose = (event) => {\r\n        if (!(anchorRef.current && anchorRef.current.contains(event.target))) {\r\n            setMenuOpen(false);\r\n        }\r\n    };\r\n\r\n    // Theme colors\r\n    var theme = createTheme({\r\n        palette: {\r\n            primary: {\r\n                light: '#757ce8',\r\n                main: primaryColor,\r\n                dark: '#002884',\r\n                contrastText: '#fff',\r\n            },\r\n            secondary: {\r\n                light: '#ff7961',\r\n                main: '#f44336',\r\n                dark: '#ba000d',\r\n                contrastText: '#000',\r\n            },\r\n        },\r\n    });\r\n\r\n    // Get all of the profiles when the page loads\r\n    useEffect(() => {\r\n        fetchProfiles();\r\n        //document.body.style.backgroundColor = \"green\";\r\n    }, [])\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div className={classes.grow}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                    <Typography className={classes.title} variant=\"h5\" noWrap style={{cursor:'pointer'}} onClick={()=>{history.push('/feed');}}>\r\n                        Social Network\r\n                    </Typography>\r\n                    <ProfileSearchBar profiles={profiles}/>\r\n                    <div className={classes.grow} />\r\n                    <Typography style={{cursor:'pointer'}} onClick={()=>{history.push('/profile/' + props.profile.profile_id);}}>\r\n                        {props.profile.user_name}\r\n                    </Typography>\r\n                    <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={() => {setMenuOpen(!menuOpen)}} ref={anchorRef} \r\n                        aria-controls={false ? 'menu-list-grow' : undefined} aria-haspopup=\"true\">\r\n                        <Avatar src={props.profile.img_url}/>\r\n                    </IconButton>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n            {props.page}\r\n            <SettingsMenu open={menuOpen} anchorEl={anchorRef.current} handleClose={handleMenuClose} accColorClick={() => {setMenuOpen(false); setColorDialogOpen(true);}} logout={logout}/>\r\n            <ColorPicker open={colorDialogOpen} handleClose={() => {setColorDialogOpen(false);}} handleSubmit={handleSubmitColor}/>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default LoggedInPage","import './App.css';\nimport {HashRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\nimport { createTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Home from './pages/Home';\nimport Feed from './pages/Feed';\nimport PageNotFound from './pages/PageNotFound';\nimport {useState} from 'react';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport SinglePostPage from './pages/SinglePostPage';\nimport ProfilePage from './pages/ProfilePage';\nimport LoggedInPage from './components/LoggedInPage';\n\n\n/*const useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: \"#000000\"\n  }\n}));*/\n\nfunction App() {\n\n  const [profile, setProfile] = useState([]);\n  const [isAuth, setIsAuth] = useState(false);\n\n  const theme = createTheme({\n    palette: {\n      //type: \"dark\"\n    },\n    backgroundColor: \"#000000\"\n  })\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\" component={()=><Home setProfile={setProfile} setIsAuth={setIsAuth} isAuth={isAuth}/>}/>\n            <ProtectedRoute path=\"/Feed\" isAuth={isAuth} component={(props)=><LoggedInPage {...props} profile={profile} setProfile={setProfile} isAuth={isAuth} setIsAuth={setIsAuth} page={<Feed profile={profile}/>}/>}/>\n            <Route exact path=\"/404\" component={PageNotFound}/>\n            <Route path=\"/post/:id\" component={SinglePostPage}/>\n            <ProtectedRoute path=\"/profile/:id\" profile={profile} isAuth={isAuth} component={(props)=><LoggedInPage {...props} profile={profile} setProfile={setProfile} isAuth={isAuth} setIsAuth={setIsAuth} page={<ProfilePage profile={profile}/>}/>}/>\n            <Redirect to=\"/404\"/>\n          </Switch>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode style={{height: \"100%\"}}>\n    <App style={{height: \"100%\"}}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}