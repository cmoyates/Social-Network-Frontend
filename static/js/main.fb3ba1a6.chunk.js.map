{"version":3,"sources":["pages/Home.js","components/PostCard.js","components/SubmitPostDialog.js","pages/Posts.js","pages/PageNotFound.js","components/ProtectedRoute.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","responseGoogleSuccess","response","a","profileIsNew","profile","fetch","profileObj","email","res","json","data","console","log","newProfile","user_email","user_name","name","img_url","imageUrl","method","headers","body","JSON","stringify","setProfile","setIsAuth","isAuth","to","clientId","buttonText","onSuccess","onFailure","isSignedIn","cookiePolicy","useStyles","makeStyles","theme","cardHeader","display","flexDirection","alignItems","nameText","paddingLeft","PostCard","classes","Card","style","margin","CardContent","className","Avatar","src","user","Divider","content","CardActions","Grid","container","direction","justify","Button","size","startIcon","onClick","likeCount","orientation","flexItem","SubmitPostDialog","useState","setContent","Dialog","open","onClose","handleClose","DialogTitle","id","DialogContent","DialogContentText","userName","TextField","value","onChange","e","target","autoFocus","label","fullWidth","multiline","DialogActions","handleSubmit","user_id","profile_id","user_img","likes","color","root","flexGrow","menuButton","marginRight","spacing","title","Posts","posts","setPosts","dialogOpen","setDialogOpen","menuOpen","setMenuOpen","anchorRef","useRef","post","newPost","fetchPosts","document","useEffect","event","current","contains","logout","AppBar","position","Toolbar","Typography","variant","IconButton","ref","undefined","Container","maxWidth","map","item","post_id","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","render","renderProps","MenuItem","disabled","onLogoutSuccess","PageNotFound","ProtectedRoute","Component","component","rest","pathname","state","from","location","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fb3ba1a6.chunk.js","sourcesContent":["import React from 'react'\r\nimport GoogleLogin from 'react-google-login';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Home = (props) => {\r\n\r\n    const responseGoogleSuccess = async (response) => {\r\n        let profileIsNew = false;\r\n        let profile = null;\r\n        try {\r\n            const res = await fetch('https://fast-coast-04774.herokuapp.com/profiles/email/' + response.profileObj.email);\r\n            const data = await res.json();\r\n            profile = data;\r\n            console.log(\"Data\");\r\n            console.log(data)\r\n        } catch (error) {\r\n            console.log(error);\r\n            profileIsNew = true;\r\n        }\r\n\r\n        if (profileIsNew) {\r\n            console.log(\"Porordfg\");\r\n            try {\r\n                const newProfile = {\r\n                    user_email: response.profileObj.email,\r\n                    user_name: response.profileObj.name,\r\n                    img_url: response.profileObj.imageUrl,\r\n                };\r\n                \r\n                profile = await fetch(\"https://fast-coast-04774.herokuapp.com/profiles\", {\r\n                method: \"POST\",\r\n                headers : { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n                },\r\n                body: JSON.stringify(profile)\r\n                });\r\n                console.log(newProfile);\r\n            } catch (error) {\r\n                console.log(error);\r\n                return;\r\n            }\r\n        }\r\n        \r\n        props.setProfile(profile);\r\n        console.log(\"Profile\");\r\n        console.log(profile);\r\n        props.setIsAuth(true);\r\n        console.log(response);\r\n    }\r\n    const responseGoogleFailure = (response) => {\r\n        console.log(response);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/posts\"/>;\r\n    }\r\n    else {\r\n        return (\r\n            <div>\r\n                <h1>Welcome to the Social Network!</h1>\r\n                <p>\r\n                    <GoogleLogin\r\n                        clientId=\"399415598384-sgkom02f57l549gtnn877013fg004ke5.apps.googleusercontent.com\"\r\n                        buttonText=\"Login\"\r\n                        onSuccess={responseGoogleSuccess}\r\n                        onFailure={responseGoogleFailure}\r\n                        isSignedIn={true}\r\n                        cookiePolicy={'single_host_origin'}\r\n                    />\r\n                </p>\r\n            </div>\r\n        );\r\n    }    \r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardHeader: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: \"center\"\r\n    },\r\n    nameText: {\r\n        paddingLeft: \"10px\",\r\n    }\r\n}));\r\n\r\n\r\nconst PostCard = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card style={{margin: 20,}}>\r\n            <CardContent>\r\n                <div className={classes.cardHeader}>\r\n                    <Avatar src={props.img_url}/>\r\n                    <h3 className={classes.nameText}>{props.user}</h3>\r\n                </div>\r\n                <Divider/>\r\n                <p>{props.content}</p>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardActions>\r\n                <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                >\r\n                    <Button size={\"small\"} startIcon={<ThumbUpIcon />} onClick={() => {\r\n                        console.log(\"Like\");\r\n                    }}>Like ({props.likeCount})</Button>\r\n                    <Divider orientation=\"vertical\" flexItem />\r\n                    <Button size={\"small\"} startIcon={<CommentIcon />} onClick={() => {\r\n                        console.log(\"Comment\");\r\n                    }}>Comment</Button>\r\n                    <Divider orientation=\"vertical\" flexItem />\r\n                    <Button size={\"small\"} startIcon={<ShareIcon />} onClick={() => {\r\n                        console.log(\"Share\");\r\n                    }}>Share</Button>\r\n                </Grid>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default PostCard","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport {useState} from 'react';\r\n\r\nfunction SubmitPostDialog(props) {\r\n\r\n    const [content, setContent] = useState(\"\");\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Post</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {props.userName}\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        value={content} onChange={(e) => {setContent(e.target.value)}}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"content\"\r\n                        label=\"Content\"\r\n                        fullWidth\r\n                        multiline\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={async () => {\r\n                    await props.handleSubmit({\r\n                        user_id: props.profile.profile_id,\r\n                        user_name: props.profile.user_name,\r\n                        user_img: props.profile.img_url,\r\n                        content: content,\r\n                        likes: 0\r\n                    });\r\n                }} color=\"primary\">\r\n                    Submit\r\n                </Button>\r\n                <Button onClick={props.handleClose} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SubmitPostDialog;","import React from 'react'\r\nimport PostCard from \"../components/PostCard.js\";\r\nimport SubmitPostDialog from '../components/SubmitPostDialog';\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from '@material-ui/core/Button';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n//import MenuIcon from '@material-ui/icons/Menu';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {useState, useEffect, useRef} from 'react';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\n\r\nconst Posts = (props) => {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const anchorRef = useRef(null);\r\n\r\n    const handleSubmit = async (post) => {\r\n        setDialogOpen(false);\r\n        console.log(post)\r\n        const newPost = await fetch(\"https://fast-coast-04774.herokuapp.com/posts\", {\r\n        method: \"POST\",\r\n        headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify(post)\r\n        });\r\n        console.log(newPost);\r\n        await fetchPosts();\r\n    };\r\n\r\n    const fetchPosts = async () => {\r\n        const res = await fetch('https://fast-coast-04774.herokuapp.com/posts');\r\n        const data = await res.json();\r\n        document.title = \"Social Network\"\r\n\r\n        console.log(data);\r\n        setPosts(data);\r\n    }\r\n    useEffect(() => {\r\n        if (props.isAuth) {\r\n            fetchPosts();\r\n        }\r\n    }, [props.isAuth])\r\n\r\n    const classes = useStyles();\r\n    \r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n\r\n        setMenuOpen(false);\r\n    };\r\n    \r\n\r\n    const logout = () => {\r\n        console.log(\"Logout Successful\");\r\n        props.setProfile([]);\r\n        props.setIsAuth(false);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h5\">\r\n                        Social Network\r\n                    </Typography>\r\n                    <div className={classes.title}/>\r\n                    <Typography>\r\n                        {props.profile.user_name}\r\n                    </Typography>\r\n                    <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={() => {setMenuOpen(!menuOpen)}} ref={anchorRef} \r\n                        aria-controls={menuOpen ? 'menu-list-grow' : undefined} aria-haspopup=\"true\">\r\n                        <Avatar src={props.profile.img_url}/>\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <br />\r\n            <Button variant=\"contained\" color=\"primary\" size={\"medium\"} onClick={() => {setDialogOpen(true);}}><b>Post</b></Button>\r\n            <Container maxWidth=\"sm\">\r\n                {posts.map((item) => (<PostCard key={item.post_id} user={item.user_name} content={item.content} likeCount={item.likes} img_url={item.user_img}/>))}\r\n            </Container>\r\n            <SubmitPostDialog open={dialogOpen} handleClose={() => {setDialogOpen(false);}} handleSubmit={handleSubmit} profile={props.profile}/>\r\n            <Popper open={menuOpen} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                {({ TransitionProps, placement }) => (\r\n                    <Grow\r\n                    {...TransitionProps}\r\n                    style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                    >\r\n                    <Paper>\r\n                        <ClickAwayListener onClickAway={handleClose}>\r\n                        <MenuList autoFocusItem={menuOpen} id=\"menu-list-grow\">\r\n                            <GoogleLogout\r\n                                clientId=\"399415598384-sgkom02f57l549gtnn877013fg004ke5.apps.googleusercontent.com\"\r\n                                render={renderProps => (\r\n                                    <MenuItem onClick={renderProps.onClick}  disabled={renderProps.disabled}>\r\n                                        Logout\r\n                                    </MenuItem>\r\n                                )}\r\n                                buttonText=\"Logout\"\r\n                                onLogoutSuccess={logout}\r\n                            >\r\n                            </GoogleLogout>\r\n                            \r\n                        </MenuList>\r\n                        </ClickAwayListener>\r\n                    </Paper>\r\n                    </Grow>\r\n                )}\r\n            </Popper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n","import React from 'react'\r\n\r\nconst PageNotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>404: Page not found</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageNotFound\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({component: Component, isAuth, ...rest}) => {\r\n    return (\r\n        <Route {...rest} render={\r\n            (props) => {\r\n                if (isAuth) {\r\n                    return <Component {...props}/>\r\n                }\r\n                else {\r\n                    return <Redirect to={\r\n                        {\r\n                            pathname: '/',\r\n                            state: {\r\n                                from: props.location\r\n                            }\r\n\r\n                        }\r\n                    }/>\r\n                }\r\n                \r\n            }\r\n        }/>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute\r\n","import './App.css';\nimport {HashRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\nimport Home from './pages/Home';\nimport Posts from './pages/Posts';\nimport PageNotFound from './pages/PageNotFound';\nimport {useState} from 'react';\nimport ProtectedRoute from './components/ProtectedRoute';\n\nfunction App() {\n\n  const [profile, setProfile] = useState([]);\n  const [isAuth, setIsAuth] = useState(false);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={()=><Home setProfile={setProfile} setIsAuth={setIsAuth} isAuth={isAuth}/>}/>\n          <ProtectedRoute path=\"/posts\" isAuth={isAuth} component={(props)=><Posts {...props} profile={profile} setProfile={setProfile} isAuth={isAuth} setIsAuth={setIsAuth}/>}/>\n          <Route exact path=\"/404\" component={PageNotFound}/>\n          <Redirect to=\"/404\"/>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}