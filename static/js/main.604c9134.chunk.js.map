{"version":3,"sources":["pages/Home.js","components/PostCard.js","components/SubmitPostDialog.js","components/ColorPickerCell.js","components/ColorPicker.js","pages/Posts.js","pages/PageNotFound.js","components/ProtectedRoute.js","pages/SinglePostPage.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","responseGoogleSuccess","response","a","profileIsNew","profile","fetch","profileObj","email","res","json","data","console","log","newProfile","user_email","user_name","name","img_url","imageUrl","method","headers","body","JSON","stringify","setProfile","setIsAuth","isAuth","to","style","position","left","top","transform","clientId","buttonText","onSuccess","onFailure","isSignedIn","cookiePolicy","useStyles","makeStyles","theme","cardHeader","display","flexDirection","alignItems","nameText","paddingLeft","PostCard","useState","setPost","useEffect","post","classes","likeAPost","likes","includes","viewer_ID","filter","item","push","post_id","newPost","isSinglePostPage","Card","margin","CardContent","className","Avatar","src","user_img","Divider","content","CardActions","Grid","container","direction","justify","Button","size","color","disabled","startIcon","onClick","length","orientation","flexItem","navigator","clipboard","writeText","SubmitPostDialog","setContent","Dialog","open","onClose","handleClose","DialogTitle","id","DialogContent","DialogContentText","userName","TextField","value","onChange","e","target","autoFocus","label","fullWidth","multiline","DialogActions","handleSubmit","user_id","profile_id","ColorPickerCell","Paper","variant","square","submit","backgroundColor","width","height","colors","ColorPicker","spacing","xs","root","flexGrow","menuButton","marginRight","title","Posts","posts","setPosts","primaryColor","setPrimaryColor","postDialogOpen","setPostDialogOpen","colorDialogOpen","setColorDialogOpen","menuOpen","setMenuOpen","anchorRef","useRef","handleSubmitPost","fetchPosts","handleSubmitColor","document","primary_color","event","current","contains","logout","createTheme","palette","primary","light","main","dark","contrastText","secondary","ThemeProvider","AppBar","Toolbar","Typography","IconButton","ref","undefined","Container","maxWidth","map","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","autoFocusItem","render","renderProps","MenuItem","onLogoutSuccess","PageNotFound","ProtectedRoute","Component","component","rest","pathname","state","from","location","SinglePostPage","useParams","fetchPost","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.604c9134.chunk.js","sourcesContent":["import React from 'react'\r\nimport GoogleLogin from 'react-google-login';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Home = (props) => {\r\n\r\n    const responseGoogleSuccess = async (response) => {\r\n        let profileIsNew = false;\r\n        let profile = null;\r\n        try {\r\n            const res = await fetch('https://fast-coast-04774.herokuapp.com/profiles/email/' + response.profileObj.email);\r\n            const data = await res.json();\r\n            profile = data;\r\n            console.log(\"Data\");\r\n            console.log(data)\r\n        } catch (error) {\r\n            console.log(error);\r\n            profileIsNew = true;\r\n        }\r\n\r\n        if (profileIsNew) {\r\n            console.log(\"Creating new Profile...\");\r\n            try {\r\n                const newProfile = {\r\n                    user_email: response.profileObj.email,\r\n                    user_name: response.profileObj.name,\r\n                    img_url: response.profileObj.imageUrl,\r\n                };\r\n                console.log(newProfile);\r\n                const res = await fetch(\"https://fast-coast-04774.herokuapp.com/profiles\", {\r\n                    method: \"POST\",\r\n                    headers : { \r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(newProfile)\r\n                });\r\n                profile = await res.json();\r\n            } catch (error) {\r\n                console.log(error);\r\n                return;\r\n            }\r\n        }\r\n        console.log(profile);\r\n        props.setProfile(profile);\r\n        console.log(\"Profile\");\r\n        console.log(profile);\r\n        props.setIsAuth(true);\r\n        console.log(response);\r\n    }\r\n    const responseGoogleFailure = (response) => {\r\n        console.log(response);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/posts\"/>;\r\n    }\r\n    else {\r\n        return (\r\n            <div\r\n            style={{\r\n                position: 'absolute', left: '50%', top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n            }}\r\n            >\r\n                <h1>Welcome to the Social Network!</h1>\r\n                <p>\r\n                    <GoogleLogin\r\n                        clientId=\"399415598384-sgkom02f57l549gtnn877013fg004ke5.apps.googleusercontent.com\"\r\n                        buttonText=\"Login\"\r\n                        onSuccess={responseGoogleSuccess}\r\n                        onFailure={responseGoogleFailure}\r\n                        isSignedIn={true}\r\n                        cookiePolicy={'single_host_origin'}\r\n                    />\r\n                </p>\r\n            </div>\r\n        );\r\n    }    \r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardHeader: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: \"center\"\r\n    },\r\n    nameText: {\r\n        paddingLeft: \"10px\",\r\n    }\r\n}));\r\n\r\n\r\nconst PostCard = (props) => {\r\n\r\n    const [post, setPost] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setPost(props.post);\r\n    }, [])\r\n\r\n    const classes = useStyles();\r\n    //console.log(\"Post\")\r\n    //console.log(props.post)\r\n\r\n    const likeAPost = async () => {\r\n        //console.log(props.viewer_ID);\r\n        //console.log(\"Like\");\r\n        if (props.post.likes.includes(props.viewer_ID)) {\r\n            //console.log(\"Yes\");\r\n            props.post.likes = props.post.likes.filter(item => item !== props.viewer_ID)\r\n        }\r\n        else {\r\n            //console.log(\"No\");\r\n            props.post.likes.push(props.viewer_ID);\r\n        }\r\n\r\n        const newPost = await fetch(\"https://fast-coast-04774.herokuapp.com/posts/\" + props.post.post_id, {\r\n        method: \"PUT\",\r\n        headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify(props.post)\r\n        });\r\n        //console.log(newPost);\r\n        setPost(newPost);\r\n    }\r\n\r\n    const isSinglePostPage = props.viewer_ID === -1;\r\n    const defaultColor = (props.viewer_ID === -1) ? \"#444444\" : \"default\";\r\n\r\n    return (\r\n        <Card style={{margin: 20,}}>\r\n            <CardContent>\r\n                <div className={classes.cardHeader}>\r\n                    <Avatar src={props.post.user_img}/>\r\n                    <h3 className={classes.nameText}>{props.post.user_name}</h3>\r\n                </div>\r\n                <Divider/>\r\n                <p>{props.post.content}</p>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardActions>\r\n                <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                >\r\n                    <Button size={\"small\"} color={(props.post.likes.includes(props.viewer_ID)) ? \"primary\" : \"default\"} disabled={isSinglePostPage} startIcon={<ThumbUpIcon />} onClick={() => {\r\n                        likeAPost();\r\n                    }}>Like ({props.post.likes.length})</Button>\r\n                    <Divider orientation=\"vertical\" flexItem />\r\n                    <Button size={\"small\"} disabled={isSinglePostPage} startIcon={<CommentIcon />} onClick={() => {\r\n                        console.log(\"Comment\");\r\n                    }}>Comment</Button>\r\n                    <Divider orientation=\"vertical\" flexItem />\r\n                    <Button size={\"small\"} startIcon={<ShareIcon />} onClick={() => {\r\n                        console.log(\"Share\");\r\n                        navigator.clipboard.writeText(\"https://cmoyates.github.io/Social-Network-Frontend/#/post/\" + props.post.post_id);\r\n                    }}>Share</Button>\r\n                </Grid>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default PostCard","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport {useState} from 'react';\r\n\r\nfunction SubmitPostDialog(props) {\r\n\r\n    const [content, setContent] = useState(\"\");\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Post</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {props.userName}\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        value={content} onChange={(e) => {setContent(e.target.value)}}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"content\"\r\n                        label=\"Content\"\r\n                        fullWidth\r\n                        multiline\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={async () => {\r\n                    await props.handleSubmit({\r\n                        user_id: props.profile.profile_id,\r\n                        user_name: props.profile.user_name,\r\n                        user_img: props.profile.img_url,\r\n                        content: content,\r\n                        likes: 0\r\n                    });\r\n                }} color=\"primary\">\r\n                    Submit\r\n                </Button>\r\n                <Button onClick={props.handleClose} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SubmitPostDialog;","import React from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst ColorPickerCell = (props) => {\r\n    return (\r\n        <Paper variant=\"outlined\" square={true} onClick={() => {props.submit(props.color);}} style={{\r\n            backgroundColor: props.color,\r\n            width: 37.5,\r\n            height: 32\r\n        }}></Paper>\r\n    )\r\n}\r\n\r\nexport default ColorPickerCell\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport ColorPickerCell from './ColorPickerCell';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst colors = [\r\n    \"#f44336\",\r\n    \"#e91e63\",\r\n    \"#9c27b0\",\r\n    \"#673ab7\",\r\n    \"#3f51b5\",\r\n    \"#2196f3\",\r\n    \"#03a9f4\",\r\n    \"#00bcd4\",\r\n    \"#009688\",\r\n    \"#4caf50\",\r\n    \"#8bc34a\",\r\n    \"#cddc39\",\r\n    \"#ffeb3b\",\r\n    \"#ffc107\",\r\n    \"#ff9800\",\r\n    \"#ff5722\"\r\n];\r\n\r\nconst ColorPicker = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Pick a Color</DialogTitle>\r\n                <DialogContent style={{width: 150}}>\r\n                    <Grid container spacing={0}>\r\n                        <Grid container item xs={12} spacing={0}>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell color={colors[0]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[1]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[2]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[3]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} spacing={0}>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[4]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[5]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[6]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[7]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} spacing={0}>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[8]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[9]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[10]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[11]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} spacing={0}>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[12]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[13]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[14]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[15]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions></DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ColorPicker\r\n","import React from 'react'\r\nimport PostCard from \"../components/PostCard.js\";\r\nimport SubmitPostDialog from '../components/SubmitPostDialog';\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from '@material-ui/core/Button';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { createTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport {useState, useEffect, useRef} from 'react';\r\nimport ColorPicker from '../components/ColorPicker.js';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\n\r\nconst Posts = (props) => {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [primaryColor, setPrimaryColor] = useState('#3f50b5');\r\n    const [postDialogOpen, setPostDialogOpen] = useState(false);\r\n    const [colorDialogOpen, setColorDialogOpen] = useState(false);\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const anchorRef = useRef(null);\r\n\r\n    const handleSubmitPost = async (post) => {\r\n        setPostDialogOpen(false);\r\n        console.log(post)\r\n        const newPost = await fetch(\"https://fast-coast-04774.herokuapp.com/posts\", {\r\n        method: \"POST\",\r\n        headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify(post)\r\n        });\r\n        console.log(newPost);\r\n        await fetchPosts();\r\n    };\r\n\r\n    const handleSubmitColor = async (color) => {\r\n        setColorDialogOpen(false);\r\n        setPrimaryColor(color);\r\n        //console.log(color);\r\n    }\r\n\r\n    const fetchPosts = async () => {\r\n        const res = await fetch('https://fast-coast-04774.herokuapp.com/posts');\r\n        const data = await res.json();\r\n        document.title = \"Social Network\"\r\n\r\n        console.log(data);\r\n        setPosts(data);\r\n    }\r\n    useEffect(() => {\r\n        if (props.isAuth) {\r\n            fetchPosts();\r\n            console.log(\"Profile ID\");\r\n            console.log(props.profile.profile_id);\r\n            setPrimaryColor(props.profile.primary_color)\r\n        }\r\n    }, [props.isAuth, props.profile.primary_color])\r\n\r\n    const classes = useStyles();\r\n    \r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n\r\n        setMenuOpen(false);\r\n    };\r\n    \r\n    const logout = () => {\r\n        console.log(\"Logout Successful\");\r\n        props.setProfile([]);\r\n        props.setIsAuth(false);\r\n    }\r\n\r\n    var theme = createTheme({\r\n        palette: {\r\n            primary: {\r\n                light: '#757ce8',\r\n                main: primaryColor,\r\n                dark: '#002884',\r\n                contrastText: '#fff',\r\n            },\r\n            secondary: {\r\n                light: '#ff7961',\r\n                main: '#f44336',\r\n                dark: '#ba000d',\r\n                contrastText: '#000',\r\n            },\r\n        },\r\n    });\r\n    \r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h5\">\r\n                        Social Network\r\n                    </Typography>\r\n                    <div className={classes.title}/>\r\n                    <Typography>\r\n                        {props.profile.user_name}\r\n                    </Typography>\r\n                    <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={() => {setMenuOpen(!menuOpen)}} ref={anchorRef} \r\n                        aria-controls={menuOpen ? 'menu-list-grow' : undefined} aria-haspopup=\"true\">\r\n                        <Avatar src={props.profile.img_url}/>\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <br />\r\n            <Button variant=\"contained\" color=\"primary\" size={\"medium\"} onClick={() => {setPostDialogOpen(true);}}><b>Post</b></Button>\r\n            <Container maxWidth=\"sm\">\r\n                {posts.map((item) => (<PostCard key={item.post_id} post={item} viewer_ID={props.profile.profile_id}/>))}\r\n            </Container>\r\n            <SubmitPostDialog open={postDialogOpen} handleClose={() => {setPostDialogOpen(false);}} handleSubmit={handleSubmitPost} profile={props.profile}/>\r\n            <ColorPicker open={colorDialogOpen} handleClose={() => {setColorDialogOpen(false);}} handleSubmit={handleSubmitColor}/>\r\n            <Popper open={menuOpen} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                {({ TransitionProps, placement }) => (\r\n                    <Grow\r\n                    {...TransitionProps}\r\n                    style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                    >\r\n                    <Paper>\r\n                        <ClickAwayListener onClickAway={handleClose}>\r\n                        <MenuList autoFocusItem={menuOpen} id=\"menu-list-grow\">\r\n                            <GoogleLogout\r\n                                clientId=\"399415598384-sgkom02f57l549gtnn877013fg004ke5.apps.googleusercontent.com\"\r\n                                render={renderProps => (\r\n                                    <MenuItem onClick={renderProps.onClick}  disabled={renderProps.disabled}>\r\n                                        Logout\r\n                                    </MenuItem>\r\n                                )}\r\n                                buttonText=\"Logout\"\r\n                                onLogoutSuccess={logout}\r\n                            >\r\n                            </GoogleLogout>\r\n                            <MenuItem onClick={() => {setMenuOpen(false); setColorDialogOpen(true);}}>\r\n                                Select Accent Color\r\n                            </MenuItem>\r\n                        </MenuList>\r\n                        </ClickAwayListener>\r\n                    </Paper>\r\n                    </Grow>\r\n                )}\r\n            </Popper>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n","import React from 'react'\r\n\r\nconst PageNotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>404: Page not found</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageNotFound\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({component: Component, isAuth, ...rest}) => {\r\n    return (\r\n        <Route {...rest} render={\r\n            (props) => {\r\n                if (isAuth) {\r\n                    return <Component {...props}/>\r\n                }\r\n                else {\r\n                    return <Redirect to={\r\n                        {\r\n                            pathname: '/',\r\n                            state: {\r\n                                from: props.location\r\n                            }\r\n\r\n                        }\r\n                    }/>\r\n                }\r\n                \r\n            }\r\n        }/>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute\r\n","import React from 'react'\r\nimport PostCard from '../components/PostCard'\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useState, useEffect} from 'react';\r\n\r\nconst SinglePostPage = () => {\r\n\r\n    let { id } = useParams();\r\n\r\n    const [post, setPost] = useState(null);\r\n\r\n    const fetchPost = async () => {\r\n        const res = await fetch('https://fast-coast-04774.herokuapp.com/posts/' + id);\r\n        const data = await res.json();\r\n        document.title = \"Social Network\"\r\n\r\n        console.log(data);\r\n        setPost(data);\r\n    }\r\n    useEffect( () => {\r\n        fetchPost();\r\n    }, [])\r\n\r\n    return (\r\n        (post) ? \r\n        <div\r\n        style={{\r\n            position: 'absolute', left: '50%', top: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            width: \"50%\"\r\n        }}\r\n        >\r\n            <PostCard key={post.post_id} post={post} viewer_ID={-1}/>\r\n        </div> :\r\n        null\r\n    )\r\n}\r\n\r\nexport default SinglePostPage","import './App.css';\nimport {HashRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\nimport Home from './pages/Home';\nimport Posts from './pages/Posts';\nimport PageNotFound from './pages/PageNotFound';\nimport {useState} from 'react';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport SinglePostPage from './pages/SinglePostPage';\n\nfunction App() {\n\n  const [profile, setProfile] = useState([]);\n  const [isAuth, setIsAuth] = useState(false);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={()=><Home setProfile={setProfile} setIsAuth={setIsAuth} isAuth={isAuth}/>}/>\n          <ProtectedRoute path=\"/posts\" isAuth={isAuth} component={(props)=><Posts {...props} profile={profile} setProfile={setProfile} isAuth={isAuth} setIsAuth={setIsAuth}/>}/>\n          <Route exact path=\"/404\" component={PageNotFound}/>\n          <Route path=\"/post/:id\" component={SinglePostPage}/>\n          <Redirect to=\"/404\"/>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}