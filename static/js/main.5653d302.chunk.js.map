{"version":3,"sources":["pages/Home.js","components/Comments.js","components/PostCard.js","components/SubmitPostDialog.js","components/SubmitCommentDilog.js","components/ColorPickerCell.js","components/ProfileSearchBar.js","components/ColorPicker.js","pages/Posts.js","pages/PageNotFound.js","components/ProtectedRoute.js","pages/SinglePostPage.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","responseGoogleSuccess","response","a","profileIsNew","profile","fetch","profileObj","email","res","json","data","console","log","newProfile","user_email","user_name","name","img_url","imageUrl","method","headers","body","JSON","stringify","setProfile","setIsAuth","isAuth","to","style","position","left","top","transform","clientId","buttonText","onSuccess","onFailure","isSignedIn","cookiePolicy","useStyles","makeStyles","theme","cardHeader","display","flexDirection","alignItems","nameText","paddingLeft","Comments","classes","commentList","length","map","item","Divider","CardContent","className","Avatar","src","user_img","content","PostCard","useState","setPost","useEffect","post","likeAPost","likes","includes","viewer_ID","filter","push","post_id","newPost","isSinglePostPage","Card","margin","CardActions","Grid","container","direction","justify","Button","size","color","disabled","startIcon","onClick","orientation","flexItem","commentCallback","setSnackbarOpen","navigator","clipboard","writeText","comments","SubmitPostDialog","setContent","Dialog","open","onClose","handleClose","DialogTitle","id","DialogContent","TextField","value","onChange","e","target","autoFocus","label","fullWidth","multiline","DialogActions","handleSubmit","user_id","profile_id","SubmitCommentDialog","ColorPickerCell","root","boarderColor","notchedOutline","Paper","variant","square","submit","backgroundColor","width","height","colors","ColorPicker","spacing","xs","flexGrow","menuButton","marginRight","title","Posts","posts","setPosts","setProfiles","commentingPost","setCommentingPost","primaryColor","setPrimaryColor","postDialogOpen","setPostDialogOpen","colorDialogOpen","setColorDialogOpen","commentDialogOpen","setCommentDialogOpen","snackbarOpen","menuOpen","setMenuOpen","anchorRef","useRef","handleSubmitPost","fetchPosts","handleSubmitColor","handleSubmitComment","comment","fetchProfiles","document","primary_color","event","current","contains","handleSnackbarClose","reason","logout","createTheme","palette","primary","light","main","dark","contrastText","secondary","ThemeProvider","AppBar","Toolbar","Typography","IconButton","ref","undefined","Container","maxWidth","Snackbar","autoHideDuration","message","action","fontSize","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","autoFocusItem","render","renderProps","MenuItem","onLogoutSuccess","PageNotFound","ProtectedRoute","Component","component","rest","pathname","state","from","location","SinglePostPage","useParams","fetchPost","minHeight","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5653d302.chunk.js","sourcesContent":["import React from 'react'\r\nimport GoogleLogin from 'react-google-login';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Home = (props) => {\r\n\r\n    const responseGoogleSuccess = async (response) => {\r\n        let profileIsNew = false;\r\n        let profile = null;\r\n        try {\r\n            const res = await fetch('https://fast-coast-04774.herokuapp.com/profiles/email/' + response.profileObj.email);\r\n            const data = await res.json();\r\n            profile = data;\r\n            //console.log(\"Data\");\r\n            //console.log(data);\r\n            console.log(\"Profile Exists!\");\r\n        } catch (error) {\r\n            console.log(error);\r\n            profileIsNew = true;\r\n        }\r\n\r\n        if (profileIsNew) {\r\n            console.log(\"Creating new Profile...\");\r\n            try {\r\n                const newProfile = {\r\n                    user_email: response.profileObj.email,\r\n                    user_name: response.profileObj.name,\r\n                    img_url: response.profileObj.imageUrl,\r\n                };\r\n                //console.log(newProfile);\r\n                const res = await fetch(\"https://fast-coast-04774.herokuapp.com/profiles\", {\r\n                    method: \"POST\",\r\n                    headers : { \r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(newProfile)\r\n                });\r\n                profile = await res.json();\r\n                console.log(\"Profile Created!\");\r\n            } catch (error) {\r\n                console.log(error);\r\n                return;\r\n            }\r\n        }\r\n        //console.log(profile);\r\n        props.setProfile(profile);\r\n        //console.log(\"Profile\");\r\n        //console.log(profile);\r\n        props.setIsAuth(true);\r\n        //console.log(response);\r\n        console.log(\"Login Successful\");\r\n    }\r\n    const responseGoogleFailure = (response) => {\r\n        console.log(\"Login Failed\");\r\n        console.log(response);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/posts\"/>;\r\n    }\r\n    else {\r\n        return (\r\n            <div\r\n            style={{\r\n                position: 'absolute', left: '50%', top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n            }}\r\n            >\r\n                <h1>Welcome to the Social Network!</h1>\r\n                <p>\r\n                    <GoogleLogin\r\n                        clientId=\"399415598384-sgkom02f57l549gtnn877013fg004ke5.apps.googleusercontent.com\"\r\n                        buttonText=\"Login\"\r\n                        onSuccess={responseGoogleSuccess}\r\n                        onFailure={responseGoogleFailure}\r\n                        isSignedIn={true}\r\n                        cookiePolicy={'single_host_origin'}\r\n                    />\r\n                </p>\r\n            </div>\r\n        );\r\n    }    \r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardHeader: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: \"center\"\r\n    },\r\n    nameText: {\r\n        paddingLeft: \"10px\",\r\n    }\r\n}));\r\n\r\nconst Comments = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return ((props.commentList.length > 0) ?\r\n        <div>\r\n            {props.commentList.map((item) => (\r\n                <div>\r\n                    <Divider/>\r\n                    <CardContent>\r\n                        <div className={classes.cardHeader}>\r\n                            <Avatar src={item.user_img}/>\r\n                            <h4 className={classes.nameText}>{item.user_name}</h4>\r\n                        </div>\r\n                        <Divider/>\r\n                        <p>{item.content}</p>\r\n                    </CardContent>\r\n                </div>\r\n            ))}\r\n        </div> : null\r\n    )\r\n}\r\n\r\nexport default Comments\r\n","import React from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { useState, useEffect } from 'react';\r\nimport Comments from './Comments';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardHeader: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: \"center\"\r\n    },\r\n    nameText: {\r\n        paddingLeft: \"10px\",\r\n    }\r\n}));\r\n\r\n\r\nconst PostCard = (props) => {\r\n\r\n    const [post, setPost] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setPost(props.post);\r\n    }, [])\r\n\r\n    const classes = useStyles();\r\n    //console.log(\"Post\")\r\n    //console.log(props.post)\r\n\r\n    const likeAPost = async () => {\r\n        //console.log(props.viewer_ID);\r\n        //console.log(\"Like\");\r\n        if (props.post.likes.includes(props.viewer_ID)) {\r\n            //console.log(\"Yes\");\r\n            props.post.likes = props.post.likes.filter(item => item !== props.viewer_ID)\r\n        }\r\n        else {\r\n            //console.log(\"No\");\r\n            props.post.likes.push(props.viewer_ID);\r\n        }\r\n\r\n        const newPost = await fetch(\"https://fast-coast-04774.herokuapp.com/posts/\" + props.post.post_id, {\r\n        method: \"PUT\",\r\n        headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify(props.post)\r\n        });\r\n        //console.log(newPost);\r\n        setPost(newPost);\r\n    }\r\n\r\n    const isSinglePostPage = props.viewer_ID === -1;\r\n\r\n    return (\r\n        <Card style={{margin: 20,}}>\r\n            <CardContent>\r\n                <div className={classes.cardHeader}>\r\n                    <Avatar src={props.post.user_img}/>\r\n                    <h3 className={classes.nameText}>{props.post.user_name}</h3>\r\n                </div>\r\n                <Divider/>\r\n                <p>{props.post.content}</p>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardActions>\r\n                <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                >\r\n                    <Button size={\"small\"} color={(props.post.likes.includes(props.viewer_ID)) ? \"primary\" : \"default\"} disabled={isSinglePostPage} startIcon={<ThumbUpIcon />} onClick={() => {\r\n                        likeAPost();\r\n                    }}>Like ({props.post.likes.length})</Button>\r\n                    <Divider orientation=\"vertical\" flexItem />\r\n                    <Button size={\"small\"} disabled={isSinglePostPage} startIcon={<CommentIcon />} onClick={() => {\r\n                        //console.log(\"Comment\");\r\n                        props.commentCallback();\r\n                    }}>Comment</Button>\r\n                    <Divider orientation=\"vertical\" flexItem />\r\n                    <Button size={\"small\"} startIcon={<ShareIcon />} onClick={() => {\r\n                        //console.log(\"Share\");\r\n                        props.setSnackbarOpen(true);\r\n                        navigator.clipboard.writeText(\"https://cmoyates.github.io/Social-Network-Frontend/#/post/\" + props.post.post_id);\r\n                    }}>Share</Button>\r\n                </Grid>\r\n            </CardActions>\r\n            <Comments commentList={props.post.comments.commentList}/>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default PostCard","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport {useState} from 'react';\r\n\r\nfunction SubmitPostDialog(props) {\r\n\r\n    const [content, setContent] = useState(\"\");\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Post</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        value={content} onChange={(e) => {setContent(e.target.value)}}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"content\"\r\n                        label=\"Content\"\r\n                        fullWidth\r\n                        multiline\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={async () => {\r\n                    await props.handleSubmit({\r\n                        user_id: props.profile.profile_id,\r\n                        user_name: props.profile.user_name,\r\n                        user_img: props.profile.img_url,\r\n                        content: content\r\n                    });\r\n                }} color=\"primary\">\r\n                    Submit\r\n                </Button>\r\n                <Button onClick={props.handleClose} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SubmitPostDialog;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport {useState} from 'react';\r\n\r\nfunction SubmitCommentDialog(props) {\r\n\r\n    const [content, setContent] = useState(\"\");\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Comment</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        value={content} onChange={(e) => {setContent(e.target.value)}}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"content\"\r\n                        label=\"Content\"\r\n                        fullWidth\r\n                        multiline\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={async () => {\r\n                    await props.handleSubmit({\r\n                        user_id: props.profile.profile_id,\r\n                        user_name: props.profile.user_name,\r\n                        user_img: props.profile.img_url,\r\n                        content: content\r\n                    });\r\n                }} color=\"primary\">\r\n                    Submit\r\n                </Button>\r\n                <Button onClick={props.handleClose} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SubmitCommentDialog;","import React from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst ColorPickerCell = (props) => {\r\n    return (\r\n        <Paper variant=\"outlined\" square={true} onClick={() => {props.submit(props.color);}} style={{\r\n            backgroundColor: props.color,\r\n            width: 37.5,\r\n            height: 32\r\n        }}></Paper>\r\n    )\r\n}\r\n\r\nexport default ColorPickerCell\r\n","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        '&$disabled $notchedOutline': {\r\n            boarderColor: \"yellow !important\"\r\n        }\r\n    },\r\n    disabled: {},\r\n    notchedOutline: {}\r\n}));\r\n\r\nconst ProfileSearchBar = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleOpen = () => {\r\n        if (inputValue.length > 2) {\r\n            setOpen(true);\r\n        }\r\n    };\r\n    const handleInputChange = (event, newInputValue) => {\r\n        setInputValue(newInputValue);\r\n        setOpen(newInputValue.length > 2);\r\n    };\r\n\r\n    return (\r\n        <div style={{ width: 300 }}>\r\n            <Autocomplete\r\n                freeSolo\r\n                id=\"free-solo-2-demo\"\r\n                disableClearable\r\n                options={props.profiles.map((option) => option.user_name)}\r\n                open={open}\r\n                onOpen={handleOpen}\r\n                onClose={() => setOpen(false)}\r\n                inputValue={inputValue}\r\n                onInputChange={handleInputChange}\r\n                renderInput={(params) => (\r\n                <TextField\r\n                    {...params}\r\n                    label=\"Search\"\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    InputProps={{ ...params.InputProps, type: 'search', classes: {\r\n                        root: classes.root,\r\n                        disabled: classes.disabled,\r\n                        notchedOutline: classes.notchedOutline\r\n                    }}}\r\n                />\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileSearchBar\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport ColorPickerCell from './ColorPickerCell';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst colors = [\r\n    \"#f44336\",\r\n    \"#e91e63\",\r\n    \"#9c27b0\",\r\n    \"#673ab7\",\r\n    \"#3f51b5\",\r\n    \"#2196f3\",\r\n    \"#03a9f4\",\r\n    \"#00bcd4\",\r\n    \"#009688\",\r\n    \"#4caf50\",\r\n    \"#8bc34a\",\r\n    \"#cddc39\",\r\n    \"#ffeb3b\",\r\n    \"#ffc107\",\r\n    \"#ff9800\",\r\n    \"#ff5722\"\r\n];\r\n\r\nconst ColorPicker = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Pick a Color</DialogTitle>\r\n                <DialogContent style={{width: 150}}>\r\n                    <Grid container spacing={0}>\r\n                        <Grid container item xs={12} spacing={0}>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell color={colors[0]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[1]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[2]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[3]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} spacing={0}>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[4]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[5]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[6]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[7]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} spacing={0}>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[8]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[9]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[10]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[11]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} spacing={0}>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[12]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[13]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[14]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[15]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions></DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ColorPicker\r\n","import React from 'react'\r\nimport PostCard from \"../components/PostCard.js\";\r\nimport SubmitPostDialog from '../components/SubmitPostDialog';\r\nimport SubmitCommentDialog from '../components/SubmitCommentDilog.js';\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from '@material-ui/core/Button';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { createTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport {useState, useEffect, useRef} from 'react';\r\nimport ProfileSearchBar from '../components/ProfileSearchBar.js';\r\nimport ColorPicker from '../components/ColorPicker.js';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\n\r\nconst Posts = (props) => {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [profiles, setProfiles] = useState([]);\r\n    const [commentingPost, setCommentingPost] = useState(null);\r\n    const [primaryColor, setPrimaryColor] = useState('#3f50b5');\r\n    const [postDialogOpen, setPostDialogOpen] = useState(false);\r\n    const [colorDialogOpen, setColorDialogOpen] = useState(false);\r\n    const [commentDialogOpen, setCommentDialogOpen] = useState(false);\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n    //const [searchOptionsOpen, setSearchOptionsOpen] = useState(false);\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const anchorRef = useRef(null);\r\n\r\n    const handleSubmitPost = async (post) => {\r\n        setPostDialogOpen(false);\r\n        //console.log(post)\r\n        const newPost = await fetch(\"https://fast-coast-04774.herokuapp.com/posts\", {\r\n        method: \"POST\",\r\n        headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify(post)\r\n        });\r\n        //console.log(newPost);\r\n        await fetchPosts();\r\n    };\r\n\r\n    const handleSubmitColor = async (color) => {\r\n        setColorDialogOpen(false);\r\n        setPrimaryColor(color);\r\n        //console.log(color);\r\n    }\r\n\r\n    const handleSubmitComment = async (comment) => {\r\n        setCommentDialogOpen(false);\r\n        //console.log(\"Comment\");\r\n        //console.log(comment);\r\n        commentingPost.comments.commentList.push(comment);\r\n        //console.log(commentingPost);\r\n        const newPost = await fetch(\"https://fast-coast-04774.herokuapp.com/posts/\" + commentingPost.post_id, {\r\n        method: \"PUT\",\r\n        headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify(commentingPost)\r\n        });\r\n        //console.log(newPost.json());\r\n    }\r\n\r\n    const fetchPosts = async () => {\r\n        const res = await fetch('https://fast-coast-04774.herokuapp.com/posts');\r\n        const data = await res.json();\r\n        //console.log(data);\r\n        setPosts(data);\r\n    }\r\n    const fetchProfiles = async () => {\r\n        const res = await fetch('https://fast-coast-04774.herokuapp.com/profiles');\r\n        const data = await res.json();\r\n        //console.log(data);\r\n        setProfiles(data);\r\n    }\r\n    useEffect(() => {\r\n        if (props.isAuth) {\r\n            document.title = \"Social Network\"\r\n            fetchPosts();\r\n            fetchProfiles();\r\n            setPrimaryColor(props.profile.primary_color)\r\n        }\r\n    }, [props.isAuth, props.profile.primary_color])\r\n\r\n    const classes = useStyles();\r\n    \r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n\r\n        setMenuOpen(false);\r\n    };\r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setSnackbarOpen(false);\r\n      };\r\n\r\n    const logout = () => {\r\n        console.log(\"Logout Successful\");\r\n        props.setProfile([]);\r\n        props.setIsAuth(false);\r\n    }\r\n\r\n    var theme = createTheme({\r\n        palette: {\r\n            primary: {\r\n                light: '#757ce8',\r\n                main: primaryColor,\r\n                dark: '#002884',\r\n                contrastText: '#fff',\r\n            },\r\n            secondary: {\r\n                light: '#ff7961',\r\n                main: '#f44336',\r\n                dark: '#ba000d',\r\n                contrastText: '#000',\r\n            },\r\n        },\r\n    });\r\n    \r\n    //<ProfileSearchBar style={{flexGrow: 1}} profiles={profiles}/>\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h5\">\r\n                        Social Network\r\n                    </Typography>\r\n                    <div className={classes.title}/>\r\n                    <Typography>\r\n                        {props.profile.user_name}\r\n                    </Typography>\r\n                    <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={() => {setMenuOpen(!menuOpen)}} ref={anchorRef} \r\n                        aria-controls={menuOpen ? 'menu-list-grow' : undefined} aria-haspopup=\"true\">\r\n                        <Avatar src={props.profile.img_url}/>\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <br />\r\n            <Button variant=\"contained\" color=\"primary\" size={\"medium\"} onClick={() => {setPostDialogOpen(true);}}><b>Post</b></Button>\r\n            <Container maxWidth=\"sm\">\r\n                {posts.map((item) => (<PostCard key={item.post_id} post={item} viewer_ID={props.profile.profile_id} setSnackbarOpen={setSnackbarOpen} commentCallback={() => {\r\n                    setCommentingPost(item);\r\n                    setCommentDialogOpen(true);\r\n                }}/>))}\r\n            </Container>\r\n            <SubmitPostDialog open={postDialogOpen} handleClose={() => {setPostDialogOpen(false);}} handleSubmit={handleSubmitPost} profile={props.profile}/>\r\n            <SubmitCommentDialog open={commentDialogOpen} handleClose={() => {setCommentDialogOpen(false);}} handleSubmit={handleSubmitComment} profile={props.profile} post={commentingPost}/>\r\n            <ColorPicker open={colorDialogOpen} handleClose={() => {setColorDialogOpen(false);}} handleSubmit={handleSubmitColor}/>\r\n            <Snackbar\r\n                open={snackbarOpen}\r\n                autoHideDuration={3000}\r\n                onClose={handleSnackbarClose}\r\n                message=\"Link copied to clipboard\"\r\n                action={\r\n                    <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleSnackbarClose}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                }\r\n            />\r\n            <Popper open={menuOpen} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                {({ TransitionProps, placement }) => (\r\n                    <Grow\r\n                    {...TransitionProps}\r\n                    style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                    >\r\n                    <Paper>\r\n                        <ClickAwayListener onClickAway={handleClose}>\r\n                        <MenuList autoFocusItem={menuOpen} id=\"menu-list-grow\">\r\n                            <GoogleLogout\r\n                                clientId=\"399415598384-sgkom02f57l549gtnn877013fg004ke5.apps.googleusercontent.com\"\r\n                                render={renderProps => (\r\n                                    <MenuItem onClick={renderProps.onClick}  disabled={renderProps.disabled}>\r\n                                        Logout\r\n                                    </MenuItem>\r\n                                )}\r\n                                buttonText=\"Logout\"\r\n                                onLogoutSuccess={logout}\r\n                            >\r\n                            </GoogleLogout>\r\n                            <MenuItem onClick={() => {setMenuOpen(false); setColorDialogOpen(true);}}>\r\n                                Select Accent Color\r\n                            </MenuItem>\r\n                        </MenuList>\r\n                        </ClickAwayListener>\r\n                    </Paper>\r\n                    </Grow>\r\n                )}\r\n            </Popper>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n","import React from 'react'\r\n\r\nconst PageNotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>404: Page not found</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageNotFound\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({component: Component, isAuth, ...rest}) => {\r\n    return (\r\n        <Route {...rest} render={\r\n            (props) => {\r\n                if (isAuth) {\r\n                    return <Component {...props}/>\r\n                }\r\n                else {\r\n                    return <Redirect to={\r\n                        {\r\n                            pathname: '/',\r\n                            state: {\r\n                                from: props.location\r\n                            }\r\n\r\n                        }\r\n                    }/>\r\n                }\r\n                \r\n            }\r\n        }/>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute\r\n","import React from 'react'\r\nimport PostCard from '../components/PostCard'\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useState, useEffect} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst SinglePostPage = () => {\r\n\r\n    let { id } = useParams();\r\n\r\n    const [post, setPost] = useState(null);\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n    const fetchPost = async () => {\r\n        const res = await fetch('https://fast-coast-04774.herokuapp.com/posts/' + id);\r\n        const data = await res.json();\r\n        document.title = \"Social Network\"\r\n\r\n        console.log(data);\r\n        setPost(data);\r\n    }\r\n    useEffect( () => {\r\n        fetchPost();\r\n    }, [])\r\n\r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n        return;\r\n        }\r\n    \r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    return (\r\n        (post) ? \r\n        <div>\r\n            <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\" style={{minHeight: \"100vh\"}}>\r\n                <Grid item>\r\n                    <PostCard key={post.post_id} post={post} viewer_ID={-1} setSnackbarOpen={setSnackbarOpen}/>\r\n                </Grid>\r\n            </Grid>\r\n            <Snackbar\r\n                open={snackbarOpen}\r\n                autoHideDuration={3000}\r\n                onClose={handleSnackbarClose}\r\n                message=\"Link copied to clipboard\"\r\n                action={\r\n                    <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleSnackbarClose}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                }\r\n            />\r\n        </div> :\r\n        null\r\n    )\r\n}\r\n\r\nexport default SinglePostPage","import './App.css';\nimport {HashRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\nimport Home from './pages/Home';\nimport Posts from './pages/Posts';\nimport PageNotFound from './pages/PageNotFound';\nimport {useState} from 'react';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport SinglePostPage from './pages/SinglePostPage';\n\nfunction App() {\n\n  const [profile, setProfile] = useState([]);\n  const [isAuth, setIsAuth] = useState(false);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={()=><Home setProfile={setProfile} setIsAuth={setIsAuth} isAuth={isAuth}/>}/>\n          <ProtectedRoute path=\"/posts\" isAuth={isAuth} component={(props)=><Posts {...props} profile={profile} setProfile={setProfile} isAuth={isAuth} setIsAuth={setIsAuth}/>}/>\n          <Route exact path=\"/404\" component={PageNotFound}/>\n          <Route path=\"/post/:id\" component={SinglePostPage}/>\n          <Redirect to=\"/404\"/>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}