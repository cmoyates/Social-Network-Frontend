{"version":3,"sources":["pages/Home.js","components/Comments.js","components/PostCard.js","components/SubmitPostDialog.js","components/SubmitCommentDilog.js","pages/Posts.js","pages/PageNotFound.js","components/ProtectedRoute.js","pages/SinglePostPage.js","pages/ProfilePage.js","components/SettingsMenu.js","components/ColorPickerCell.js","components/ColorPicker.js","components/ProfileSearchBar.js","components/LoggedInPage.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","responseGoogleSuccess","response","a","profileIsNew","profile","fetch","profileObj","email","res","json","data","console","log","newProfile","user_email","user_name","name","img_url","imageUrl","method","headers","body","JSON","stringify","setProfile","setIsAuth","isAuth","to","style","position","left","top","transform","clientId","buttonText","onSuccess","onFailure","isSignedIn","cookiePolicy","useStyles","makeStyles","theme","cardHeader","display","flexDirection","alignItems","nameText","paddingLeft","Comments","classes","history","useHistory","goToCommenterProfile","item","isSinglePostPage","push","user_id","commentList","length","map","index","Divider","CardContent","className","Avatar","src","user_img","onClick","content","PostCard","useState","post","setPost","useEffect","goToPosterProfile","likeAPost","likes","includes","viewer_ID","filter","post_id","newPost","Card","margin","CardActions","Grid","container","direction","justifyContent","Button","size","color","disabled","startIcon","orientation","flexItem","commentCallback","setSnackbarOpen","navigator","clipboard","writeText","comments","SubmitPostDialog","setContent","Dialog","open","onClose","handleClose","DialogTitle","id","DialogContent","TextField","value","onChange","e","target","autoFocus","label","fullWidth","multiline","DialogActions","handleSubmit","profile_id","SubmitCommentDialog","root","flexGrow","menuButton","marginRight","spacing","title","Posts","posts","setPosts","commentingPost","setCommentingPost","postDialogOpen","setPostDialogOpen","commentDialogOpen","setCommentDialogOpen","snackbarOpen","handleSubmitPost","fetchPosts","handleSubmitComment","comment","document","primary_color","handleSnackbarClose","event","reason","variant","Container","maxWidth","Snackbar","autoHideDuration","message","action","IconButton","fontSize","PageNotFound","ProtectedRoute","Component","component","rest","render","pathname","state","from","location","SinglePostPage","useParams","fetchPost","justify","minHeight","ProfilePage","pageProfile","setPageProfile","following","setFollowing","fetchPageProfile","fetchPageProfilePosts","SettingsMenu","Popper","anchorEl","role","undefined","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","renderProps","MenuItem","onLogoutSuccess","logout","accColorClick","ColorPickerCell","square","submit","backgroundColor","width","height","colors","ColorPicker","xs","boarderColor","notchedOutline","ProfileSearchBar","inputValue","setInputValue","setOpen","Autocomplete","disableClearable","options","profiles","getOptionLabel","option","onOpen","onInputChange","newInputValue","popupIcon","hasPopupIcon","hasClearIcon","renderInput","params","InputProps","type","LoggedInPage","menuOpen","setMenuOpen","colorDialogOpen","setColorDialogOpen","primaryColor","setPrimaryColor","setProfiles","anchorRef","useRef","fetchProfiles","handleSubmitColor","createTheme","palette","primary","light","main","dark","contrastText","secondary","ThemeProvider","AppBar","Toolbar","Typography","ref","page","current","contains","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b9d00540.chunk.js","sourcesContent":["import React from 'react'\r\nimport GoogleLogin from 'react-google-login';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Home = (props) => {\r\n\r\n    const responseGoogleSuccess = async (response) => {\r\n        let profileIsNew = false;\r\n        let profile = null;\r\n        try {\r\n            const res = await fetch('https://fast-coast-04774.herokuapp.com/profiles/email/' + response.profileObj.email);\r\n            const data = await res.json();\r\n            profile = data;\r\n            //console.log(\"Data\");\r\n            //console.log(data);\r\n            console.log(\"Profile Exists!\");\r\n        } catch (error) {\r\n            console.log(error);\r\n            profileIsNew = true;\r\n        }\r\n\r\n        if (profileIsNew) {\r\n            console.log(\"Creating new Profile...\");\r\n            try {\r\n                const newProfile = {\r\n                    user_email: response.profileObj.email,\r\n                    user_name: response.profileObj.name,\r\n                    img_url: response.profileObj.imageUrl,\r\n                };\r\n                //console.log(newProfile);\r\n                const res = await fetch(\"https://fast-coast-04774.herokuapp.com/profiles\", {\r\n                    method: \"POST\",\r\n                    headers : { \r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(newProfile)\r\n                });\r\n                profile = await res.json();\r\n                console.log(\"Profile Created!\");\r\n            } catch (error) {\r\n                console.log(error);\r\n                return;\r\n            }\r\n        }\r\n        //console.log(profile);\r\n        props.setProfile(profile);\r\n        //console.log(\"Profile\");\r\n        //console.log(profile);\r\n        props.setIsAuth(true);\r\n        //console.log(response);\r\n        console.log(\"Login Successful\");\r\n    }\r\n    const responseGoogleFailure = (response) => {\r\n        console.log(\"Login Failed\");\r\n        console.log(response);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/posts\"/>;\r\n    }\r\n    else {\r\n        return (\r\n            <div\r\n            style={{\r\n                position: 'absolute', left: '50%', top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n            }}\r\n            >\r\n                <h1>Welcome to the Social Network!</h1>\r\n                <p>\r\n                    <GoogleLogin\r\n                        clientId=\"399415598384-sgkom02f57l549gtnn877013fg004ke5.apps.googleusercontent.com\"\r\n                        buttonText=\"Login\"\r\n                        onSuccess={responseGoogleSuccess}\r\n                        onFailure={responseGoogleFailure}\r\n                        isSignedIn={true}\r\n                        cookiePolicy={'single_host_origin'}\r\n                    />\r\n                </p>\r\n            </div>\r\n        );\r\n    }    \r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardHeader: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: \"center\"\r\n    },\r\n    nameText: {\r\n        paddingLeft: \"10px\",\r\n    }\r\n}));\r\n\r\nconst Comments = (props) => {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    const goToCommenterProfile = (item) => {\r\n        if (!props.isSinglePostPage) {\r\n            history.push('/profile/' + item.user_id);\r\n        }\r\n    }\r\n\r\n    return ((props.commentList.length > 0) ?\r\n        <div>\r\n            {props.commentList.map((item, index) => (\r\n                <div key={index}>\r\n                    <Divider/>\r\n                    <CardContent>\r\n                        <div className={classes.cardHeader}>\r\n                            <Avatar src={item.user_img} onClick={()=>{goToCommenterProfile(item)}}/>\r\n                            <h4 className={classes.nameText} onClick={()=>{goToCommenterProfile(item)}}>{item.user_name}</h4>\r\n                        </div>\r\n                        <Divider/>\r\n                        <p>{item.content}</p>\r\n                    </CardContent>\r\n                </div>\r\n            ))}\r\n        </div> : null\r\n    )\r\n}\r\n\r\nexport default Comments\r\n","import React from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { useState, useEffect } from 'react';\r\nimport Comments from './Comments';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardHeader: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: \"center\"\r\n    },\r\n    nameText: {\r\n        paddingLeft: \"10px\",\r\n    }\r\n}));\r\n\r\nconst PostCard = (props) => {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    const [post, setPost] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setPost(props.post);\r\n    }, [])\r\n\r\n    const goToPosterProfile = () => {\r\n        if (!isSinglePostPage) {\r\n            history.push('/profile/' + post.user_id);\r\n        }\r\n    }\r\n\r\n    const likeAPost = async () => {\r\n        //console.log(props.viewer_ID);\r\n        //console.log(\"Like\");\r\n        if (props.post.likes.includes(props.viewer_ID)) {\r\n            //console.log(\"Yes\");\r\n            props.post.likes = props.post.likes.filter(item => item !== props.viewer_ID)\r\n        }\r\n        else {\r\n            //console.log(\"No\");\r\n            props.post.likes.push(props.viewer_ID);\r\n        }\r\n\r\n        const newPost = await fetch(\"https://fast-coast-04774.herokuapp.com/posts/\" + props.post.post_id, {\r\n        method: \"PUT\",\r\n        headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify(props.post)\r\n        });\r\n        //console.log(newPost);\r\n        setPost(newPost);\r\n    }\r\n\r\n    const isSinglePostPage = props.viewer_ID === -1;\r\n\r\n    return (\r\n        <Card style={{margin: 20,}}>\r\n            <CardContent>\r\n                <div className={classes.cardHeader}>\r\n                    <Avatar src={props.post.user_img} onClick={goToPosterProfile}/>\r\n                    <h3 className={classes.nameText} onClick={goToPosterProfile}>{props.post.user_name}</h3>\r\n                </div>\r\n                <Divider/>\r\n                <p>{props.post.content}</p>\r\n            </CardContent>\r\n            <Divider/>\r\n            <CardActions>\r\n                <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n                >\r\n                    <Button size={\"small\"} color={(props.post.likes.includes(props.viewer_ID)) ? \"primary\" : \"default\"} disabled={isSinglePostPage} startIcon={<ThumbUpIcon />} onClick={() => {\r\n                        likeAPost();\r\n                    }}>Like ({props.post.likes.length})</Button>\r\n                    <Divider orientation=\"vertical\" flexItem />\r\n                    <Button size={\"small\"} disabled={isSinglePostPage} startIcon={<CommentIcon />} onClick={() => {\r\n                        //console.log(\"Comment\");\r\n                        props.commentCallback();\r\n                    }}>Comment</Button>\r\n                    <Divider orientation=\"vertical\" flexItem />\r\n                    <Button size={\"small\"} startIcon={<ShareIcon />} onClick={() => {\r\n                        //console.log(\"Share\");\r\n                        props.setSnackbarOpen(true);\r\n                        navigator.clipboard.writeText(\"https://cmoyates.github.io/Social-Network-Frontend/#/post/\" + props.post.post_id);\r\n                    }}>Share</Button>\r\n                </Grid>\r\n            </CardActions>\r\n            <Comments commentList={props.post.comments.commentList} isSinglePostPage={isSinglePostPage}/>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default PostCard","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport {useState} from 'react';\r\n\r\nfunction SubmitPostDialog(props) {\r\n\r\n    const [content, setContent] = useState(\"\");\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Post</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        value={content} onChange={(e) => {setContent(e.target.value)}}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"content\"\r\n                        label=\"Content\"\r\n                        fullWidth\r\n                        multiline\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={async () => {\r\n                    await props.handleSubmit({\r\n                        user_id: props.profile.profile_id,\r\n                        user_name: props.profile.user_name,\r\n                        user_img: props.profile.img_url,\r\n                        content: content\r\n                    });\r\n                }} color=\"primary\">\r\n                    Submit\r\n                </Button>\r\n                <Button onClick={props.handleClose} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SubmitPostDialog;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport {useState} from 'react';\r\n\r\nfunction SubmitCommentDialog(props) {\r\n\r\n    const [content, setContent] = useState(\"\");\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Comment</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        value={content} onChange={(e) => {setContent(e.target.value)}}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"content\"\r\n                        label=\"Content\"\r\n                        fullWidth\r\n                        multiline\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={async () => {\r\n                    await props.handleSubmit({\r\n                        user_id: props.profile.profile_id,\r\n                        user_name: props.profile.user_name,\r\n                        user_img: props.profile.img_url,\r\n                        content: content\r\n                    });\r\n                }} color=\"primary\">\r\n                    Submit\r\n                </Button>\r\n                <Button onClick={props.handleClose} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SubmitCommentDialog;","import React from 'react'\r\nimport PostCard from \"../components/PostCard.js\";\r\nimport SubmitPostDialog from '../components/SubmitPostDialog';\r\nimport SubmitCommentDialog from '../components/SubmitCommentDilog.js';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n//import Avatar from '@material-ui/core/Avatar';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {useState, useEffect} from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\n\r\nconst Posts = (props) => {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [commentingPost, setCommentingPost] = useState(null);\r\n    const [postDialogOpen, setPostDialogOpen] = useState(false);\r\n    const [commentDialogOpen, setCommentDialogOpen] = useState(false);\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n    const handleSubmitPost = async (post) => {\r\n        setPostDialogOpen(false);\r\n        //console.log(post)\r\n        const newPost = await fetch(\"https://fast-coast-04774.herokuapp.com/posts\", {\r\n        method: \"POST\",\r\n        headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify(post)\r\n        });\r\n        await fetchPosts();\r\n    };\r\n\r\n    const handleSubmitComment = async (comment) => {\r\n        setCommentDialogOpen(false);\r\n        commentingPost.comments.commentList.push(comment);\r\n        const newPost = await fetch(\"https://fast-coast-04774.herokuapp.com/posts/\" + commentingPost.post_id, {\r\n        method: \"PUT\",\r\n        headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify(commentingPost)\r\n        });\r\n    }\r\n\r\n    const fetchPosts = async () => {\r\n        const res = await fetch('https://fast-coast-04774.herokuapp.com/posts');\r\n        const data = await res.json();\r\n        console.log(\"Posts\");\r\n        console.log(data);\r\n        setPosts(data);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        document.title = \"Social Network\"\r\n            console.log(\"Test\")\r\n            fetchPosts();\r\n    }, [props.profile.primary_color])\r\n\r\n    const classes = useStyles();\r\n    \r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n    \r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            <Button variant=\"contained\" color=\"primary\" size={\"medium\"} onClick={() => {setPostDialogOpen(true);}}><b>Post</b></Button>\r\n            <Container maxWidth=\"sm\">\r\n                {posts.map((item) => (<PostCard key={item.post_id} post={item} viewer_ID={props.profile.profile_id} setSnackbarOpen={setSnackbarOpen} commentCallback={() => {\r\n                    setCommentingPost(item);\r\n                    setCommentDialogOpen(true);\r\n                }}/>))}\r\n            </Container>\r\n            <SubmitPostDialog open={postDialogOpen} handleClose={() => {setPostDialogOpen(false);}} handleSubmit={handleSubmitPost} profile={props.profile}/>\r\n            <SubmitCommentDialog open={commentDialogOpen} handleClose={() => {setCommentDialogOpen(false);}} handleSubmit={handleSubmitComment} profile={props.profile} post={commentingPost}/>\r\n            <Snackbar\r\n                open={snackbarOpen}\r\n                autoHideDuration={3000}\r\n                onClose={handleSnackbarClose}\r\n                message=\"Link copied to clipboard\"\r\n                action={\r\n                    <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleSnackbarClose}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts","import React from 'react'\r\n\r\nconst PageNotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>404: Page not found</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageNotFound\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({component: Component, isAuth, ...rest}) => {\r\n    return (\r\n        <Route {...rest} render={\r\n            (props) => {\r\n                if (isAuth) {\r\n                    return <Component {...props}/>\r\n                }\r\n                else {\r\n                    return <Redirect to={\r\n                        {\r\n                            pathname: '/',\r\n                            state: {\r\n                                from: props.location\r\n                            }\r\n\r\n                        }\r\n                    }/>\r\n                }\r\n                \r\n            }\r\n        }/>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute\r\n","import React from 'react'\r\nimport PostCard from '../components/PostCard'\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useState, useEffect} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst SinglePostPage = () => {\r\n\r\n    let { id } = useParams();\r\n\r\n    const [post, setPost] = useState(null);\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n    const fetchPost = async () => {\r\n        setPost(null);\r\n        const res = await fetch('https://fast-coast-04774.herokuapp.com/posts/' + id);\r\n        const data = await res.json();\r\n        document.title = \"Social Network\"\r\n\r\n        console.log(data);\r\n        setPost(data);\r\n    }\r\n    useEffect( () => {\r\n        fetchPost();\r\n    }, [id])\r\n\r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n        return;\r\n        }\r\n    \r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    return (\r\n        (post) ? \r\n        <div>\r\n            <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\" style={{minHeight: \"100vh\"}}>\r\n                <Grid item>\r\n                    <PostCard key={post.post_id} post={post} viewer_ID={-1} setSnackbarOpen={setSnackbarOpen}/>\r\n                </Grid>\r\n            </Grid>\r\n            <Snackbar\r\n                open={snackbarOpen}\r\n                autoHideDuration={3000}\r\n                onClose={handleSnackbarClose}\r\n                message=\"Link copied to clipboard\"\r\n                action={\r\n                    <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleSnackbarClose}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                }\r\n            />\r\n        </div> :\r\n        null\r\n    )\r\n}\r\n\r\nexport default SinglePostPage","import React from 'react'\r\nimport {useParams, Redirect} from \"react-router-dom\";\r\nimport {useState, useEffect} from 'react';\r\nimport PostCard from '../components/PostCard';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SubmitCommentDialog from '../components/SubmitCommentDilog';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nconst ProfilePage = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    let { id } = useParams();\r\n\r\n    const [pageProfile, setPageProfile] = useState(null);\r\n    const [posts, setPosts] = useState([]);\r\n    const [commentDialogOpen, setCommentDialogOpen] = useState(false);\r\n    const [commentingPost, setCommentingPost] = useState(null);\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n    const [following, setFollowing] = useState(false);\r\n\r\n    const fetchPageProfile = async () => {\r\n        try {\r\n            setPageProfile(null);\r\n            const res = await fetch('https://fast-coast-04774.herokuapp.com/profiles/' + id);\r\n            const data = await res.json();\r\n            document.title = \"Social Network\"\r\n\r\n            console.log(data);\r\n            setPageProfile(data);\r\n            await fetchPageProfilePosts();\r\n        } catch (error) {\r\n            setPageProfile(-1);\r\n        }\r\n    }\r\n\r\n    const fetchPageProfilePosts = async () => {\r\n        const res = await fetch('https://fast-coast-04774.herokuapp.com/posts/user/' + id);\r\n        const data = await res.json();\r\n\r\n        console.log(data);\r\n        setPosts(data);\r\n    }\r\n\r\n    const handleSubmitComment = async (comment) => {\r\n        setCommentDialogOpen(false);\r\n        commentingPost.comments.commentList.push(comment);\r\n        const newPost = await fetch(\"https://fast-coast-04774.herokuapp.com/posts/\" + commentingPost.post_id, {\r\n        method: \"PUT\",\r\n        headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify(commentingPost)\r\n        });\r\n    }\r\n\r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n    \r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    useEffect( () => {\r\n        fetchPageProfile();\r\n    }, [id])\r\n\r\n    if (!pageProfile) {\r\n        return null;\r\n    }\r\n    else if (pageProfile === -1) {\r\n        return (<Redirect to={\r\n            {\r\n                pathname: '/404',\r\n                state: {\r\n                    from: props.location\r\n                }\r\n\r\n            }\r\n        }/>)\r\n    }\r\n    else {\r\n        return (\r\n            <div>\r\n                <h1>{pageProfile.user_name} <Button variant=\"outlined\" onClick={()=>{setFollowing(!following)}}>{(following) ? \"Following\" : \"Follow\"}</Button></h1>\r\n                \r\n                <Container maxWidth=\"sm\">\r\n                    {posts.map((item) => (<PostCard key={item.post_id} post={item} viewer_ID={props.profile.profile_id} setSnackbarOpen={setSnackbarOpen} commentCallback={() => {\r\n                        setCommentingPost(item);\r\n                        setCommentDialogOpen(true);\r\n                    }}/>))}\r\n                </Container>\r\n                <SubmitCommentDialog open={commentDialogOpen} handleClose={() => {setCommentDialogOpen(false);}} handleSubmit={handleSubmitComment} profile={props.profile} post={commentingPost}/>\r\n                <Snackbar\r\n                    open={snackbarOpen}\r\n                    autoHideDuration={3000}\r\n                    onClose={handleSnackbarClose}\r\n                    message=\"Link copied to clipboard\"\r\n                    action={\r\n                        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleSnackbarClose}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfilePage","import React from 'react'\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { GoogleLogout } from 'react-google-login';\r\n\r\nconst SettingsMenu = (props) => {\r\n    return (\r\n        <Popper open={props.open} anchorEl={props.anchorEl} role={undefined} transition disablePortal>\r\n            {({ TransitionProps, placement }) => (\r\n                <Grow\r\n                {...TransitionProps}\r\n                style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                >\r\n                <Paper>\r\n                    <ClickAwayListener onClickAway={props.handleClose}>\r\n                    <MenuList autoFocusItem={props.open} id=\"menu-list-grow\">\r\n                        <GoogleLogout\r\n                            clientId=\"399415598384-sgkom02f57l549gtnn877013fg004ke5.apps.googleusercontent.com\"\r\n                            render={renderProps => (\r\n                                <MenuItem onClick={renderProps.onClick}  disabled={renderProps.disabled}>\r\n                                    Logout\r\n                                </MenuItem>\r\n                            )}\r\n                            buttonText=\"Logout\"\r\n                            onLogoutSuccess={props.logout}\r\n                        >\r\n                        </GoogleLogout>\r\n                        <MenuItem onClick={props.accColorClick}>\r\n                            Select Accent Color\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                    </ClickAwayListener>\r\n                </Paper>\r\n                </Grow>\r\n            )}\r\n        </Popper>\r\n    )\r\n}\r\n\r\nexport default SettingsMenu\r\n","import React from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst ColorPickerCell = (props) => {\r\n    return (\r\n        <Paper variant=\"outlined\" square={true} onClick={() => {props.submit(props.color);}} style={{\r\n            backgroundColor: props.color,\r\n            width: 37.5,\r\n            height: 32\r\n        }}></Paper>\r\n    )\r\n}\r\n\r\nexport default ColorPickerCell\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport ColorPickerCell from './ColorPickerCell';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst colors = [\r\n    \"#f44336\",\r\n    \"#e91e63\",\r\n    \"#9c27b0\",\r\n    \"#673ab7\",\r\n    \"#3f51b5\",\r\n    \"#2196f3\",\r\n    \"#03a9f4\",\r\n    \"#00bcd4\",\r\n    \"#009688\",\r\n    \"#4caf50\",\r\n    \"#8bc34a\",\r\n    \"#cddc39\",\r\n    \"#ffeb3b\",\r\n    \"#ffc107\",\r\n    \"#ff9800\",\r\n    \"#ff5722\"\r\n];\r\n\r\nconst ColorPicker = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Pick a Color</DialogTitle>\r\n                <DialogContent style={{width: 150}}>\r\n                    <Grid container spacing={0}>\r\n                        <Grid container item xs={12} spacing={0}>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell color={colors[0]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[1]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[2]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[3]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} spacing={0}>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[4]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[5]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[6]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[7]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} spacing={0}>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[8]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[9]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[10]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[11]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} spacing={0}>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[12]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[13]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[14]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <ColorPickerCell  color={colors[15]} submit={props.handleSubmit}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions></DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ColorPicker\r\n","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        '&$disabled $notchedOutline': {\r\n            boarderColor: \"yellow !important\"\r\n        }\r\n    },\r\n    disabled: {},\r\n    notchedOutline: {}\r\n}));\r\n\r\nconst ProfileSearchBar = (props) => {\r\n    let history = useHistory();\r\n\r\n    const classes = useStyles();\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleOpen = () => {\r\n        if (inputValue.length > 2) {\r\n            setOpen(true);\r\n        }\r\n    };\r\n    const handleInputChange = (event, newInputValue) => {\r\n        setInputValue(newInputValue);\r\n        setOpen(newInputValue.length > 2);\r\n    };\r\n\r\n    return (\r\n        <div style={{ width: 300 }}>\r\n            <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                disableClearable\r\n                options={props.profiles}\r\n                getOptionLabel={(option)=>{return option.user_name}}\r\n                open={open}\r\n                onOpen={handleOpen}\r\n                onClose={() => setOpen(false)}\r\n                inputValue={inputValue}\r\n                onInputChange={handleInputChange}\r\n                onChange={(event, value)=>{history.push('/profile/' + value.profile_id);}}\r\n                popupIcon={null}\r\n                style={{hasPopupIcon: false, hasClearIcon: false}}\r\n                renderInput={(params) => (\r\n                <TextField\r\n                    {...params}\r\n                    label=\"Search\"\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    InputProps={{ ...params.InputProps, type: 'search', classes: {\r\n                        root: classes.root,\r\n                        disabled: classes.disabled,\r\n                        notchedOutline: classes.notchedOutline\r\n                    }}}\r\n                />\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileSearchBar\r\n","import React from 'react'\r\n//import Button from '@material-ui/core/Button';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n//import CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { createTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport {useState, useEffect, useRef} from 'react';\r\nimport SettingsMenu from './SettingsMenu';\r\nimport ColorPicker from './ColorPicker';\r\nimport ProfileSearchBar from '../components/ProfileSearchBar.js';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nconst LoggedInPage = (props) => {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [colorDialogOpen, setColorDialogOpen] = useState(false);\r\n    const [primaryColor, setPrimaryColor] = useState('#3f50b5');\r\n    const [profiles, setProfiles] = useState([]);\r\n    const anchorRef = useRef(null);\r\n\r\n    const logout = () => {\r\n        console.log(\"Logout Successful\");\r\n        props.setProfile([]);\r\n        props.setIsAuth(false);\r\n    }\r\n\r\n    const fetchProfiles = async () => {\r\n        const res = await fetch('https://fast-coast-04774.herokuapp.com/profiles');\r\n        const data = await res.json();\r\n        //console.log(data);\r\n        setProfiles(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchProfiles();\r\n    }, [])\r\n\r\n    const handleSubmitColor = async (color) => {\r\n        setColorDialogOpen(false);\r\n        setPrimaryColor(color);\r\n        //console.log(color);\r\n    }\r\n\r\n    const handleMenuClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n        setMenuOpen(false);\r\n    };\r\n\r\n    var theme = createTheme({\r\n        palette: {\r\n            primary: {\r\n                light: '#757ce8',\r\n                main: primaryColor,\r\n                dark: '#002884',\r\n                contrastText: '#fff',\r\n            },\r\n            secondary: {\r\n                light: '#ff7961',\r\n                main: '#f44336',\r\n                dark: '#ba000d',\r\n                contrastText: '#000',\r\n            },\r\n        },\r\n    });\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                        <Grid item>\r\n                        <Typography variant=\"h5\" onClick={()=>{history.push('/posts');}}>\r\n                            Social Network\r\n                        </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                        <div className={classes.title}>\r\n                            <ProfileSearchBar style={{flexGrow: 1}} profiles={profiles}/>\r\n                        </div>\r\n                        </Grid>\r\n                        <Grid item>\r\n                        <Typography>\r\n                            {props.profile.user_name}\r\n                        </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={() => {setMenuOpen(!menuOpen)}} ref={anchorRef} \r\n                        aria-controls={menuOpen ? 'menu-list-grow' : undefined} aria-haspopup=\"true\">\r\n                        <Avatar src={props.profile.img_url}/>\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {props.page}\r\n            <SettingsMenu open={menuOpen} anchorEl={anchorRef.current} handleClose={handleMenuClose} accColorClick={() => {setMenuOpen(false); setColorDialogOpen(true);}} logout={logout}/>\r\n            <ColorPicker open={colorDialogOpen} handleClose={() => {setColorDialogOpen(false);}} handleSubmit={handleSubmitColor}/>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default LoggedInPage","import './App.css';\nimport {HashRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\nimport Home from './pages/Home';\nimport Posts from './pages/Posts';\nimport PageNotFound from './pages/PageNotFound';\nimport {useState} from 'react';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport SinglePostPage from './pages/SinglePostPage';\nimport ProfilePage from './pages/ProfilePage';\nimport LoggedInPage from './components/LoggedInPage';\n\nfunction App() {\n\n  const [profile, setProfile] = useState([]);\n  const [isAuth, setIsAuth] = useState(false);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={()=><Home setProfile={setProfile} setIsAuth={setIsAuth} isAuth={isAuth}/>}/>\n          <ProtectedRoute path=\"/posts\" isAuth={isAuth} component={(props)=><LoggedInPage {...props} profile={profile} setProfile={setProfile} isAuth={isAuth} setIsAuth={setIsAuth} page={<Posts profile={profile}/>}/>}/>\n          <Route exact path=\"/404\" component={PageNotFound}/>\n          <Route path=\"/post/:id\" component={SinglePostPage}/>\n          <ProtectedRoute path=\"/profile/:id\" profile={profile} isAuth={isAuth} component={(props)=><LoggedInPage {...props} profile={profile} setProfile={setProfile} isAuth={isAuth} setIsAuth={setIsAuth} page={<ProfilePage profile={profile}/>}/>}/>\n          <Redirect to=\"/404\"/>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}