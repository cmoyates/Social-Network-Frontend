{"version":3,"sources":["pages/Home.js","components/Comments.js","components/PostCard.js","pages/Feed.js","pages/PageNotFound.js","components/ProtectedRoute.js","pages/SinglePostPage.js","pages/ProfilePage.js","components/SettingsMenu.js","components/ProfileSearchBar.js","components/NewProfilePopup.js","components/SubmitPostDialog.js","pages/Messages.js","components/DeletePostDialog.js","components/FollowingDialog.js","components/LoggedInPage.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","responseGoogleSuccess","response","a","profileIsNew","profile","fetch","profileObj","email","res","json","data","console","log","newProfile","user_email","user_name","name","img_url","imageUrl","method","headers","body","JSON","stringify","profiles_following","profile_id","setFirstTime","setProfile","setIsAuth","isAuth","to","style","position","left","top","transform","clientId","buttonText","onSuccess","onFailure","isSignedIn","cookiePolicy","useStyles","makeStyles","theme","cardHeader","display","flexDirection","alignItems","nameText","paddingLeft","cursor","Comments","classes","history","useHistory","goToCommenterProfile","item","isSinglePostPage","push","user_id","commentList","length","map","index","Divider","CardContent","className","Avatar","src","user_img","onClick","content","postCard","margin","postDivider","deleteButton","grow","flexGrow","PostCard","useState","post","setPost","showDeleteButton","setShowDeleteButton","useEffect","goToPosterProfile","likeAPost","likes","includes","viewer_ID","filter","post_id","newPost","Card","onMouseOver","onMouseLeave","IconButton","deleteCallback","CardActions","Grid","container","direction","justifyContent","Button","size","color","disabled","startIcon","orientation","flexItem","commentCallback","setSnackbarOpen","navigator","clipboard","writeText","comments","Feed","document","title","posts","setPosts","fetchPosts","loading","variant","setPostDialogOpen","Container","maxWidth","setDeletingPost","setDeleteDialogOpen","setCommentingPost","setCommentDialogOpen","PageNotFound","ProtectedRoute","Component","component","rest","render","pathname","state","from","location","SinglePostPage","id","useParams","snackbarOpen","fetchPost","handleSnackbarClose","event","reason","justify","minHeight","Snackbar","open","autoHideDuration","onClose","message","action","fontSize","ProfilePage","pageProfile","setPageProfile","fetchPageProfile","fetchPageProfilePosts","followProfile","parseInt","setLoading","fetchFollowingProfiles","listIcon","minWidth","popupPaper","SettingsMenu","Popper","anchorEl","role","undefined","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","handleClose","MenuList","autoFocusItem","MenuItem","feedClick","ListItemText","ListItemIcon","messagesClick","followingClick","renderProps","onLogoutSuccess","logout","menuButton","marginRight","spacing","breakpoints","up","search","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","inputRoot","inputInput","transitions","create","sectionDesktop","sectionMobile","ProfileSearchBar","inputValue","setInputValue","setOpen","Autocomplete","disableClearable","options","profiles","getOptionLabel","option","onOpen","onInputChange","newInputValue","onChange","value","popupIcon","hasPopupIcon","hasClearIcon","renderInput","params","InputLabelProps","InputProps","InputBase","placeholder","root","input","inputProps","NewProfilePopup","Dialog","DialogTitle","DialogContent","Typography","align","maxHeight","overflow","List","ListItem","ListItemAvatar","primary","ListItemSecondaryAction","DialogActions","SubmitPostDialog","socket","setContent","comment","TextField","e","target","autoFocus","label","fullWidth","multiline","handleSubmit","DeletePostDialog","handleDelete","FollowingDialog","notFollowingAnyone","button","clickCallback","LoggedInPage","menuOpen","setMenuOpen","nppOpen","setNppOpen","setProfiles","followingProfiles","setFollowingProfiles","commentingPost","postDialogOpen","commentDialogOpen","deletingPost","deleteDialogOpen","followingDialogOpen","setFollowingDialogOpen","newChatDialogOpen","setNewChatDialogOpen","currentChat","setCurrentChat","chats","setChats","anchorRef","useRef","fetchProfiles","handleSubmitPost","handleSubmitComment","handleDeleteAPost","startChat","otherProfile","participants","sort","b","chat","room_name","fetchChats","AppBar","Toolbar","noWrap","ref","cloneElement","page","current","contains","outerDiv","flex","innerDiv","listDiv","localMessage","main","border","Messages","scrollRef","setMessage","messages","setMessages","otherPersonName","setOtherPersonName","ENDPOINT","io","find","split","room","emit","error","alert","disconnect","off","on","scrollIntoView","behaviour","messageList","isActive","chat_id","switchChatRoom","selected","isLocal","from_id","text","onKeyPress","key","preventDefault","sendMessage","autoComplete","App","firstTime","createTheme","ThemeProvider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"mUA4FeA,EAxFF,SAACC,GAEV,IAAMC,EAAqB,uCAAG,WAAOC,GAAP,yBAAAC,EAAA,6DACtBC,GAAe,EACfC,EAAU,KAFY,kBAKJC,MAAM,yDAA2DJ,EAASK,WAAWC,OALjF,cAKhBC,EALgB,gBAMHA,EAAIC,OAND,OAMhBC,EANgB,OAOtBN,EAAUM,EACVC,QAAQC,IAAI,mBARU,kDAUtBD,QAAQC,IAAR,MAEAT,GAAe,EAZO,YAgBtBA,EAhBsB,wBAiBtBQ,QAAQC,IAAI,2BAjBU,UAoBZC,EAAa,CACfC,WAAYb,EAASK,WAAWC,MAChCQ,UAAWd,EAASK,WAAWU,KAC/BC,QAAShB,EAASK,WAAWY,UAvBf,UAyBAb,MAAM,kDAAmD,CACvEc,OAAQ,OACRC,QAAU,CACV,eAAgB,mBAChB,OAAU,oBAEVC,KAAMC,KAAKC,UAAUV,KA/BP,eAyBZL,EAzBY,iBAiCFA,EAAIC,OAjCF,eAiClBL,EAjCkB,QAoCVoB,mBAAqB,CAACpB,EAAQqB,YApCpB,UAqCZpB,MAAM,mDAAqDD,EAAQqB,WAAY,CACjFN,OAAQ,MACRC,QAAU,CACV,eAAgB,mBAChB,OAAU,oBAEVC,KAAMC,KAAKC,UAAUnB,KA3CP,QA6ClBO,QAAQC,IAAI,oBACZb,EAAM2B,cAAa,GA9CD,0DAgDlBf,QAAQC,IAAR,MAhDkB,2BAqD1Bb,EAAM4B,WAAWvB,GACjBL,EAAM6B,WAAU,GAChBjB,QAAQC,IAAI,oBAvDc,kEAAH,sDAgE3B,OAASb,EAAM8B,OAAU,cAAC,IAAD,CAAUC,GAAG,UAClC,sBACAC,MAAO,CACHC,SAAU,WAAYC,KAAM,MAAOC,IAAK,MACxCC,UAAW,yBAHf,UAMI,gEACA,4BACI,cAAC,IAAD,CACIC,SAAS,2EACTC,WAAW,QACXC,UAAWtC,EACXuC,UAnBc,SAACtC,GAC3BU,QAAQC,IAAI,gBACZD,QAAQC,IAAIX,IAkBAuC,YAAY,EACZC,aAAc,6B,wJC9E5BC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,WAAY,CACRC,QAAS,OACTC,cAAe,MACfC,WAAY,UAEhBC,SAAU,CACNC,YAAa,OACbC,OAAO,eAiCAC,EA7BE,SAACrD,GACd,IAAMsD,EAAUX,IACZY,EAAUC,cAERC,EAAuB,SAACC,GACrB1D,EAAM2D,kBACPJ,EAAQK,KAAK,YAAcF,EAAKG,UAIxC,OAAS7D,EAAM8D,YAAYC,OAAS,EAChC,8BACK/D,EAAM8D,YAAYE,KAAI,SAACN,EAAMO,GAAP,OACnB,gCACI,cAACC,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,WACI,sBAAKC,UAAWd,EAAQR,WAAxB,UACI,cAACuB,EAAA,EAAD,CAAQrC,MAAO,CAACoB,OAAO,WAAYkB,IAAKZ,EAAKa,SAAUC,QAAS,WAAKf,EAAqBC,MAC1F,oBAAIU,UAAWd,EAAQJ,SAAUsB,QAAS,WAAKf,EAAqBC,IAApE,SAA6EA,EAAK1C,eAEtF,cAACkD,EAAA,EAAD,IACA,4BAAIR,EAAKe,eARPR,QAYT,MC1BXtB,EAAYC,YAAW,CACzBE,WAAY,CACRC,QAAS,OACTC,cAAe,MACfC,WAAY,UAEhBC,SAAU,CACNC,YAAa,OACbC,OAAO,WAEXsB,SAAU,CACNC,OAAQ,IAGZC,YAAa,GAGbC,aAAc,CAEV1C,IAAK,OAET2C,KAAM,CACFC,SAAU,KAwGHC,EApGE,SAAChF,GACd,IAAMsD,EAAUX,IACZY,EAAUC,cAEd,EAAwByB,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgDF,oBAAS,GAAzD,mBAAOG,EAAP,KAAyBC,EAAzB,KAEAC,qBAAU,WAENH,EAAQnF,EAAMkF,QACf,IAGH,IAAMK,EAAoB,WACjB5B,GACDJ,EAAQK,KAAK,YAAcsB,EAAKrB,UAKlC2B,EAAS,uCAAG,4BAAArF,EAAA,6DAEVH,EAAMkF,KAAKO,MAAMC,SAAS1F,EAAM2F,WAChC3F,EAAMkF,KAAKO,MAAQzF,EAAMkF,KAAKO,MAAMG,QAAO,SAAAlC,GAAI,OAAIA,IAAS1D,EAAM2F,aAIlE3F,EAAMkF,KAAKO,MAAM7B,KAAK5D,EAAM2F,WAPlB,SAWQrF,MAAM,gDAAkDN,EAAMkF,KAAKW,QAAS,CAC9FzE,OAAQ,MACRC,QAAU,CACN,eAAgB,mBAChB,OAAU,oBAEdC,KAAMC,KAAKC,UAAUxB,EAAMkF,QAjBjB,OAWRY,EAXQ,OAoBdX,EAAQW,GApBM,2CAAH,qDAwBTnC,GAAwC,IAArB3D,EAAM2F,UAE/B,OACI,8BACI,eAACI,EAAA,EAAD,CAAM3B,UAAWd,EAAQoB,SAAUsB,YAAa,WAAUZ,GAAoBpF,EAAM2F,YAAc3F,EAAMkF,KAAKrB,SACzGwB,GAAoB,IACpBY,aAAc,WAASb,GAAoBpF,EAAM2F,YAAc3F,EAAMkF,KAAKrB,SAC1EwB,GAAoB,IAHxB,UAKI,eAAClB,EAAA,EAAD,WACI,sBAAKC,UAAWd,EAAQR,WAAxB,UACI,cAACuB,EAAA,EAAD,CAAQrC,MAAO,CAACoB,OAAO,WAAYkB,IAAKtE,EAAMkF,KAAKX,SAAUC,QAASe,IACtE,oBAAInB,UAAWd,EAAQJ,SAAUsB,QAASe,EAA1C,SAA8DvF,EAAMkF,KAAKlE,YACzE,qBAAKoD,UAAWd,EAAQwB,OACrBM,EACC,cAACc,EAAA,EAAD,CAAY9B,UAAWd,EAAQuB,aAAcL,QAAS,WAAKxE,EAAMmG,kBAAjE,SACI,cAAC,IAAD,MAFe,QAO3B,cAACjC,EAAA,EAAD,CAASE,UAAWd,EAAQsB,cAC5B,4BAAI5E,EAAMkF,KAAKT,aAEnB,cAACP,EAAA,EAAD,CAASE,UAAWd,EAAQsB,cAC5B,cAACwB,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CACAC,WAAS,EACTC,UAAU,MACVC,eAAe,eACfvD,WAAW,SAJX,UAMI,eAACwD,EAAA,EAAD,CAAQC,KAAM,QAASC,MAAQ3G,EAAMkF,KAAKO,MAAMC,SAAS1F,EAAM2F,WAAc,UAAY,UAAWiB,SAAUjD,EAAkBkD,UAAW,cAAC,IAAD,IAAiBrC,QAAS,WAEjKgB,KAFJ,mBAGUxF,EAAMkF,KAAKO,MAAM1B,OAH3B,OAIA,cAACG,EAAA,EAAD,CAAS4C,YAAY,WAAWC,UAAQ,EAAC3C,UAAWd,EAAQsB,cAC5D,cAAC6B,EAAA,EAAD,CAAQC,KAAM,QAASE,SAAUjD,EAAkBkD,UAAW,cAAC,IAAD,IAAiBrC,QAAS,WAEpFxE,EAAMgH,mBAFV,qBAIA,cAAC9C,EAAA,EAAD,CAAS4C,YAAY,WAAWC,UAAQ,EAAC3C,UAAWd,EAAQsB,cAC5D,cAAC6B,EAAA,EAAD,CAAQC,KAAM,QAASG,UAAW,cAAC,IAAD,IAAerC,QAAS,WAEtDxE,EAAMiH,iBAAgB,GACtBC,UAAUC,UAAUC,UAAU,6DAA+DpH,EAAMkF,KAAKW,UAH5G,wBAQR,cAAC,EAAD,CAAU/B,YAAa9D,EAAMkF,KAAKmC,SAASvD,YAAaH,iBAAkBA,U,SCvF3E2D,EA7CF,SAACtH,GAEVuH,SAASC,MAAQ,OAGjB,MAA0BvC,mBAAS,IAAnC,mBAAOwC,EAAP,KAAcC,EAAd,KAGMC,EAAU,uCAAG,8BAAAxH,EAAA,sEACGG,MAAM,0DAA4DN,EAAMK,QAAQqB,YADnF,cACTjB,EADS,gBAEIA,EAAIC,OAFR,OAETC,EAFS,OAGfC,QAAQC,IAAI,SACZD,QAAQC,IAAIF,GAEZ+G,EAAS/G,GANM,2CAAH,qDAchB,OAJA2E,qBAAU,WACNqC,MACD,CAAC3H,EAAM4H,UAGN,gCACI,sCACA,cAACnB,EAAA,EAAD,CAAQoB,QAAQ,YAAYlB,MAAM,UAAUD,KAAM,SAAUlC,QAAS,WAAOxE,EAAM8H,mBAAkB,IAApG,SAA6G,uCAC7G,eAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UAGQP,EAAMzD,KAAI,SAACN,GAAD,OAAW,cAAC,EAAD,CAA6BwB,KAAMxB,EAAMiC,UAAW3F,EAAMK,QAAQqB,WAAYuF,gBAAiBjH,EAAMiH,gBAAiBd,eAAgB,WACvJnG,EAAMiI,gBAAgBvE,GACtB1D,EAAMkI,qBAAoB,IAC3BlB,gBAAiB,WAEhBhH,EAAMmI,kBAAkBzE,GAExB1D,EAAMoI,sBAAqB,KAPK1E,EAAKmC,YAUjD,8BChCGwC,EAXM,SAACrI,GAIlB,OAFAuH,SAASC,MAAQ,iBAGb,8BACI,wD,iCCmBGc,EAxBQ,SAAC,GAA6C,IAAjCC,EAAgC,EAA3CC,UAAsB1G,EAAqB,EAArBA,OAAW2G,EAAU,iBAChE,OACI,cAAC,IAAD,2BAAWA,GAAX,IAAiBC,OACb,SAAC1I,GACG,OAAI8B,EACO,cAACyG,EAAD,eAAevI,IAGf,cAAC,IAAD,CAAU+B,GACb,CACI4G,SAAU,IACVC,MAAO,CACHC,KAAM7I,EAAM8I,kB,SC8C7BC,EApDQ,WAEnB,IAAMC,EAAOC,cAAPD,GAEN,EAAwB/D,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwCF,oBAAS,GAAjD,mBAAOiE,EAAP,KAAqBjC,EAArB,KAEMkC,EAAS,uCAAG,8BAAAhJ,EAAA,6DACdgF,EAAQ,MADM,SAEI7E,MAAM,gDAAkD0I,GAF5D,cAERvI,EAFQ,gBAGKA,EAAIC,OAHT,OAGRC,EAHQ,OAId4G,SAASC,MAAQ,iBAEjB5G,QAAQC,IAAIF,GACZwE,EAAQxE,GAPM,4CAAH,qDASf2E,qBAAW,WACP6D,MACD,CAACH,IAEJ,IAAMI,EAAsB,SAACC,EAAOC,GACjB,cAAXA,GAIJrC,GAAgB,IAGpB,OACK/B,EACD,gCACI,cAACmB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAAStD,WAAW,SAASsG,QAAQ,SAASvH,MAAO,CAACwH,UAAW,SAA3F,SACI,cAACnD,EAAA,EAAD,CAAM3C,MAAI,EAAV,SACI,cAAC,EAAD,CAA6BwB,KAAMA,EAAMS,WAAY,EAAGsB,gBAAiBA,GAA1D/B,EAAKW,aAG5B,cAAC4D,EAAA,EAAD,CACIC,KAAMR,EACNS,iBAAkB,IAClBC,QAASR,EACTS,QAAQ,2BACRC,OACI,cAAC5D,EAAA,EAAD,CAAYQ,KAAK,QAAQ,aAAW,QAAQC,MAAM,UAAUnC,QAAS4E,EAArE,SACA,cAAC,IAAD,CAAWW,SAAS,iBAKhC,MC6COC,EA9FK,SAAChK,GAEjB,IAAMgJ,EAAOC,cAAPD,GAEN,EAAsC/D,mBAAS,MAA/C,mBAAOgF,EAAP,KAAoBC,EAApB,KACA,EAA0BjF,mBAAS,IAAnC,mBAAOwC,EAAP,KAAcC,EAAd,KAEMyC,EAAgB,uCAAG,8BAAAhK,EAAA,sEAEjB+J,EAAe,MAFE,SAGC5J,MAAM,mDAAqD0I,GAH5D,cAGXvI,EAHW,gBAIEA,EAAIC,OAJN,cAIXC,EAJW,OAKjB4G,SAASC,MAAQ7G,EAAKK,UAGtBkJ,EAAevJ,GARE,UASXyJ,IATW,0DAWjBF,GAAgB,GAXC,0DAAH,qDAehBE,EAAqB,uCAAG,8BAAAjK,EAAA,sEACRG,MAAM,qDAAuD0I,GADrD,cACpBvI,EADoB,gBAEPA,EAAIC,OAFG,OAEpBC,EAFoB,OAK1B+G,EAAS/G,GALiB,2CAAH,qDAQrB0J,EAAa,uCAAG,sBAAAlK,EAAA,6DACdH,EAAMK,QAAQoB,mBAAmBiE,SAAS4E,SAAStB,IACnDhJ,EAAMK,QAAQoB,mBAAqBzB,EAAMK,QAAQoB,mBAAmBmE,QAAO,SAAAlC,GAAI,OAAIA,IAAS4G,SAAStB,MAGrGhJ,EAAMK,QAAQoB,mBAAmBmC,KAAK0G,SAAStB,IAEnDhJ,EAAMuK,YAAW,GAPC,SAQZjK,MAAM,mDAAqDN,EAAMK,QAAQqB,WAAY,CACvFN,OAAQ,MACRC,QAAU,CACV,eAAgB,mBAChB,OAAU,oBAEVC,KAAMC,KAAKC,UAAUxB,EAAMK,WAdb,uBAgBZL,EAAMwK,uBAhBM,OAiBlBxK,EAAMuK,YAAW,GAjBC,2CAAH,qDA6BnB,OATAjF,qBAAW,WACF2E,GAAeA,EAAYvI,aAAe4I,SAAStB,GAIpDoB,IAHAD,MAKL,CAACnB,EAAIhJ,EAAM4H,UAETqC,GAGqB,IAAjBA,EACG,cAAC,IAAD,CAAUlI,GACd,CACI4G,SAAU,OACVC,MAAO,CACHC,KAAM7I,EAAM8I,aAQpB,gCACI,6BAAKmB,EAAYjJ,YACfsJ,SAAStB,KAAQhJ,EAAMK,QAAQqB,WAAc,cAAC+E,EAAA,EAAD,CAAQoB,QAAQ,WAAWrD,QAAS,WAAK6F,KAAzC,SAA8DrK,EAAMK,QAAQoB,mBAAmBiE,SAAS4E,SAAStB,IAAQ,YAAc,WAAqB,KAC3M,cAACjB,EAAA,EAAD,CAAWC,SAAS,KAApB,SACKP,EAAMzD,KAAI,SAACN,GAAD,OAAW,cAAC,EAAD,CAA6BwB,KAAMxB,EAAMiC,UAAW3F,EAAMK,QAAQqB,WAAYuF,gBAAiBjH,EAAMiH,gBAAiBd,eAAgB,WACxJnG,EAAMiI,gBAAgBvE,GACtB1D,EAAMkI,qBAAoB,IAC3BlB,gBAAiB,WAEhBhH,EAAMmI,kBAAkBzE,GAExB1D,EAAMoI,sBAAqB,KAPM1E,EAAKmC,iBAnB/C,M,+MC/CTlD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC4H,SAAU,CACNC,SAAU,MACVvH,YAAa,QAGjBwH,WAAY,OA6EDC,GAxEM,SAAC5K,GAClB,IAAMsD,EAAUX,KAEhB,OACI,cAACkI,GAAA,EAAD,CAAQnB,KAAM1J,EAAM0J,KAAMoB,SAAU9K,EAAM8K,SAAUC,UAAMC,EAAWC,YAAU,EAACC,eAAa,EAA7F,SACK,gBAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,UAApB,OACG,cAACC,GAAA,EAAD,2BACIF,GADJ,IAEAnJ,MAAO,CAAEsJ,gBAA+B,WAAdF,EAAyB,aAAe,iBAFlE,SAIA,cAACG,GAAA,EAAD,CAAOnH,UAAWd,EAAQqH,WAA1B,SACI,cAACa,GAAA,EAAD,CAAmBC,YAAazL,EAAM0L,YAAtC,SACA,eAACC,GAAA,EAAD,CAAUC,cAAe5L,EAAM0J,KAAMV,GAAG,iBAAxC,UACI,eAAC6C,GAAA,EAAD,CAAUrH,QAAS,WAAKxE,EAAM8L,aAA9B,UACI,cAACC,GAAA,EAAD,mBAGA,cAACC,GAAA,EAAD,CAAc5H,UAAWd,EAAQmH,SAAjC,SACI,cAAC,KAAD,SAGR,eAACoB,GAAA,EAAD,CAAUrH,QAAS,WAAKxE,EAAMiM,iBAA9B,UACI,cAACF,GAAA,EAAD,uBAGA,cAACC,GAAA,EAAD,CAAc5H,UAAWd,EAAQmH,SAAjC,SACI,cAAC,KAAD,SAGR,eAACoB,GAAA,EAAD,CAAUrH,QAAS,WAAKxE,EAAMkM,kBAA9B,UACI,cAACH,GAAA,EAAD,wBAGA,cAACC,GAAA,EAAD,CAAc5H,UAAWd,EAAQmH,SAAjC,SACI,cAAC,KAAD,SAGR,cAAC,eAAD,CACIpI,SAAS,2EACTqG,OAAQ,SAAAyD,GAAW,OACf,eAACN,GAAA,EAAD,CAAUrH,QAAS2H,EAAY3H,QAAUoC,SAAUuF,EAAYvF,SAA/D,UACI,cAACmF,GAAA,EAAD,qBAGA,cAACC,GAAA,EAAD,CAAc5H,UAAWd,EAAQmH,SAAjC,SACI,cAAC,KAAD,UAIZnI,WAAW,SACX8J,gBAAiBpM,EAAMqM,uB,6ECvE7C1J,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiC,KAAM,CACJC,SAAU,GAEZuH,WAAY,CACVC,YAAa1J,EAAM2J,QAAQ,IAE7BhF,MAAM,aACJzE,QAAS,QACRF,EAAM4J,YAAYC,GAAG,MAAQ,CAC5B3J,QAAS,UAGb4J,OAAO,aACL1K,SAAU,WACV2K,aAAc/J,EAAMgK,MAAMD,aAC1BE,gBAAiBC,aAAMlK,EAAMmK,QAAQC,OAAOC,MAAO,KACnD,UAAW,CACTJ,gBAAiBC,aAAMlK,EAAMmK,QAAQC,OAAOC,MAAO,MAErDX,YAAa1J,EAAM2J,QAAQ,GAC3BW,WAAY,EACZC,MAAO,QACNvK,EAAM4J,YAAYC,GAAG,MAAQ,CAC5BS,WAAYtK,EAAM2J,QAAQ,GAC1BY,MAAO,SAGXC,WAAY,CACVC,QAASzK,EAAM2J,QAAQ,EAAG,GAC1Be,OAAQ,OACRtL,SAAU,WACVuL,cAAe,OACfzK,QAAS,OACTE,WAAY,SACZuD,eAAgB,UAElBiH,UAAW,CACT9G,MAAO,WAET+G,WAAW,aACTJ,QAASzK,EAAM2J,QAAQ,EAAG,EAAG,EAAG,GAChCrJ,YAAY,cAAD,OAAgBN,EAAM2J,QAAQ,GAA9B,OACXvB,WAAYpI,EAAM8K,YAAYC,OAAO,SACrCR,MAAO,QACNvK,EAAM4J,YAAYC,GAAG,MAAQ,CAC5BU,MAAO,SAGXS,eAAe,aACb9K,QAAS,QACRF,EAAM4J,YAAYC,GAAG,MAAQ,CAC5B3J,QAAS,SAGb+K,cAAc,aACZ/K,QAAS,QACRF,EAAM4J,YAAYC,GAAG,MAAQ,CAC5B3J,QAAS,aAgDAgL,GA3CU,SAAC/N,GACtB,IAAMsD,EAAUX,KACZY,EAAUC,cAEd,EAAoCyB,mBAAS,IAA7C,mBAAO+I,EAAP,KAAmBC,EAAnB,KACA,EAAwBhJ,oBAAS,GAAjC,mBAAOyE,EAAP,KAAawE,EAAb,KAYA,OACI,sBAAK9J,UAAWd,EAAQqJ,OAAxB,UACE,qBAAKvI,UAAWd,EAAQ+J,WAAxB,SACE,cAAC,KAAD,MAEA,cAACc,GAAA,EAAD,CACInF,GAAG,mBACHoF,kBAAgB,EAChBC,QAASrO,EAAMsO,SACfC,eAAgB,SAACC,GAAU,OAAOA,EAAOxN,WACzC0I,KAAMA,EACN+E,OArBO,WACXT,EAAWjK,OAAS,GACpBmK,GAAQ,IAoBJtE,QAAS,kBAAMsE,GAAQ,IACvBF,WAAYA,EACZU,cAnBc,SAACrF,EAAOsF,GAC9BV,EAAcU,GACdT,EAAQS,EAAc5K,OAAS,IAkBvB6K,SAAU,SAACvF,EAAOwF,GAAStL,EAAQK,KAAK,YAAciL,EAAMnN,aAC5DoN,UAAW,KACX9M,MAAO,CAAC+M,cAAc,EAAOC,cAAc,GAC3CC,YAAa,SAACC,GACiCA,EAAtCC,gBAAsCD,EAAtBE,WAAvB,IAAqC3G,EAArC,YAA6CyG,EAA7C,IACA,OAAO,cAACG,GAAA,EAAD,2BAAeH,EAAOE,YAAtB,IAAkChL,UAAW,KAAMkL,YAAY,eAAUhM,QAAS,CAACiM,KAAMjM,EAAQmK,UAAW+B,MAAOlM,EAAQoK,YAAa+B,WAAY,CAAE,aAAc,WAAgBhH,W,gFCxC9LiH,GAtDS,SAAC1P,GAErB,MAA8BiF,oBAAS,GAAvC,mBAAgBsF,GAAhB,WAEMF,EAAa,uCAAG,WAAOrB,GAAP,SAAA7I,EAAA,6DACdH,EAAMK,QAAQoB,mBAAmBiE,SAAS4E,SAAStB,IACnDhJ,EAAMK,QAAQoB,mBAAqBzB,EAAMK,QAAQoB,mBAAmBmE,QAAO,SAAAlC,GAAI,OAAIA,IAAS4G,SAAStB,MAGrGhJ,EAAMK,QAAQoB,mBAAmBmC,KAAK0G,SAAStB,IAEnDuB,GAAW,GAPO,SAQZjK,MAAM,mDAAqDN,EAAMK,QAAQqB,WAAY,CACvFN,OAAQ,MACRC,QAAU,CACV,eAAgB,mBAChB,OAAU,oBAEVC,KAAMC,KAAKC,UAAUxB,EAAMK,WAdb,uBAgBZL,EAAMwK,uBAhBM,OAiBlBD,GAAW,GAjBO,2CAAH,sDAoBnB,OACI,eAACoF,GAAA,EAAD,CAAQjG,KAAM1J,EAAM0J,KAAME,QAAS5J,EAAM0L,YAAa,kBAAgB,oBAAtE,UACI,cAACkE,GAAA,EAAD,CAAa5G,GAAG,oBAAhB,0CACA,eAAC6G,GAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAYC,MAAM,SAAlB,4CACI,cAACxE,GAAA,EAAD,CAAOvJ,MAAO,CAACgO,UAAW,IAAKC,SAAU,QAAzC,SACI,cAACC,GAAA,EAAD,UACKlQ,EAAMsO,SAAStK,KAAI,SAACN,EAAMO,GAAS,OAAQP,EAAKhC,aAAe1B,EAAMK,QAAQqB,WAAc,KACxF,eAACyO,GAAA,EAAD,CAAsBnO,MAAO,CAAC0I,SAAU,SAAxC,UACI,cAAC0F,GAAA,EAAD,UACI,cAAC/L,EAAA,EAAD,CAAQC,IAAKZ,EAAKxC,YAEtB,cAAC6K,GAAA,EAAD,CAAcsE,QAAS3M,EAAK1C,YAC5B,cAACsP,GAAA,EAAD,UACI,cAAC7J,EAAA,EAAD,CAAQoB,QAAQ,WAAWrD,QAAS,WAAK6F,EAAc3G,EAAKhC,aAA5D,SAA6E1B,EAAMK,QAAQoB,mBAAmBiE,SAAShC,EAAKhC,YAAe,YAAc,eANlJuC,aAa/B,cAACsM,GAAA,EAAD,UACI,cAAC9J,EAAA,EAAD,CAAQjC,QAAS,WAAKxE,EAAM0L,eAAiB/E,MAAM,UAAnD,0B,UCXD6J,ICtCXC,GDsCWD,GA3Cf,SAA0BxQ,GAEtB,MAA8BiF,mBAAS,IAAvC,mBAAOR,EAAP,KAAgBiM,EAAhB,KAEA,OACI,8BACI,eAACf,GAAA,EAAD,CAAQjG,KAAM1J,EAAM0J,KAAME,QAAS5J,EAAM0L,YAAa,kBAAgB,oBAAtE,UACI,cAACkE,GAAA,EAAD,CAAa5G,GAAG,oBAAhB,SAAsChJ,EAAM2Q,QAAW,UAAY,SACnE,cAACd,GAAA,EAAD,UACI,cAACe,GAAA,EAAD,CACI/B,MAAOpK,EAASmK,SAAU,SAACiC,GAAOH,EAAWG,EAAEC,OAAOjC,QACtDkC,WAAS,EACTpM,OAAO,QACPqE,GAAG,UACHgI,MAAM,UACNC,WAAS,EACTC,WAAS,MAGjB,eAACX,GAAA,EAAD,WACA,cAAC9J,EAAA,EAAD,CAAQjC,QAAO,sBAAE,sBAAArE,EAAA,sEACPH,EAAMmR,aAAa,CACrBtN,QAAS7D,EAAMK,QAAQqB,WACvBV,UAAWhB,EAAMK,QAAQW,UACzBuD,SAAUvE,EAAMK,QAAQa,QACxBuD,QAASA,IALA,OAObiM,EAAW,IAPE,2CAQd/J,MAAM,UART,oBAWA,cAACF,EAAA,EAAD,CAAQjC,QAAS,WACbxE,EAAM0L,cACNgF,EAAW,KACZ/J,MAAM,UAHT,6BEPDyK,GAzBU,SAACpR,GAEtB,OACI,eAAC2P,GAAA,EAAD,CAAQjG,KAAM1J,EAAM0J,KAAME,QAAS5J,EAAM0L,YAAa,kBAAgB,oBAAtE,UACI,cAACkE,GAAA,EAAD,CAAa5G,GAAG,oBAAhB,wDACA,eAAC6G,GAAA,EAAD,eACO7P,EAAMkF,KAAQlF,EAAMkF,KAAKT,QAAU,KAD1C,OAGA,eAAC8L,GAAA,EAAD,WACI,cAAC9J,EAAA,EAAD,CAAQjC,QAAO,sBAAE,sBAAArE,EAAA,6DACbH,EAAM0L,cADO,SAEP1L,EAAMqR,eAFC,2CAGd1K,MAAM,UAHT,iBAMA,cAACF,EAAA,EAAD,CAAQjC,QAAS,WACbxE,EAAM0L,eACP/E,MAAM,UAFT,uBC4BD2K,GAnCS,SAACtR,GACPwD,cAAd,IAEM+N,EAA+C,IAA1BvR,EAAMsO,SAASvK,OAE1C,OACI,eAAC4L,GAAA,EAAD,CAAQjG,KAAM1J,EAAM0J,KAAME,QAAS5J,EAAM0L,YAAa,kBAAgB,oBAAtE,UACI,cAACkE,GAAA,EAAD,CAAa5G,GAAG,oBAAhB,SAAsCuI,EAAsB,+BAAiCvR,EAAMwH,QACnG,cAACqI,GAAA,EAAD,UACM0B,EAAsB,gCACpB,cAACzB,EAAA,EAAD,CAAYC,MAAM,SAAlB,uDACA,cAACD,EAAA,EAAD,CAAYC,MAAM,cAErB,cAACxE,GAAA,EAAD,CAAOvJ,MAAO,CAACgO,UAAW,IAAKC,SAAU,QAAzC,SACG,cAACC,GAAA,EAAD,UACKlQ,EAAMsO,SAAStK,KAAI,SAACN,EAAMO,GAAS,OAAQP,EAAKhC,aAAe1B,EAAMK,QAAQqB,WAAc,KACxF,eAACyO,GAAA,EAAD,CAAsBqB,QAAM,EAAChN,QAAS,WAAKxE,EAAM0L,cAAe1L,EAAMyR,cAAc/N,IAApF,UACI,cAAC0M,GAAA,EAAD,UACI,cAAC/L,EAAA,EAAD,CAAQC,IAAKZ,EAAKxC,YAEtB,cAAC6K,GAAA,EAAD,CAAcsE,QAAS3M,EAAK1C,cAJjBiD,YAU/B,cAACsM,GAAA,EAAD,UACI,cAAC9J,EAAA,EAAD,CAAQjC,QAAS,WAAKxE,EAAM0L,eAAiB/E,MAAM,UAAnD,yBCtBVhE,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCiC,KAAM,CACFC,SAAU,GAEdwK,KAAM,CACFxK,SAAU,GAEduH,WAAY,CACRC,YAAa1J,EAAM2J,QAAQ,IAE/BhF,MAAM,aACFzE,QAAS,QACRF,EAAM4J,YAAYC,GAAG,MAAQ,CAC1B3J,QAAS,UAGjB4J,OAAO,aACH1K,SAAU,WACV2K,aAAc/J,EAAMgK,MAAMD,aAC1BE,gBAAiBC,aAAMlK,EAAMmK,QAAQC,OAAOC,MAAO,KACnD,UAAW,CACTJ,gBAAiBC,aAAMlK,EAAMmK,QAAQC,OAAOC,MAAO,MAErDX,YAAa1J,EAAM2J,QAAQ,GAC3BW,WAAY,EACZC,MAAO,QACNvK,EAAM4J,YAAYC,GAAG,MAAQ,CAC5BS,WAAYtK,EAAM2J,QAAQ,GAC1BY,MAAO,SAGXC,WAAY,CACVC,QAASzK,EAAM2J,QAAQ,EAAG,GAC1Be,OAAQ,OACRtL,SAAU,WACVuL,cAAe,OACfzK,QAAS,OACTE,WAAY,SACZuD,eAAgB,UAElBiH,UAAW,CACT9G,MAAO,WAET+G,WAAW,aACTJ,QAASzK,EAAM2J,QAAQ,EAAG,EAAG,EAAG,GAEhCrJ,YAAY,cAAD,OAAgBN,EAAM2J,QAAQ,GAA9B,OACXvB,WAAYpI,EAAM8K,YAAYC,OAAO,SACrCR,MAAO,QACNvK,EAAM4J,YAAYC,GAAG,MAAQ,CAC5BU,MAAO,aAgPFsE,GA3OM,SAAC1R,GAClB,IAAMsD,EAAUX,KACZY,EAAUC,cAGd,EAAgCyB,oBAAS,GAAzC,mBAAO0M,EAAP,KAAiBC,EAAjB,KACA,EAA8B3M,oBAAS,GAAvC,mBAAO4M,EAAP,KAAgBC,EAAhB,KACA,EAA8B7M,oBAAS,GAAvC,mBAAO2C,EAAP,KAAgB2C,EAAhB,KACA,EAAgCtF,mBAAS,IAAzC,mBAAOqJ,EAAP,KAAiByD,EAAjB,KACA,EAAkD9M,mBAAS,IAA3D,mBAAO+M,EAAP,KAA0BC,EAA1B,KACA,EAA4ChN,mBAAS,MAArD,mBAAOiN,EAAP,KAAuB/J,EAAvB,KACA,EAA4ClD,oBAAS,GAArD,mBAAOkN,EAAP,KAAuBrK,EAAvB,KACA,EAAkD7C,oBAAS,GAA3D,mBAAOmN,EAAP,KAA0BhK,EAA1B,KACA,EAAwCnD,oBAAS,GAAjD,mBAAOiE,EAAP,KAAqBjC,EAArB,KACA,EAAwChC,mBAAS,MAAjD,mBAAOoN,GAAP,KAAqBpK,GAArB,KACA,GAAgDhD,oBAAS,GAAzD,qBAAOqN,GAAP,MAAyBpK,GAAzB,MACA,GAAsDjD,oBAAS,GAA/D,qBAAOsN,GAAP,MAA4BC,GAA5B,MACA,GAAkDvN,oBAAS,GAA3D,qBAAOwN,GAAP,MAA0BC,GAA1B,MACA,GAAsCzN,mBAAS,MAA/C,qBAAO0N,GAAP,MAAoBC,GAApB,MACA,GAA0B3N,mBAAS,IAAnC,qBAAO4N,GAAP,MAAcC,GAAd,MAEMC,GAAYC,iBAAO,MAYnBC,GAAa,uCAAG,8BAAA9S,EAAA,sEACAG,MAAM,mDADN,cACZG,EADY,gBAECA,EAAIC,OAFL,OAEZC,EAFY,OAIlBoR,EAAYpR,GAJM,2CAAH,qDAQb6J,GAAsB,uCAAG,8BAAArK,EAAA,sEACTG,MAAM,6DAA+DN,EAAMK,QAAQqB,YAD1E,cACrBjB,EADqB,gBAERA,EAAIC,OAFI,OAErBC,EAFqB,OAI3BsR,EAAqBtR,GAJM,2CAAH,qDAetBuS,GAAgB,uCAAG,WAAOhO,GAAP,SAAA/E,EAAA,6DAErB2H,GAAkB,GAFG,SAIfxH,MAAM,+CAAgD,CACxDc,OAAQ,OACRC,QAAU,CACN,eAAgB,mBAChB,OAAU,oBAEdC,KAAMC,KAAKC,UAAU0D,KAVJ,OAcrBqF,GAAY3C,GAdS,2CAAH,sDAkBhBuL,GAAmB,uCAAG,WAAOxC,GAAP,SAAAxQ,EAAA,6DAExBiI,GAAqB,GAErB8J,EAAe7K,SAASvD,YAAYF,KAAK+M,GAJjB,SAMlBrQ,MAAM,gDAAkD4R,EAAerM,QAAS,CAClFzE,OAAQ,MACRC,QAAU,CACN,eAAgB,mBAChB,OAAU,oBAEdC,KAAMC,KAAKC,UAAU0Q,KAZD,2CAAH,sDAgBnBkB,GAAiB,uCAAG,sBAAAjT,EAAA,sEAEhBG,MAAM,gDAAkD+R,GAAaxM,QAAS,CAChFzE,OAAQ,SACRC,QAAU,CACN,eAAgB,mBAChB,OAAU,sBANI,OAStBkJ,GAAY3C,GATU,2CAAH,qDAcjBwB,GAAsB,SAACC,EAAOC,GAEjB,cAAXA,GACArC,GAAgB,IASlBoM,GAAS,uCAAG,WAAOC,GAAP,uBAAAnT,EAAA,6DAERoT,EAAe,CAACD,EAActT,EAAMK,SAASmT,MAAK,SAACrT,EAAGsT,GAAJ,OAAStT,EAAEuB,WAAW+R,EAAE/R,cAE1EgS,EAAO,CACTC,UAAU,GAAD,OAAKJ,EAAa,GAAG7R,WAArB,YAAmC6R,EAAa,GAAG7R,YAC5D6R,aAAcA,GANJ,SASIjT,MAAM,qDAAuDoT,EAAKC,UAAW,CAC3FvS,OAAQ,MACRC,QAAU,CACN,eAAgB,mBAChB,OAAU,sBAbJ,cASRZ,EATQ,yBAmBGA,EAAIC,OAnBP,OAmBVC,EAnBU,OAoBVC,QAAQC,IAAI,4CApBF,mEAsBQP,MAAM,+CAAgD,CACpEc,OAAQ,OACRC,QAAU,CACN,eAAgB,mBAChB,OAAU,oBAEdC,KAAMC,KAAKC,UAAUkS,KA5Bf,eAsBJjT,EAtBI,iBA8BGA,EAAIC,OA9BP,eA8BVC,EA9BU,iBA+BJiT,KA/BI,QAiCdhB,GAAejS,GACfC,QAAQC,IAAI,QAlCE,0DAAH,sDAqCT+S,GAAU,uCAAG,8BAAAzT,EAAA,sEACGG,MAAM,wDAA0DN,EAAMK,QAAQqB,YADjF,cACTjB,EADS,gBAEIA,EAAIC,OAFR,cAETC,EAFS,OAIfmS,GAASnS,GAEW,IAAhBA,EAAKoD,OACL6O,GAAejS,EAAK,IAGpBC,QAAQC,IAAI,YAVD,kBAaRF,GAbQ,2CAAH,qDAuChB,OANA2E,qBAAU,WACN2N,KACAzI,KACAsH,GAAW,KACZ,IAGC,sBAAK9P,MAAO,CAACuL,OAAQ,QAASxK,QAAS,OAAQC,cAAe,UAA9D,UACI,8BACI,cAAC6Q,EAAA,EAAD,CAAQ5R,SAAS,SAAjB,SACI,eAAC6R,EAAA,EAAD,WACA,cAAChE,EAAA,EAAD,CAAY1L,UAAWd,EAAQkE,MAAOK,QAAQ,KAAKkM,QAAM,EAAC/R,MAAO,CAACoB,OAAO,WAAYoB,QAAS,WAAKjB,EAAQK,KAAK,UAAhH,4BAGA,cAAC,GAAD,CAAkB0K,SAAUA,IAC5B,qBAAKlK,UAAWd,EAAQwB,OACxB,cAACgL,EAAA,EAAD,CAAY9N,MAAO,CAACoB,OAAO,WAAYoB,QAAS,WAAKjB,EAAQK,KAAK,YAAc5D,EAAMK,QAAQqB,aAA9F,SACK1B,EAAMK,QAAQW,YAEnB,cAACkF,EAAA,EAAD,CAAY9B,UAAWd,EAAQgJ,WAAY3F,MAAM,UAAU,aAAW,OAAOnC,QAAS,WAAOoN,GAAaD,IAAYqC,IAAKjB,GACvH,qBAA0C/H,EAAW,gBAAc,OADvE,SAEI,cAAC3G,EAAA,EAAD,CAAQC,IAAKtE,EAAMK,QAAQa,mBAKtC+S,uBAAajU,EAAMkU,KAAM,CAACjM,gBAAiBA,GAAiBC,oBAAqBA,GAAqBC,kBAAmBA,EAAmBC,qBAAsBA,EAAsBN,kBAAmBA,EAAmBb,gBAAiBA,EAAiByL,qBAAsBA,GAAsBC,YAAaA,GAAaC,eAAgBA,GAAgBC,MAAOA,GAAOe,WAAYA,GAAYhM,QAASA,EAAS2C,WAAYA,EAAYC,uBAAwBA,KAC/c,cAAC,GAAD,CAAcd,KAAMiI,EAAU7G,SAAUiI,GAAUoB,QAASzI,YApK3C,SAACrC,GACf0J,GAAUoB,SAAWpB,GAAUoB,QAAQC,SAAS/K,EAAMyH,SACxDc,GAAY,IAkKyK1F,eAtGlK,WACvB0F,GAAY,GACZY,IAAuB,IAoGsM1G,UAAW,WAAKvI,EAAQK,KAAK,WAAaqI,cAAe,WAAK1I,EAAQK,KAAK,eAAiByI,OA7L9S,WACXzL,QAAQC,IAAI,qBAEZb,EAAM4B,WAAW,IAEjB5B,EAAM6B,WAAU,MAyLZ,cAAC,GAAD,CAAiB6H,KAAMmI,EAASnG,YAAa,WAAKoG,GAAW,IAAUxD,SAAUA,EAAUjO,QAASL,EAAMK,QAASmK,uBAAwBA,KAC3I,cAAC,GAAD,CAAkBmG,SAAS,EAAOjH,KAAMyI,EAAgBzG,YAAa,WAAO5D,GAAkB,IAAUqJ,aAAc+B,GAAkB7S,QAASL,EAAMK,UACvJ,cAAC,GAAD,CAAkBsQ,SAAS,EAAMjH,KAAM0I,EAAmB1G,YAAa,WAAOtD,GAAqB,IAAU+I,aAAcgC,GAAqB9S,QAASL,EAAMK,QAAS6E,KAAMgN,IAC9K,cAAC,GAAD,CAAkBhN,KAAMmN,GAAc3I,KAAM4I,GAAkB5G,YAAa,WAAKxD,IAAoB,IAAUmJ,aAAc+B,KAC5H,cAAC,GAAD,CAAiB5L,MAAM,mCAAmCnH,QAASL,EAAMK,QAASqJ,KAAM6I,GAAqB7G,YAAa,WAAK8G,IAAuB,IAAUlE,SAAU0D,EAAmBP,cAAe,SAAC/N,GAAQH,EAAQK,KAAK,YAAcF,EAAKhC,eACrP,cAAC,GAAD,CAAiB8F,MAAM,6BAA6BnH,QAASL,EAAMK,QAASqJ,KAAM+I,GAAmB/G,YAAa,WAAKgH,IAAqB,IAAUpE,SAAU0D,EAAmBP,cAAe,SAAC/N,GAAQ2P,GAAU3P,MACrN,cAAC+F,EAAA,EAAD,CACIC,KAAMR,EACNS,iBAAkB,IAClBC,QAASR,GACTS,QAAQ,2BACRC,OACI,cAAC5D,EAAA,EAAD,CAAYQ,KAAK,QAAQ,aAAW,QAAQC,MAAM,UAAUnC,QAAS4E,GAArE,SACI,cAAC,IAAD,CAAWW,SAAS,kB,oDH/RtCpH,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCwR,SAAU,CACNC,KAAM,EACNvR,QAAS,OACTkN,SAAU,OACVjN,cAAe,OAEnBuR,SAAU,CACNxR,QAAS,OAAQkN,SAAU,OAAQjN,cAAe,UAEtDwR,QAAS,CACLzR,QAAS,OACTyG,UAAW,cACXxG,cAAe,UAEnByR,aAAc,CACV3H,gBAAiBjK,EAAMmK,QAAQqD,QAAQqE,KACvC/N,MAAO,OACPgO,OAAO,aAAD,OAAe9R,EAAMmK,QAAQqD,QAAQqE,MAC3C9H,aAAc,MACdU,QAAS,OAEbzD,QAAS,CACL8K,OAAQ,oBACR/H,aAAc,MACdU,QAAS,WA2JFsH,GAvJE,SAAC5U,GACd,IAAM6U,EAAY7B,iBAAO,MACnB1P,EAAWX,KAEjB,EAA8BsC,mBAAS,IAAvC,mBAAO4E,EAAP,KAAgBiL,EAAhB,KACA,EAAgC7P,mBAAS,IAAzC,mBAAO8P,EAAP,KAAiBC,EAAjB,KACA,EAA+C/P,mBAAS,IAAxD,mBAAOgQ,EAAP,KAAwBC,EAAxB,KAEMC,EAAW,yCAIjB7P,qBAAU,WACN,GAA2B,IAAvBtF,EAAM6S,MAAM9O,OAGX,CACD0M,GAAS2E,KAAGD,GAIZD,EAAmBlV,EAAM2S,YAAYY,aAAa8B,MAAK,SAAC3R,GAAD,OAASA,EAAKhC,aAAe1B,EAAMK,QAAQqB,cAAaV,UAAUsU,MAAM,KAAK,IAEpI,IAAMrU,EAAOjB,EAAMK,QAAQW,UACrBuU,EAAOvV,EAAM2S,YAAYgB,UACzBjS,EAAa1B,EAAMK,QAAQqB,WAQjC,OAPA+O,GAAO+E,KAAK,OAAQ,CAACvU,OAAMS,aAAY6T,SAAO,SAACE,GACvCA,GAAOC,MAAMD,GACjB7U,QAAQC,IAAR,iBAAsB0U,OAKnB,WAIH9E,GAAOkF,aACPlF,GAAOmF,OAxBX5V,EAAM4T,eA6BX,CAACuB,EAAUnV,EAAM2S,cAEpBrN,qBAAU,WACFmL,IACAA,GAAOmF,IAAI,WAAWC,GAAG,WAAW,SAAChM,GACjCmL,EAAY,GAAD,oBAAKD,GAAL,CAAelL,KACtBgL,EAAUV,SACVU,EAAUV,QAAQ2B,eAAe,CAAEC,UAAW,gBAI3D,CAAChB,EAAU/U,EAAM2S,cAEpBrN,qBAAU,WACN0P,EAAY,IACRhV,EAAM2S,aACNqC,EAAYhV,EAAM2S,YAAYoC,SAASiB,eAE5C,CAAChW,EAAM2S,YAAa3S,EAAM6S,QA0B7B,OACI,eAAC,WAAD,WACI,0CACA,sBAAKzO,UAAWd,EAAQ+Q,SAAxB,UACI,cAAC9I,GAAA,EAAD,CAAOvJ,MAAO,CAACsS,KAAM,GAAIlQ,UAAWd,EAAQiR,SAA5C,SACI,eAACrE,GAAA,EAAD,CAAM9L,UAAWd,EAAQkR,QAAzB,UACI,eAACrE,GAAA,EAAD,CAAUqB,QAAM,EAAChN,QAAS,WAAKxE,EAAM0S,sBAAqB,IAA1D,UACI,cAAC3G,GAAA,EAAD,+BAGA,cAACC,GAAA,EAAD,UACI,cAAC,KAAD,CAASjC,SAAS,eAGzB/J,EAAM6S,MAAM7O,KAAI,SAACN,EAAMO,GACpB,IAAMqP,EAAe5P,EAAK6P,aAAa8B,MAAK,SAAC3R,GAAD,OAASA,EAAKhC,aAAe1B,EAAMK,QAAQqB,cACjFuU,EAAWjW,EAAM2S,aAAejP,EAAKwS,UAAYlW,EAAM2S,YAAYuD,QACzE,OAAQ,gCACJ,cAAChS,EAAA,EAAD,IACA,eAACiM,GAAA,EAAD,CAAUqB,QAAM,EAAChN,QAAS,YA1B/B,SAACd,GAChB1D,EAAM2S,YAAYgB,YAAcjQ,EAAKiQ,YACrC3T,EAAM2S,YAAYoC,SAASiB,YAAcjB,EACzC/U,EAAM4S,eAAelP,IAuB8ByS,CAAezS,IAAQ0S,SAAUH,EAAhE,UACI,eAAClK,GAAA,EAAD,wBACeuH,EAAatS,aAE5B,cAACgL,GAAA,EAAD,UACI,cAAC3H,EAAA,EAAD,CAAQC,IAAKgP,EAAapS,iBAPpB+C,WAc9B,eAACsH,GAAA,EAAD,CAAOvJ,MAAO,CAACsS,KAAM,GAAIlQ,UAAWd,EAAQiR,SAA5C,UACI,qBAAKvS,MAAO,CAACsS,KAAM,GAAIlQ,UAAWd,EAAQiR,SAA1C,SACA,cAACrE,GAAA,EAAD,CAAM9L,UAAWd,EAAQkR,QAAzB,SACKO,EAAS/Q,KAAI,SAACN,EAAMO,GACjB,IAAMoS,EAAU3S,EAAK4S,UAAYtW,EAAMK,QAAQqB,WAC/C,OACI,cAACyO,GAAA,EAAD,CACA6D,IAAM/P,EAAQ,IAAM8Q,EAAShR,OAAU8Q,EAAY,KACnD7S,MAAO,CAACe,QAAQ,OAAQyD,eAAe,QAAD,OAAU6P,EAAW,MAAQ,UAFnE,SAKI,sBAAKrU,MAAO,CAACe,QAAS,OAAQC,cAAe,SAAUC,WAAW,QAAD,OAAWoT,EAAW,MAAQ,UAA/F,UACI,qBAAKjS,UAAYiS,EAAW/S,EAAQmR,aAAenR,EAAQuG,QAA3D,SAAqEnG,EAAK6S,OAC1E,qBAAKvU,MAAO,CAAC+H,SAAU,UAAvB,SAAoCsM,EAAW,MAAQpB,QAJ1DhR,UAWjB,cAAC2M,GAAA,EAAD,CAAW5H,GAAG,iBAAiBnB,QAAQ,WACvC2O,WAAY,SAAAnN,GAAK,MAAkB,UAAdA,EAAMoN,IApEvB,SAACpN,GAEjBA,EAAMqN,iBAEF7M,GACA4G,GAAO+E,KAAK,cAAe3L,GAAS,kBAAMiL,EAAW,OA+DA6B,CAAYtN,GAAS,MAClEwF,MAAOhF,EACP+M,aAAa,MACbhI,SAAU,SAACvF,GAAD,OAAWyL,EAAWzL,EAAMyH,OAAOjC,QAC7C7M,MAAO,CAACoL,MAAO,oBIvIpByJ,OAhCf,WAEE,MAA8B5R,mBAAS,IAAvC,mBAAO5E,EAAP,KAAgBuB,EAAhB,KACA,EAA4BqD,oBAAS,GAArC,mBAAOnD,EAAP,KAAeD,EAAf,KACA,EAAkCoD,oBAAS,GAA3C,mBAAO6R,EAAP,KAAkBnV,EAAlB,KAEMkB,EAAQkU,YAAY,CACxB/J,QAAS,GAGTF,gBAAiB,YAGnB,OACE,cAACkK,EAAA,EAAD,CAAenU,MAAOA,EAAtB,SACE,cAAC,IAAD,UACE,qBAAKuB,UAAkC,MAAvC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6S,OAAK,EAACC,KAAK,IAAI1O,UAAW,kBAAI,cAAC,EAAD,CAAM5G,WAAYA,EAAYC,UAAWA,EAAWC,OAAQA,EAAQH,aAAcA,OACvH,cAAC,EAAD,CAAgBuV,KAAK,QAAQpV,OAAQA,EAAQ0G,UAAW,SAACxI,GAAD,OAAS,cAAC,GAAD,2BAAkBA,GAAlB,IAAyBK,QAASA,EAASuB,WAAYA,EAAYE,OAAQA,EAAQD,UAAWA,EAAWiV,UAAWA,EAA4D5C,KAAM,cAAC,EAAD,CAAM7T,QAASA,UACtQ,cAAC,EAAD,CAAgB6W,KAAK,YAAYpV,OAAQA,EAAQ0G,UAAW,SAACxI,GAAD,OAAS,cAAC,GAAD,2BAAkBA,GAAlB,IAAyBK,QAASA,EAASuB,WAAYA,EAAYE,OAAQA,EAAQD,UAAWA,EAAWiV,UAAWA,EAAW5C,KAAM,cAAC,GAAD,CAAU7T,QAASA,UAC7N,cAAC,IAAD,CAAO4W,OAAK,EAACC,KAAK,OAAO1O,UAAWH,IACpC,cAAC,IAAD,CAAO6O,KAAK,YAAY1O,UAAWO,IACnC,cAAC,EAAD,CAAgBmO,KAAK,eAAe7W,QAASA,EAASyB,OAAQA,EAAQ0G,UAAW,SAACxI,GAAD,OAAS,cAAC,GAAD,2BAAkBA,GAAlB,IAAyBK,QAASA,EAASuB,WAAYA,EAAYE,OAAQA,EAAQD,UAAWA,EAA6DqS,KAAM,cAAC,EAAD,CAAa7T,QAASA,UACjR,cAAC,IAAD,CAAU0B,GAAG,mBCjCVoV,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASlP,OACP,cAAC,IAAMmP,WAAP,CAAkB7V,MAAO,CAACuL,OAAQ,QAAlC,SACE,cAAC,GAAD,CAAKvL,MAAO,CAACuL,OAAQ,YAEvBhG,SAASuQ,eAAe,SAM1BX,O","file":"static/js/main.497ad96e.chunk.js","sourcesContent":["import React from 'react'\r\nimport GoogleLogin from 'react-google-login';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Home = (props) => {\r\n\r\n    const responseGoogleSuccess = async (response) => {\r\n        let profileIsNew = false;\r\n        let profile = null;\r\n        // Try to get the profile from the database\r\n        try {\r\n            const res = await fetch('https://fast-coast-04774.herokuapp.com/profiles/email/' + response.profileObj.email);\r\n            const data = await res.json();\r\n            profile = data;\r\n            console.log(\"Profile Exists!\");\r\n        } catch (error) {\r\n            console.log(error);\r\n            // If it fails it's a new profile\r\n            profileIsNew = true;\r\n        }\r\n\r\n        // If it's a new profile \r\n        if (profileIsNew) {\r\n            console.log(\"Creating new Profile...\");\r\n            try {\r\n                // Create the profile on the database using the Google-Login info\r\n                const newProfile = {\r\n                    user_email: response.profileObj.email,\r\n                    user_name: response.profileObj.name,\r\n                    img_url: response.profileObj.imageUrl,\r\n                };\r\n                const res = await fetch(\"https://fast-coast-04774.herokuapp.com/profiles\", {\r\n                    method: \"POST\",\r\n                    headers : { \r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(newProfile)\r\n                });\r\n                profile = await res.json();\r\n                \r\n                // Then update the profile on the database so that the profile \"follows itself\"\r\n                profile.profiles_following = [profile.profile_id];\r\n                await fetch(\"https://fast-coast-04774.herokuapp.com/profiles/\" + profile.profile_id, {\r\n                    method: \"PUT\",\r\n                    headers : { \r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(profile)\r\n                });\r\n                console.log(\"Profile Created!\");\r\n                props.setFirstTime(true);\r\n            } catch (error) {\r\n                console.log(error);\r\n                return;\r\n            }\r\n        }\r\n        // Store the profile and the authorisation in the state\r\n        props.setProfile(profile);\r\n        props.setIsAuth(true);\r\n        console.log(\"Login Successful\");\r\n    }\r\n    // If the Google-Login fails log the response\r\n    const responseGoogleFailure = (response) => {\r\n        console.log(\"Login Failed\");\r\n        console.log(response);\r\n    }\r\n\r\n    // If the user is authorised successfully redirect to their feed otherwise show the login page\r\n    return ((props.isAuth) ? <Redirect to=\"/feed\"/> : \r\n        <div\r\n        style={{\r\n            position: 'absolute', left: '50%', top: '50%',\r\n            transform: 'translate(-50%, -50%)'\r\n        }}\r\n        >\r\n            <h1>Welcome to the Social Network!</h1>\r\n            <p>\r\n                <GoogleLogin\r\n                    clientId=\"399415598384-sgkom02f57l549gtnn877013fg004ke5.apps.googleusercontent.com\"\r\n                    buttonText=\"Login\"\r\n                    onSuccess={responseGoogleSuccess}\r\n                    onFailure={responseGoogleFailure}\r\n                    isSignedIn={true}\r\n                    cookiePolicy={'single_host_origin'}\r\n                />\r\n            </p>\r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardHeader: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: \"center\"\r\n    },\r\n    nameText: {\r\n        paddingLeft: \"10px\",\r\n        cursor:'pointer'\r\n    }\r\n}));\r\n\r\nconst Comments = (props) => {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    const goToCommenterProfile = (item) => {\r\n        if (!props.isSinglePostPage) {\r\n            history.push('/profile/' + item.user_id);\r\n        }\r\n    }\r\n\r\n    return ((props.commentList.length > 0) ?\r\n        <div>\r\n            {props.commentList.map((item, index) => (\r\n                <div key={index}>\r\n                    <Divider/>\r\n                    <CardContent>\r\n                        <div className={classes.cardHeader}>\r\n                            <Avatar style={{cursor:'pointer'}} src={item.user_img} onClick={()=>{goToCommenterProfile(item)}}/>\r\n                            <h4 className={classes.nameText} onClick={()=>{goToCommenterProfile(item)}}>{item.user_name}</h4>\r\n                        </div>\r\n                        <Divider/>\r\n                        <p>{item.content}</p>\r\n                    </CardContent>\r\n                </div>\r\n            ))}\r\n        </div> : null\r\n    )\r\n}\r\n\r\nexport default Comments\r\n","import React from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { useState, useEffect } from 'react';\r\nimport Comments from './Comments';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n    cardHeader: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: \"center\",\r\n    },\r\n    nameText: {\r\n        paddingLeft: \"10px\",\r\n        cursor:'pointer',\r\n    },\r\n    postCard: {\r\n        margin: 20,\r\n        //background: \"#1E1E1E\"\r\n    },\r\n    postDivider: {\r\n        //background: \"#2d2d2d\"\r\n    },\r\n    deleteButton: {\r\n        //left: '95%',\r\n        top: '10%',\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    }\r\n});\r\n\r\nconst PostCard = (props) => {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    const [post, setPost] = useState([]);\r\n    const [showDeleteButton, setShowDeleteButton] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // Set the post from the props to the state\r\n        setPost(props.post);\r\n    }, [])\r\n\r\n    // Go to the profile page for the profile that made the post\r\n    const goToPosterProfile = () => {\r\n        if (!isSinglePostPage) {\r\n            history.push('/profile/' + post.user_id);\r\n        }\r\n    }\r\n\r\n    // Like a post\r\n    const likeAPost = async () => {\r\n        // If the user already likes the post, remove them from the list of profiles that like it\r\n        if (props.post.likes.includes(props.viewer_ID)) {\r\n            props.post.likes = props.post.likes.filter(item => item !== props.viewer_ID)\r\n        }\r\n        // Otherwise add them to it\r\n        else {\r\n            props.post.likes.push(props.viewer_ID);\r\n        }\r\n\r\n        // Update the post on the database\r\n        const newPost = await fetch(\"https://fast-coast-04774.herokuapp.com/posts/\" + props.post.post_id, {\r\n            method: \"PUT\",\r\n            headers : { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify(props.post)\r\n        });\r\n        // Set the updated post in the state\r\n        setPost(newPost);\r\n    }\r\n\r\n    // If the viewer ID is -1 the post is on a single post page\r\n    const isSinglePostPage = props.viewer_ID === -1;\r\n\r\n    return (\r\n        <div>\r\n            <Card className={classes.postCard} onMouseOver={()=>{if (!showDeleteButton && props.viewer_ID === props.post.user_id) {\r\n                setShowDeleteButton(true);\r\n            }}} onMouseLeave={()=>{if (showDeleteButton && props.viewer_ID === props.post.user_id) {\r\n                setShowDeleteButton(false);\r\n            }}}>\r\n                <CardContent>\r\n                    <div className={classes.cardHeader}>\r\n                        <Avatar style={{cursor:'pointer'}} src={props.post.user_img} onClick={goToPosterProfile}/>\r\n                        <h3 className={classes.nameText} onClick={goToPosterProfile}>{props.post.user_name}</h3>\r\n                        <div className={classes.grow} />\r\n                        {(!showDeleteButton) ? null : \r\n                            <IconButton className={classes.deleteButton} onClick={()=>{props.deleteCallback();}}>\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                        }\r\n                    </div>\r\n                    \r\n                    <Divider className={classes.postDivider}/>\r\n                    <p>{props.post.content}</p>\r\n                </CardContent>\r\n                <Divider className={classes.postDivider}/>\r\n                <CardActions>\r\n                    <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"space-around\"\r\n                    alignItems=\"center\"\r\n                    >\r\n                        <Button size={\"small\"} color={(props.post.likes.includes(props.viewer_ID)) ? \"primary\" : \"default\"} disabled={isSinglePostPage} startIcon={<ThumbUpIcon />} onClick={() => {\r\n                            // Like the post\r\n                            likeAPost();\r\n                        }}>Like ({props.post.likes.length})</Button>\r\n                        <Divider orientation=\"vertical\" flexItem className={classes.postDivider}/>\r\n                        <Button size={\"small\"} disabled={isSinglePostPage} startIcon={<CommentIcon />} onClick={() => {\r\n                            // Comment on the post\r\n                            props.commentCallback();\r\n                        }}>Comment</Button>\r\n                        <Divider orientation=\"vertical\" flexItem className={classes.postDivider}/>\r\n                        <Button size={\"small\"} startIcon={<ShareIcon />} onClick={() => {\r\n                            // Share the post\r\n                            props.setSnackbarOpen(true);\r\n                            navigator.clipboard.writeText(\"https://cmoyates.github.io/Social-Network-Frontend/#/post/\" + props.post.post_id);\r\n                        }}>Share</Button>\r\n                    </Grid>\r\n                    \r\n                </CardActions>\r\n                <Comments commentList={props.post.comments.commentList} isSinglePostPage={isSinglePostPage}/>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostCard","import React from 'react'\r\nimport PostCard from \"../components/PostCard.js\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from '@material-ui/core/Button';\r\nimport {useState, useEffect} from 'react';\r\n\r\nconst Feed = (props) => {\r\n    // Set the title of the page\r\n    document.title = \"Feed\";\r\n\r\n    // A bunch of state stuff\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    // Get all of the posts from profiles the user is following\r\n    const fetchPosts = async () => {\r\n        const res = await fetch('https://fast-coast-04774.herokuapp.com/posts/following/' + props.profile.profile_id);\r\n        const data = await res.json();\r\n        console.log(\"Posts\");\r\n        console.log(data);\r\n        // Store the posts in the state\r\n        setPosts(data);\r\n    }\r\n\r\n    // Get the posts when the page loads\r\n    useEffect(() => {\r\n        fetchPosts();\r\n    }, [props.loading])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Feed</h1>\r\n            <Button variant=\"contained\" color=\"primary\" size={\"medium\"} onClick={() => {props.setPostDialogOpen(true);}}><b>Post</b></Button>\r\n            <Container maxWidth=\"sm\">\r\n                {\r\n                    // Map the objects into PostCard components and display them\r\n                    posts.map((item) => (<PostCard key={item.post_id} post={item} viewer_ID={props.profile.profile_id} setSnackbarOpen={props.setSnackbarOpen} deleteCallback={()=>{\r\n                        props.setDeletingPost(item);\r\n                        props.setDeleteDialogOpen(true);\r\n                    }} commentCallback={() => {\r\n                        // When they click the comment button remember which post they're commenting on\r\n                        props.setCommentingPost(item);\r\n                        // And open the comment dialog\r\n                        props.setCommentDialogOpen(true);\r\n                    }}/>))\r\n                }\r\n            <br />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed","import React from 'react'\r\n\r\nconst PageNotFound = (props) => {\r\n    \r\n    document.title = \"Page not found\";\r\n\r\n    return (\r\n        <div>\r\n            <h1>404: Page not found</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageNotFound\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({component: Component, isAuth, ...rest}) => {\r\n    return (\r\n        <Route {...rest} render={\r\n            (props) => {\r\n                if (isAuth) {\r\n                    return <Component {...props}/>\r\n                }\r\n                else {\r\n                    return <Redirect to={\r\n                        {\r\n                            pathname: '/',\r\n                            state: {\r\n                                from: props.location\r\n                            }\r\n\r\n                        }\r\n                    }/>\r\n                }\r\n                \r\n            }\r\n        }/>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute\r\n","import React from 'react'\r\nimport PostCard from '../components/PostCard'\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useState, useEffect} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst SinglePostPage = () => {\r\n\r\n    let { id } = useParams();\r\n\r\n    const [post, setPost] = useState(null);\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n    const fetchPost = async () => {\r\n        setPost(null);\r\n        const res = await fetch('https://fast-coast-04774.herokuapp.com/posts/' + id);\r\n        const data = await res.json();\r\n        document.title = \"Social Network\"\r\n\r\n        console.log(data);\r\n        setPost(data);\r\n    }\r\n    useEffect( () => {\r\n        fetchPost();\r\n    }, [id])\r\n\r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n        return;\r\n        }\r\n    \r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    return (\r\n        (post) ? \r\n        <div>\r\n            <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\" style={{minHeight: \"100vh\"}}>\r\n                <Grid item>\r\n                    <PostCard key={post.post_id} post={post} viewer_ID={-1} setSnackbarOpen={setSnackbarOpen}/>\r\n                </Grid>\r\n            </Grid>\r\n            <Snackbar\r\n                open={snackbarOpen}\r\n                autoHideDuration={3000}\r\n                onClose={handleSnackbarClose}\r\n                message=\"Link copied to clipboard\"\r\n                action={\r\n                    <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleSnackbarClose}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                }\r\n            />\r\n        </div> :\r\n        null\r\n    )\r\n}\r\n\r\nexport default SinglePostPage","import React from 'react'\r\nimport {useParams, Redirect} from \"react-router-dom\";\r\nimport {useState, useEffect} from 'react';\r\nimport PostCard from '../components/PostCard';\r\nimport Container from \"@material-ui/core/Container\";\r\n//import { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst ProfilePage = (props) => {\r\n\r\n    let { id } = useParams();\r\n\r\n    const [pageProfile, setPageProfile] = useState(null);\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    const fetchPageProfile = async () => {\r\n        try {\r\n            setPageProfile(null);\r\n            const res = await fetch('https://fast-coast-04774.herokuapp.com/profiles/' + id);\r\n            const data = await res.json();\r\n            document.title = data.user_name\r\n\r\n            //console.log(data);\r\n            setPageProfile(data);\r\n            await fetchPageProfilePosts();\r\n        } catch (error) {\r\n            setPageProfile(-1);\r\n        }\r\n    }\r\n\r\n    const fetchPageProfilePosts = async () => {\r\n        const res = await fetch('https://fast-coast-04774.herokuapp.com/posts/user/' + id);\r\n        const data = await res.json();\r\n\r\n        //console.log(data);\r\n        setPosts(data);\r\n    }\r\n\r\n    const followProfile = async () => {\r\n        if (props.profile.profiles_following.includes(parseInt(id))) {\r\n            props.profile.profiles_following = props.profile.profiles_following.filter(item => item !== parseInt(id));\r\n        }\r\n        else {\r\n            props.profile.profiles_following.push(parseInt(id));\r\n        }\r\n        props.setLoading(true);\r\n        await fetch(\"https://fast-coast-04774.herokuapp.com/profiles/\" + props.profile.profile_id, {\r\n            method: \"PUT\",\r\n            headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify(props.profile)\r\n        });\r\n        await props.fetchFollowingProfiles;\r\n        props.setLoading(false);\r\n    }\r\n\r\n    useEffect( () => {\r\n        if (!pageProfile || pageProfile.profile_id !== parseInt(id)) {\r\n            fetchPageProfile();\r\n        } \r\n        else {\r\n            fetchPageProfilePosts();\r\n        }\r\n    }, [id, props.loading])\r\n\r\n    if (!pageProfile) {\r\n        return null;\r\n    }\r\n    else if (pageProfile === -1) {\r\n        return (<Redirect to={\r\n            {\r\n                pathname: '/404',\r\n                state: {\r\n                    from: props.location\r\n                }\r\n\r\n            }\r\n        }/>)\r\n    }\r\n    else {\r\n        return (\r\n            <div>\r\n                <h1>{pageProfile.user_name}</h1>\r\n                {(parseInt(id) !== props.profile.profile_id) ? <Button variant=\"outlined\" onClick={()=>{followProfile();}}>{(props.profile.profiles_following.includes(parseInt(id))) ? \"Following\" : \"Follow\"}</Button> : null}\r\n                <Container maxWidth=\"sm\">\r\n                    {posts.map((item) => (<PostCard key={item.post_id} post={item} viewer_ID={props.profile.profile_id} setSnackbarOpen={props.setSnackbarOpen} deleteCallback={()=>{\r\n                        props.setDeletingPost(item);\r\n                        props.setDeleteDialogOpen(true);\r\n                    }} commentCallback={() => {\r\n                        // When they click the comment button remember which post they're commenting on\r\n                        props.setCommentingPost(item);\r\n                        // And open the comment dialog\r\n                        props.setCommentDialogOpen(true);\r\n                    }}/>))}\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfilePage","import React from 'react'\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { GoogleLogout } from 'react-google-login';\r\n//import Brightness7Icon from '@material-ui/icons/Brightness7';\r\n//import Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n/*{minWidth: \"1px\", paddingLeft: \"13px\"} */\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    listIcon: {\r\n        minWidth: \"1px\",\r\n        paddingLeft: \"13px\",\r\n        //color: \"#ffffff\"\r\n    },\r\n    popupPaper: {\r\n        //background: \"#2D2D2D\"\r\n    }\r\n}))\r\n\r\nconst SettingsMenu = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Popper open={props.open} anchorEl={props.anchorEl} role={undefined} transition disablePortal>\r\n            {({ TransitionProps, placement }) => (\r\n                <Grow\r\n                {...TransitionProps}\r\n                style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                >\r\n                <Paper className={classes.popupPaper}>\r\n                    <ClickAwayListener onClickAway={props.handleClose}>\r\n                    <MenuList autoFocusItem={props.open} id=\"menu-list-grow\">\r\n                        <MenuItem onClick={()=>{props.feedClick();}}>\r\n                            <ListItemText>\r\n                                Feed\r\n                            </ListItemText>\r\n                            <ListItemIcon className={classes.listIcon}>\r\n                                <PublicIcon/>\r\n                            </ListItemIcon>\r\n                        </MenuItem>\r\n                        <MenuItem onClick={()=>{props.messagesClick();}}>\r\n                            <ListItemText>\r\n                                Messages\r\n                            </ListItemText>\r\n                            <ListItemIcon className={classes.listIcon}>\r\n                                <ChatIcon/>\r\n                            </ListItemIcon>\r\n                        </MenuItem>\r\n                        <MenuItem onClick={()=>{props.followingClick();}}>\r\n                            <ListItemText>\r\n                                Following\r\n                            </ListItemText>\r\n                            <ListItemIcon className={classes.listIcon}>\r\n                                <PeopleIcon/>\r\n                            </ListItemIcon>\r\n                        </MenuItem>\r\n                        <GoogleLogout\r\n                            clientId=\"399415598384-sgkom02f57l549gtnn877013fg004ke5.apps.googleusercontent.com\"\r\n                            render={renderProps => (\r\n                                <MenuItem onClick={renderProps.onClick}  disabled={renderProps.disabled}>\r\n                                    <ListItemText>\r\n                                        Logout\r\n                                    </ListItemText>\r\n                                    <ListItemIcon className={classes.listIcon}>\r\n                                        <ExitToAppIcon/>\r\n                                    </ListItemIcon>\r\n                                </MenuItem>\r\n                            )}\r\n                            buttonText=\"Logout\"\r\n                            onLogoutSuccess={props.logout}\r\n                        >\r\n                        </GoogleLogout>\r\n                        {/*\r\n                            <MenuItem onClick={props.darkModeClick}>\r\n                            <ListItemText>\r\n                                Toggle Dark Mode\r\n                            </ListItemText>\r\n                            <ListItemIcon className={classes.listIcon}>\r\n                            {(props.darkMode) ? <Brightness7Icon/> : <Brightness4Icon/>}\r\n                            </ListItemIcon>\r\n                            </MenuItem>\r\n                        */}\r\n                    </MenuList>\r\n                    </ClickAwayListener>\r\n                </Paper>\r\n                </Grow>\r\n            )}\r\n        </Popper>\r\n    )\r\n}\r\n\r\nexport default SettingsMenu\r\n","import React from 'react'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {useState} from 'react';\r\nimport {makeStyles, alpha} from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\n\r\n// All of this styling comes from this Material UI example:\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    }\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst ProfileSearchBar = (props) => {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleOpen = () => {\r\n        if (inputValue.length > 0) {\r\n            setOpen(true);\r\n        }\r\n    };\r\n    const handleInputChange = (event, newInputValue) => {\r\n        setInputValue(newInputValue);\r\n        setOpen(newInputValue.length > 0);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.search}>\r\n          <div className={classes.searchIcon}>\r\n            <SearchIcon />\r\n          </div>\r\n            <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                disableClearable\r\n                options={props.profiles}\r\n                getOptionLabel={(option)=>{return option.user_name}}\r\n                open={open}\r\n                onOpen={handleOpen}\r\n                onClose={() => setOpen(false)}\r\n                inputValue={inputValue}\r\n                onInputChange={handleInputChange}\r\n                onChange={(event, value)=>{history.push('/profile/' + value.profile_id);}}\r\n                popupIcon={null}\r\n                style={{hasPopupIcon: false, hasClearIcon: false}}\r\n                renderInput={(params) => {\r\n                  const {InputLabelProps,InputProps,...rest} = params;\r\n                  return <InputBase {...params.InputProps} className={null} placeholder=\"Search…\" classes={{root: classes.inputRoot, input: classes.inputInput}} inputProps={{ 'aria-label': 'search' }} {...rest}  />}}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileSearchBar\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {useState} from 'react';\r\n\r\nconst NewProfilePopup = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    \r\n    const followProfile = async (id) => {\r\n        if (props.profile.profiles_following.includes(parseInt(id))) {\r\n            props.profile.profiles_following = props.profile.profiles_following.filter(item => item !== parseInt(id));\r\n        }\r\n        else {\r\n            props.profile.profiles_following.push(parseInt(id));\r\n        }\r\n        setLoading(true);\r\n        await fetch(\"https://fast-coast-04774.herokuapp.com/profiles/\" + props.profile.profile_id, {\r\n            method: \"PUT\",\r\n            headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify(props.profile)\r\n        });\r\n        await props.fetchFollowingProfiles;\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Congrats on the new account!</DialogTitle>\r\n            <DialogContent>\r\n            <Typography align=\"center\">Here are some people to follow</Typography>\r\n                <Paper style={{maxHeight: 200, overflow: 'auto'}}>\r\n                    <List>\r\n                        {props.profiles.map((item, index)=>{return (item.profile_id === props.profile.profile_id) ? null : \r\n                            <ListItem key={index} style={{minWidth: \"300px\"}}>\r\n                                <ListItemAvatar>\r\n                                    <Avatar src={item.img_url}/>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={item.user_name} />\r\n                                <ListItemSecondaryAction>\r\n                                    <Button variant=\"outlined\" onClick={()=>{followProfile(item.profile_id);}}>{(props.profile.profiles_following.includes(item.profile_id)) ? \"Following\" : \"Follow\"}</Button>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        })}\r\n                    </List>\r\n                </Paper>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={()=>{props.handleClose();}} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default NewProfilePopup\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {useState} from 'react';\r\n\r\nfunction SubmitPostDialog(props) {\r\n\r\n    const [content, setContent] = useState(\"\");\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">{(props.comment) ? \"Comment\" : \"Post\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        value={content} onChange={(e) => {setContent(e.target.value)}}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"content\"\r\n                        label=\"Content\"\r\n                        fullWidth\r\n                        multiline\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={async () => {\r\n                    await props.handleSubmit({\r\n                        user_id: props.profile.profile_id,\r\n                        user_name: props.profile.user_name,\r\n                        user_img: props.profile.img_url,\r\n                        content: content\r\n                    });\r\n                    setContent(\"\");\r\n                }} color=\"primary\">\r\n                    Submit\r\n                </Button>\r\n                <Button onClick={()=>{\r\n                    props.handleClose();\r\n                    setContent(\"\");\r\n                }} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SubmitPostDialog;","import React from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { useState, useEffect, useRef, Fragment } from 'react';\r\nimport io from 'socket.io-client';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nlet socket;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    outerDiv: {\r\n        flex: 1,\r\n        display: \"flex\",\r\n        overflow: \"auto\",\r\n        flexDirection: \"row\"\r\n    },\r\n    innerDiv: {\r\n        display: \"flex\", overflow: \"auto\", flexDirection: \"column\"\r\n    },\r\n    listDiv: {\r\n        display: \"flex\",\r\n        minHeight: 'min-content',\r\n        flexDirection: \"column\"\r\n    },\r\n    localMessage: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: \"#fff\",\r\n        border: `2px solid ${theme.palette.primary.main}`,\r\n        borderRadius: \"5px\",\r\n        padding: \"5px\"\r\n    },\r\n    message: {\r\n        border: \"2px solid #dedede\",\r\n        borderRadius: \"5px\",\r\n        padding: \"5px\"\r\n    }\r\n}));\r\n\r\nconst Messages = (props) => {\r\n    const scrollRef = useRef(null);\r\n    const classes =  useStyles();\r\n\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [otherPersonName, setOtherPersonName]  = useState(\"\");\r\n\r\n    const ENDPOINT = \"https://fast-coast-04774.herokuapp.com\";\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        if (props.chats.length === 0) {\r\n            props.fetchChats();\r\n        }\r\n        else {\r\n            socket = io(ENDPOINT);\r\n\r\n            //console.log(socket);\r\n\r\n            setOtherPersonName(props.currentChat.participants.find((item)=>(item.profile_id !== props.profile.profile_id)).user_name.split(\" \")[0]);\r\n\r\n            const name = props.profile.user_name;\r\n            const room = props.currentChat.room_name;\r\n            const profile_id = props.profile.profile_id;\r\n            socket.emit('join', {name, profile_id, room}, (error) => {\r\n                if (error) alert(error);\r\n                console.log(`Joined ${room}`)\r\n                //console.log(props.currentChat.messages)\r\n                //setMessages(props.currentChat.messages.messageList)\r\n            });\r\n\r\n            return () => {\r\n\r\n                //console.log(props.currentChat.messages.messageList);\r\n                //console.log(messages)\r\n                socket.disconnect();\r\n                socket.off();\r\n            }\r\n        }\r\n\r\n        \r\n    }, [ENDPOINT, props.currentChat])\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.off('message').on('message', (message) => {\r\n                setMessages([...messages, message]);\r\n                if (scrollRef.current) {\r\n                    scrollRef.current.scrollIntoView({ behaviour: \"smooth\" });\r\n                }\r\n            })\r\n        }\r\n    }, [messages, props.currentChat])\r\n\r\n    useEffect(() => {\r\n        setMessages([]);\r\n        if (props.currentChat) {\r\n            setMessages(props.currentChat.messages.messageList);\r\n        }\r\n    }, [props.currentChat, props.chats])\r\n\r\n    /*useEffect(() => {\r\n        socket.on('roomData', (roomData) => {\r\n            console.log(\"Room Data\")\r\n            console.log(roomData)\r\n            setUsers(roomData.users);\r\n        })\r\n    })*/\r\n    \r\n    const sendMessage = (event) => {\r\n        \r\n        event.preventDefault();\r\n        \r\n        if (message) {\r\n            socket.emit('sendMessage', message, () => setMessage(''))\r\n        }\r\n    }\r\n\r\n    const switchChatRoom = (item) => {\r\n        if (props.currentChat.room_name !== item.room_name) {\r\n            props.currentChat.messages.messageList = messages;\r\n            props.setCurrentChat(item)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1>Messages</h1>\r\n            <div className={classes.outerDiv}>\r\n                <Paper style={{flex: 1}} className={classes.innerDiv}>\r\n                    <List className={classes.listDiv}>\r\n                        <ListItem button onClick={()=>{props.setNewChatDialogOpen(true);}}>\r\n                            <ListItemText>\r\n                                Start a new chat\r\n                            </ListItemText>\r\n                            <ListItemIcon>\r\n                                <AddIcon fontSize=\"large\"/>\r\n                            </ListItemIcon>\r\n                        </ListItem>\r\n                        {props.chats.map((item, index)=>{\r\n                            const otherProfile = item.participants.find((item)=>(item.profile_id !== props.profile.profile_id));\r\n                            const isActive = props.currentChat && item.chat_id === props.currentChat.chat_id;\r\n                            return (<div key={index}>\r\n                                <Divider />\r\n                                <ListItem button onClick={()=>{switchChatRoom(item)}} selected={isActive}>\r\n                                    <ListItemText>\r\n                                        Chat with {otherProfile.user_name}\r\n                                    </ListItemText>\r\n                                    <ListItemIcon>\r\n                                        <Avatar src={otherProfile.img_url}/>\r\n                                    </ListItemIcon>\r\n                                </ListItem>\r\n                            </div>)\r\n                        })}\r\n                    </List>\r\n                </Paper>\r\n                <Paper style={{flex: 2}} className={classes.innerDiv}>\r\n                    <div style={{flex: 1}} className={classes.innerDiv}>\r\n                    <List className={classes.listDiv}>\r\n                        {messages.map((item, index)=>{\r\n                            const isLocal = item.from_id === props.profile.profile_id\r\n                            return (\r\n                                <ListItem \r\n                                ref={(index + 1 === messages.length) ? scrollRef : null} \r\n                                style={{display:'flex', justifyContent:`flex-${(isLocal) ? \"end\" : \"start\"}`}} \r\n                                key={index}\r\n                                >\r\n                                    <div style={{display: \"flex\", flexDirection: \"column\", alignItems: `flex-${(isLocal) ? \"end\" : \"start\"}`}}>\r\n                                        <div className={(isLocal) ? classes.localMessage : classes.message}>{item.text}</div>\r\n                                        <div style={{fontSize: \"0.75em\"}}>{(isLocal) ? \"You\" : otherPersonName}</div>\r\n                                    </div>\r\n                                </ListItem>\r\n                            );\r\n                        })}\r\n                    </List>\r\n                    </div>\r\n                    <TextField id=\"outlined-basic\" variant=\"outlined\" \r\n                    onKeyPress={event => event.key === 'Enter' ? sendMessage(event) : null}\r\n                    value={message} \r\n                    autoComplete='off'\r\n                    onChange={(event) => setMessage(event.target.value)}\r\n                    style={{width: \"100%\"}}\r\n                    />\r\n                </Paper>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Messages","import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst DeletePostDialog = (props) => {\r\n\r\n    return (\r\n        <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Are you sure you want to delete this post?</DialogTitle>\r\n            <DialogContent>\r\n                \"{(props.post) ? props.post.content : null}\"\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={async () => {\r\n                    props.handleClose();\r\n                    await props.handleDelete();\r\n                }} color=\"primary\">\r\n                    Yes\r\n                </Button>\r\n                <Button onClick={()=>{\r\n                    props.handleClose();\r\n                }} color=\"primary\">\r\n                    No\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default DeletePostDialog\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst FollowingDialog = (props) => {\r\n    let history = useHistory();\r\n\r\n    const notFollowingAnyone = props.profiles.length === 1;\r\n\r\n    return (\r\n        <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">{(notFollowingAnyone) ? \"You're not following anyone!\" : props.title}</DialogTitle>\r\n            <DialogContent>\r\n                {(notFollowingAnyone) ? <div>\r\n                    <Typography align=\"center\">Try typing some names into the searchbar!</Typography>\r\n                    <Typography align=\"center\"></Typography>\r\n                </div> : \r\n                (<Paper style={{maxHeight: 300, overflow: 'auto'}}>\r\n                    <List>\r\n                        {props.profiles.map((item, index)=>{return (item.profile_id === props.profile.profile_id) ? null : \r\n                            <ListItem key={index} button onClick={()=>{props.handleClose(); props.clickCallback(item);}}>\r\n                                <ListItemAvatar>\r\n                                    <Avatar src={item.img_url}/>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={item.user_name} />\r\n                            </ListItem>\r\n                        })}\r\n                    </List>\r\n                </Paper>)}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={()=>{props.handleClose();}} color=\"primary\">\r\n                    Close\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default FollowingDialog\r\n","import React, { cloneElement } from 'react'\r\n//import Button from '@material-ui/core/Button';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n//import CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { createTheme, makeStyles, ThemeProvider, alpha } from '@material-ui/core/styles';\r\nimport {useState, useEffect, useRef} from 'react';\r\nimport SettingsMenu from './SettingsMenu';\r\nimport ProfileSearchBar from '../components/ProfileSearchBar.js';\r\nimport { useHistory } from 'react-router-dom';\r\nimport NewProfilePopup from './NewProfilePopup';\r\nimport SubmitPostDialog from './SubmitPostDialog';\r\nimport DeletePostDialog from './DeletePostDialog';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FollowingDialog from './FollowingDialog';\r\n\r\n// Some styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n          backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n          marginLeft: theme.spacing(3),\r\n          width: 'auto',\r\n        },\r\n      },\r\n      searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      inputRoot: {\r\n        color: 'inherit',\r\n      },\r\n      inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n          width: '20ch',\r\n        },\r\n      },\r\n}));\r\n\r\nconst LoggedInPage = (props) => {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    // A bunch of state stuff\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [nppOpen, setNppOpen] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [profiles, setProfiles] = useState([]);\r\n    const [followingProfiles, setFollowingProfiles] = useState([]);\r\n    const [commentingPost, setCommentingPost] = useState(null);\r\n    const [postDialogOpen, setPostDialogOpen] = useState(false);\r\n    const [commentDialogOpen, setCommentDialogOpen] = useState(false);\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n    const [deletingPost, setDeletingPost] = useState(null);\r\n    const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n    const [followingDialogOpen, setFollowingDialogOpen] = useState(false);\r\n    const [newChatDialogOpen, setNewChatDialogOpen] = useState(false);\r\n    const [currentChat, setCurrentChat] = useState(null);\r\n    const [chats, setChats] = useState([]);\r\n\r\n    const anchorRef = useRef(null);\r\n\r\n    // Log the user out\r\n    const logout = () => {\r\n        console.log(\"Logout Successful\");\r\n        // Forget the profile\r\n        props.setProfile([]);\r\n        // Revoke their authorisation\r\n        props.setIsAuth(false);\r\n    }\r\n\r\n    // Get all of the profiles (for use in the searchbar)\r\n    const fetchProfiles = async () => {\r\n        const res = await fetch('https://fast-coast-04774.herokuapp.com/profiles');\r\n        const data = await res.json();\r\n        // And save it to the state\r\n        setProfiles(data);\r\n        //console.log(data);\r\n    }\r\n\r\n    const fetchFollowingProfiles = async () => {\r\n        const res = await fetch('https://fast-coast-04774.herokuapp.com/profiles/following/' + props.profile.profile_id);\r\n        const data = await res.json();\r\n        // And save it to the state\r\n        setFollowingProfiles(data);\r\n    }\r\n\r\n    // Close the menu\r\n    const handleMenuClose = (event) => {\r\n        if (!(anchorRef.current && anchorRef.current.contains(event.target))) {\r\n            setMenuOpen(false);\r\n        }\r\n    };\r\n\r\n    // Submit a post\r\n    const handleSubmitPost = async (post) => {\r\n        // Close the post dialog\r\n        setPostDialogOpen(false);\r\n        // Add the post to the database\r\n        await fetch(\"https://fast-coast-04774.herokuapp.com/posts\", {\r\n            method: \"POST\",\r\n            headers : { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify(post)\r\n        });\r\n        // Get all of the posts (including the new one)\r\n        //await fetchPosts();\r\n        setLoading(!loading);\r\n    };\r\n\r\n    // Submit a comment\r\n    const handleSubmitComment = async (comment) => {\r\n        // Close the comment dialog\r\n        setCommentDialogOpen(false);\r\n        // Add the comment object to the list of comments for the post you're commenting on\r\n        commentingPost.comments.commentList.push(comment);\r\n        // Update that post on the database\r\n        await fetch(\"https://fast-coast-04774.herokuapp.com/posts/\" + commentingPost.post_id, {\r\n            method: \"PUT\",\r\n            headers : { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify(commentingPost)\r\n        });\r\n    }\r\n\r\n    const handleDeleteAPost = async () => {\r\n        \r\n        await fetch(\"https://fast-coast-04774.herokuapp.com/posts/\" + deletingPost.post_id, {\r\n            method: \"DELETE\",\r\n            headers : { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        });\r\n        setLoading(!loading);\r\n        //await fetchPosts();\r\n    }\r\n\r\n    // Close the snackbar\r\n    const handleSnackbarClose = (event, reason) => {\r\n        // If the reason is not clicking away\r\n        if (reason !== 'clickaway') {\r\n            setSnackbarOpen(false);\r\n        }\r\n    };\r\n\r\n    const showFollowingPopup = () => {\r\n        setMenuOpen(false);\r\n        setFollowingDialogOpen(true);\r\n    }\r\n\r\n    const startChat = async (otherProfile) => {\r\n\r\n        const participants = [otherProfile, props.profile].sort((a, b)=>(a.profile_id-b.profile_id));\r\n        \r\n        const chat = {\r\n            room_name: `${participants[0].profile_id}-${participants[1].profile_id}`,\r\n            participants: participants,\r\n        }\r\n\r\n        const res = await fetch(\"https://fast-coast-04774.herokuapp.com/chats/room/\" + chat.room_name, {\r\n            method: \"GET\",\r\n            headers : { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        });\r\n        \r\n        let data;\r\n        try {\r\n            data = await res.json();\r\n            console.log(\"You already have a chat with this person\");\r\n        } catch (error) {\r\n            const res = await fetch(\"https://fast-coast-04774.herokuapp.com/chats\", {\r\n                method: \"POST\",\r\n                headers : { \r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                },\r\n                body: JSON.stringify(chat)\r\n            });\r\n            data = await res.json();\r\n            await fetchChats();\r\n        }\r\n        setCurrentChat(data);\r\n        console.log(\"done\")\r\n    }\r\n\r\n    const fetchChats = async () => {\r\n        const res = await fetch('https://fast-coast-04774.herokuapp.com/chats/profile/' + props.profile.profile_id);\r\n        const data = await res.json();\r\n        // Store the posts in the state\r\n        setChats(data);\r\n\r\n        if (data.length !== 0) {\r\n            setCurrentChat(data[0]);\r\n        }\r\n        else {\r\n            console.log(\"No rooms\");\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    /*const toggleDarkMode = async () => {\r\n        props.profile.dark_mode = !props.profile.dark_mode;\r\n        setLoading(true);\r\n        await fetch(\"https://fast-coast-04774.herokuapp.com/profiles/\" + props.profile.profile_id, {\r\n            method: \"PUT\",\r\n            headers : { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify(props.profile)\r\n        });\r\n        setLoading(false);\r\n        props.setDarkMode(props.profile.dark_mode);\r\n        console.log(props.profile.dark_mode)\r\n    }*/\r\n\r\n    // Get all of the profiles when the page loads\r\n    useEffect(() => {\r\n        fetchProfiles();\r\n        fetchFollowingProfiles();\r\n        setNppOpen(false);\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{height: \"100vh\", display: \"flex\", flexDirection: \"column\"}}>\r\n            <div>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                    <Typography className={classes.title} variant=\"h5\" noWrap style={{cursor:'pointer'}} onClick={()=>{history.push('/feed');}}>\r\n                        Social Network\r\n                    </Typography>\r\n                    <ProfileSearchBar profiles={profiles}/>\r\n                    <div className={classes.grow} />\r\n                    <Typography style={{cursor:'pointer'}} onClick={()=>{history.push('/profile/' + props.profile.profile_id);}}>\r\n                        {props.profile.user_name}\r\n                    </Typography>\r\n                    <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={() => {setMenuOpen(!menuOpen)}} ref={anchorRef} \r\n                        aria-controls={false ? 'menu-list-grow' : undefined} aria-haspopup=\"true\">\r\n                        <Avatar src={props.profile.img_url}/>\r\n                    </IconButton>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n            {cloneElement(props.page, {setDeletingPost: setDeletingPost, setDeleteDialogOpen: setDeleteDialogOpen, setCommentingPost: setCommentingPost, setCommentDialogOpen: setCommentDialogOpen, setPostDialogOpen: setPostDialogOpen, setSnackbarOpen: setSnackbarOpen, setNewChatDialogOpen: setNewChatDialogOpen, currentChat: currentChat, setCurrentChat: setCurrentChat, chats: chats, fetchChats: fetchChats, loading: loading, setLoading: setLoading, fetchFollowingProfiles: fetchFollowingProfiles})}\r\n            <SettingsMenu open={menuOpen} anchorEl={anchorRef.current} handleClose={handleMenuClose} /*darkModeClick={() => {toggleDarkMode(); setMenuOpen(false);}} darkMode={props.darkMode}*/ followingClick={showFollowingPopup} feedClick={()=>{history.push('/feed/');}} messagesClick={()=>{history.push('/messages/');}} logout={logout}/>\r\n            <NewProfilePopup open={nppOpen} handleClose={()=>{setNppOpen(false);}} profiles={profiles} profile={props.profile} fetchFollowingProfiles={fetchFollowingProfiles}/>\r\n            <SubmitPostDialog comment={false} open={postDialogOpen} handleClose={() => {setPostDialogOpen(false);}} handleSubmit={handleSubmitPost} profile={props.profile}/>\r\n            <SubmitPostDialog comment={true} open={commentDialogOpen} handleClose={() => {setCommentDialogOpen(false);}} handleSubmit={handleSubmitComment} profile={props.profile} post={commentingPost}/>\r\n            <DeletePostDialog post={deletingPost} open={deleteDialogOpen} handleClose={()=>{setDeleteDialogOpen(false);}} handleDelete={handleDeleteAPost}/>\r\n            <FollowingDialog title=\"These are the people you follow:\" profile={props.profile} open={followingDialogOpen} handleClose={()=>{setFollowingDialogOpen(false);}} profiles={followingProfiles} clickCallback={(item)=>{history.push('/profile/' + item.profile_id);}}/>\r\n            <FollowingDialog title=\"Pick someone to chat with:\" profile={props.profile} open={newChatDialogOpen} handleClose={()=>{setNewChatDialogOpen(false);}} profiles={followingProfiles} clickCallback={(item)=>{startChat(item);}}/>\r\n            <Snackbar\r\n                open={snackbarOpen}\r\n                autoHideDuration={3000}\r\n                onClose={handleSnackbarClose}\r\n                message=\"Link copied to clipboard\"\r\n                action={\r\n                    <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleSnackbarClose}>\r\n                        <CloseIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoggedInPage","import './App.css';\nimport {HashRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\nimport { createTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Home from './pages/Home';\nimport Feed from './pages/Feed';\nimport PageNotFound from './pages/PageNotFound';\nimport {useState} from 'react';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport SinglePostPage from './pages/SinglePostPage';\nimport ProfilePage from './pages/ProfilePage';\nimport LoggedInPage from './components/LoggedInPage';\nimport Messages from './pages/Messages';\n\n\n/*const useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: \"#000000\"\n  }\n}));*/\n\nfunction App() {\n\n  const [profile, setProfile] = useState([]);\n  const [isAuth, setIsAuth] = useState(false);\n  const [firstTime, setFirstTime] = useState(false);\n\n  const theme = createTheme({\n    palette: {\n      //type: \"dark\"\n    },\n    backgroundColor: \"#000000\"\n  })\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <div className={(false) ? \"App Dark\" : \"App\"}>\n          <Switch>\n            <Route exact path=\"/\" component={()=><Home setProfile={setProfile} setIsAuth={setIsAuth} isAuth={isAuth} setFirstTime={setFirstTime}/>}/>\n            <ProtectedRoute path=\"/Feed\" isAuth={isAuth} component={(props)=><LoggedInPage {...props} profile={profile} setProfile={setProfile} isAuth={isAuth} setIsAuth={setIsAuth} firstTime={firstTime}/*darkMode={darkMode} setDarkMode={setDarkMode}*/ page={<Feed profile={profile}/>}/>}/>\n            <ProtectedRoute path=\"/Messages\" isAuth={isAuth} component={(props)=><LoggedInPage {...props} profile={profile} setProfile={setProfile} isAuth={isAuth} setIsAuth={setIsAuth} firstTime={firstTime} page={<Messages profile={profile}/>}/>}/>\n            <Route exact path=\"/404\" component={PageNotFound}/>\n            <Route path=\"/post/:id\" component={SinglePostPage}/>\n            <ProtectedRoute path=\"/profile/:id\" profile={profile} isAuth={isAuth} component={(props)=><LoggedInPage {...props} profile={profile} setProfile={setProfile} isAuth={isAuth} setIsAuth={setIsAuth} /*darkMode={darkMode} setDarkMode={setDarkMode}*/ page={<ProfilePage profile={profile}/>}/>}/>\n            <Redirect to=\"/404\"/>\n          </Switch>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode style={{height: \"100%\"}}>\n    <App style={{height: \"100%\"}}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}